

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Sep 04 16:24:42 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  001EA4                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _anio
    50  001EA4  000F               	dw	15
    51                           
    52                           ;initializer for _dia
    53  001EA6  0008               	dw	8
    54                           
    55                           ;initializer for _diasem
    56  001EA8  0003               	dw	3
    57                           
    58                           ;initializer for _hora
    59  001EAA  0012               	dw	18
    60                           
    61                           ;initializer for _mes
    62  001EAC  0009               	dw	9
    63                           
    64                           ;initializer for _minuto
    65  001EAE  001E               	dw	30
    66                           
    67                           ;initializer for _state_alarm
    68  001EB0  02                 	db	2
    69                           
    70                           	psect	smallconst
    71  000F00                     __psmallconst:
    72                           	opt stack 0
    73  000F00  00                 	db	0
    74  000F01                     _dpowers:
    75                           	opt stack 0
    76  000F01  0001               	dw	1
    77  000F03  000A               	dw	10
    78  000F05  0064               	dw	100
    79  000F07  03E8               	dw	1000
    80  000F09  2710               	dw	10000
    81  000F0B                     __end_of_dpowers:
    82                           	opt stack 0
    83  000F0B                     _LCD_INIT_STRING:
    84                           	opt stack 0
    85  000F0B  28                 	db	40
    86  000F0C  0C                 	db	12
    87  000F0D  01                 	db	1
    88  000F0E  06                 	db	6
    89  000F0F                     __end_of_LCD_INIT_STRING:
    90                           	opt stack 0
    91  000F0F                     STR_1:
    92                           
    93                           ; BSR set to: 15
    94  000F0F  20                 	db	32
    95  000F10  20                 	db	32
    96  000F11  20                 	db	32
    97  000F12  20                 	db	32
    98  000F13  20                 	db	32
    99  000F14  20                 	db	32
   100  000F15  20                 	db	32
   101  000F16  20                 	db	32
   102  000F17  20                 	db	32
   103  000F18  20                 	db	32
   104  000F19  20                 	db	32
   105  000F1A  20                 	db	32
   106  000F1B  20                 	db	32
   107  000F1C  20                 	db	32
   108  000F1D  20                 	db	32
   109  000F1E  20                 	db	32
   110  000F1F  20                 	db	32
   111  000F20  20                 	db	32
   112  000F21  20                 	db	32
   113  000F22  20                 	db	32
   114  000F23  20                 	db	32
   115  000F24  20                 	db	32
   116  000F25  20                 	db	32
   117  000F26  20                 	db	32
   118  000F27  20                 	db	32
   119  000F28  20                 	db	32
   120  000F29  20                 	db	32
   121  000F2A  20                 	db	32
   122  000F2B  20                 	db	32
   123  000F2C  20                 	db	32
   124  000F2D  20                 	db	32
   125  000F2E  20                 	db	32
   126  000F2F  00                 	db	0
   127  000F30                     STR_20:
   128                           
   129                           ; BSR set to: 15
   130  000F30  25                 	db	37
   131  000F31  30                 	db	48	;'0'
   132  000F32  32                 	db	50	;'2'
   133  000F33  75                 	db	117	;'u'
   134  000F34  2F                 	db	47
   135  000F35  25                 	db	37
   136  000F36  30                 	db	48	;'0'
   137  000F37  32                 	db	50	;'2'
   138  000F38  75                 	db	117	;'u'
   139  000F39  2F                 	db	47
   140  000F3A  25                 	db	37
   141  000F3B  30                 	db	48	;'0'
   142  000F3C  32                 	db	50	;'2'
   143  000F3D  75                 	db	117	;'u'
   144  000F3E  00                 	db	0
   145  000F3F                     STR_2:
   146                           
   147                           ; BSR set to: 15
   148  000F3F  6E                 	db	110	;'n'
   149  000F40  75                 	db	117	;'u'
   150  000F41  6C                 	db	108	;'l'
   151  000F42  6C                 	db	108	;'l'
   152  000F43  20                 	db	32
   153  000F44  70                 	db	112	;'p'
   154  000F45  6F                 	db	111	;'o'
   155  000F46  69                 	db	105	;'i'
   156  000F47  6E                 	db	110	;'n'
   157  000F48  74                 	db	116	;'t'
   158  000F49  65                 	db	101	;'e'
   159  000F4A  72                 	db	114	;'r'
   160  000F4B  00                 	db	0
   161  000F4C                     STR_22:
   162                           
   163                           ; BSR set to: 15
   164  000F4C  57                 	db	87	;'W'
   165  000F4D  41                 	db	65	;'A'
   166  000F4E  52                 	db	82	;'R'
   167  000F4F  4E                 	db	78	;'N'
   168  000F50  49                 	db	73	;'I'
   169  000F51  4E                 	db	78	;'N'
   170  000F52  47                 	db	71	;'G'
   171  000F53  21                 	db	33
   172  000F54  21                 	db	33
   173  000F55  21                 	db	33
   174  000F56  00                 	db	0
   175  000F57                     STR_21:
   176                           
   177                           ; BSR set to: 15
   178  000F57  25                 	db	37
   179  000F58  30                 	db	48	;'0'
   180  000F59  32                 	db	50	;'2'
   181  000F5A  75                 	db	117	;'u'
   182  000F5B  3A                 	db	58	;':'
   183  000F5C  25                 	db	37
   184  000F5D  30                 	db	48	;'0'
   185  000F5E  32                 	db	50	;'2'
   186  000F5F  75                 	db	117	;'u'
   187  000F60  00                 	db	0
   188  000F61                     STR_3:
   189                           
   190                           ; BSR set to: 15
   191  000F61  65                 	db	101	;'e'
   192  000F62  78                 	db	120	;'x'
   193  000F63  63                 	db	99	;'c'
   194  000F64  65                 	db	101	;'e'
   195  000F65  70                 	db	112	;'p'
   196  000F66  74                 	db	116	;'t'
   197  000F67  69                 	db	105	;'i'
   198  000F68  6F                 	db	111	;'o'
   199  000F69  6E                 	db	110	;'n'
   200  000F6A  00                 	db	0
   201  000F6B                     STR_26:
   202                           
   203                           ; BSR set to: 15
   204  000F6B  54                 	db	84	;'T'
   205  000F6C  52                 	db	82	;'R'
   206  000F6D  49                 	db	73	;'I'
   207  000F6E  47                 	db	71	;'G'
   208  000F6F  47                 	db	71	;'G'
   209  000F70  45                 	db	69	;'E'
   210  000F71  44                 	db	68	;'D'
   211  000F72  00                 	db	0
   212  000F73                     STR_4:
   213                           
   214                           ; BSR set to: 15
   215  000F73  25                 	db	37
   216  000F74  30                 	db	48	;'0'
   217  000F75  31                 	db	49	;'1'
   218  000F76  75                 	db	117	;'u'
   219  000F77  00                 	db	0
   220  000F78                     STR_25:
   221                           
   222                           ; BSR set to: 15
   223  000F78  4F                 	db	79	;'O'
   224  000F79  46                 	db	70	;'F'
   225  000F7A  46                 	db	70	;'F'
   226  000F7B  00                 	db	0
   227  000F7C                     STR_24:
   228                           
   229                           ; BSR set to: 15
   230  000F7C  4F                 	db	79	;'O'
   231  000F7D  4E                 	db	78	;'N'
   232  000F7E  00                 	db	0
   233  000F7F                     STR_18:
   234                           
   235                           ; BSR set to: 15
   236  000F7F  23                 	db	35
   237  000F80  00                 	db	0
   238  000F81                     STR_16:
   239                           
   240                           ; BSR set to: 15
   241  000F81  2A                 	db	42
   242  000F82  00                 	db	0
   243  000F83                     STR_7:
   244                           
   245                           ; BSR set to: 15
   246  000F83  41                 	db	65	;'A'
   247  000F84  00                 	db	0
   248  000F85                     STR_11:
   249                           
   250                           ; BSR set to: 15
   251  000F85  42                 	db	66	;'B'
   252  000F86  00                 	db	0
   253  000F87                     STR_15:
   254                           
   255                           ; BSR set to: 15
   256  000F87  43                 	db	67	;'C'
   257  000F88  00                 	db	0
   258  0000                     
   259                           ; #config settings
   260  000F89  00                 	db	0	; dummy byte at the end
   261  0000                     
   262                           	psect	nvCOMRAM
   263  000043                     __pnvCOMRAM:
   264                           	opt stack 0
   265  000043                     _anio_d:
   266                           	opt stack 0
   267  000043                     	ds	1
   268  000044                     _anio_u:
   269                           	opt stack 0
   270  000044                     	ds	1
   271  000045                     _dia_semana:
   272                           	opt stack 0
   273  000045                     	ds	1
   274  000046                     _fecha_d:
   275                           	opt stack 0
   276  000046                     	ds	1
   277  000047                     _fecha_u:
   278                           	opt stack 0
   279  000047                     	ds	1
   280  000048                     _hora_d:
   281                           	opt stack 0
   282  000048                     	ds	1
   283  000049                     _hora_u:
   284                           	opt stack 0
   285  000049                     	ds	1
   286  00004A                     _mes_d:
   287                           	opt stack 0
   288  00004A                     	ds	1
   289  00004B                     _mes_u:
   290                           	opt stack 0
   291  00004B                     	ds	1
   292  00004C                     _minuto_d:
   293                           	opt stack 0
   294  00004C                     	ds	1
   295  00004D                     _minuto_u:
   296                           	opt stack 0
   297  00004D                     	ds	1
   298  00004E                     _segundo_d:
   299                           	opt stack 0
   300  00004E                     	ds	1
   301  00004F                     _segundo_u:
   302                           	opt stack 0
   303  00004F                     	ds	1
   304  0000                     _ANCON0	set	3912
   305  0000                     _ANCON1	set	3913
   306  0000                     _RTCCFG	set	3903
   307  0000                     _RTCCFGbits	set	3903
   308  0000                     _ADCON0	set	4034
   309  0000                     _ADCON1	set	4033
   310  0000                     _ALRMCFGbits	set	3985
   311  0000                     _EECON2	set	4007
   312  0000                     _INTCONbits	set	4082
   313  0000                     _LATAbits	set	3977
   314  0000                     _LATBbits	set	3978
   315  0000                     _OSCCONbits	set	4051
   316  0000                     _OSCTUNEbits	set	3995
   317  0000                     _PIE3bits	set	4003
   318  0000                     _PORTAbits	set	3968
   319  0000                     _PORTCbits	set	3970
   320  0000                     _RTCVALH	set	3993
   321  0000                     _RTCVALL	set	3992
   322  0000                     _T1CONbits	set	4045
   323  0000                     _TRISA	set	3986
   324  0000                     _TRISB	set	3987
   325  0000                     _TRISBbits	set	3987
   326  0000                     _TRISC	set	3988
   327                           
   328                           	psect	cinit
   329  001D66                     __pcinit:
   330                           	opt stack 0
   331  001D66                     start_initialization:
   332                           	opt stack 0
   333  001D66                     __initialization:
   334                           	opt stack 0
   335                           
   336                           ; Clear objects allocated to BANK0 (44 bytes)
   337  001D66  EE00  F060         	lfsr	0,__pbssBANK0
   338  001D6A  0E2C               	movlw	44
   339  001D6C                     clear_0:
   340  001D6C  6AEE               	clrf	postinc0,c
   341  001D6E  06E8               	decf	wreg,f,c
   342  001D70  E1FD               	bnz	clear_0
   343                           
   344                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   345  001D72  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   346                           
   347                           ; Clear objects allocated to COMRAM (27 bytes)
   348  001D74  EE00  F028         	lfsr	0,__pbssCOMRAM
   349  001D78  0E1B               	movlw	27
   350  001D7A                     clear_1:
   351  001D7A  6AEE               	clrf	postinc0,c
   352  001D7C  06E8               	decf	wreg,f,c
   353  001D7E  E1FD               	bnz	clear_1
   354                           
   355                           ; Initialize objects allocated to COMRAM (13 bytes)
   356                           ; load TBLPTR registers with __pidataCOMRAM
   357  001D80  0EA4               	movlw	low __pidataCOMRAM
   358  001D82  6EF6               	movwf	tblptrl,c
   359  001D84  0E1E               	movlw	high __pidataCOMRAM
   360  001D86  6EF7               	movwf	tblptrh,c
   361  001D88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   362  001D8A  6EF8               	movwf	tblptru,c
   363  001D8C  EE00  F050         	lfsr	0,__pdataCOMRAM
   364  001D90  EE10 F00D          	lfsr	1,13
   365  001D94                     copy_data0:
   366  001D94  0009               	tblrd		*+
   367  001D96  CFF5 FFEE          	movff	tablat,postinc0
   368  001D9A  50E5               	movf	postdec1,w,c
   369  001D9C  50E1               	movf	fsr1l,w,c
   370  001D9E  E1FA               	bnz	copy_data0
   371  001DA0                     end_of_initialization:
   372                           	opt stack 0
   373  001DA0                     __end_of__initialization:
   374                           	opt stack 0
   375  001DA0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   376  001DA2  6EF8               	movwf	tblptru,c
   377  001DA4  0100               	movlb	0
   378  001DA6  EFFD  F00C         	goto	_main	;jump to C main() function
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           wreg	equ	0xFE8
   385                           postdec1	equ	0xFE5
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	bitbssCOMRAM
   389  0002E8                     __pbitbssCOMRAM:
   390                           	opt stack 0
   391  0002E8                     _flag:
   392                           	opt stack 0
   393  0002E8                     	ds	1
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           postdec1	equ	0xFE5
   401                           fsr1l	equ	0xFE1
   402                           
   403                           	psect	bssCOMRAM
   404  000028                     __pbssCOMRAM:
   405                           	opt stack 0
   406  000028                     _RtccTimeVal:
   407                           	opt stack 0
   408  000028                     	ds	4
   409  00002C                     _a:
   410                           	opt stack 0
   411  00002C                     	ds	2
   412  00002E                     _b:
   413                           	opt stack 0
   414  00002E                     	ds	2
   415  000030                     _c:
   416                           	opt stack 0
   417  000030                     	ds	2
   418  000032                     _i:
   419                           	opt stack 0
   420  000032                     	ds	2
   421  000034                     _j:
   422                           	opt stack 0
   423  000034                     	ds	2
   424  000036                     _k:
   425                           	opt stack 0
   426  000036                     	ds	2
   427  000038                     _segundo:
   428                           	opt stack 0
   429  000038                     	ds	2
   430  00003A                     _key:
   431                           	opt stack 0
   432  00003A                     	ds	1
   433  00003B                     _RtccDate:
   434                           	opt stack 0
   435  00003B                     	ds	4
   436  00003F                     _RtccTime:
   437                           	opt stack 0
   438  00003F                     	ds	4
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	dataCOMRAM
   449  000050                     __pdataCOMRAM:
   450                           	opt stack 0
   451  000050                     _anio:
   452                           	opt stack 0
   453  000050                     	ds	2
   454  000052                     _dia:
   455                           	opt stack 0
   456  000052                     	ds	2
   457  000054                     _diasem:
   458                           	opt stack 0
   459  000054                     	ds	2
   460  000056                     _hora:
   461                           	opt stack 0
   462  000056                     	ds	2
   463  000058                     _mes:
   464                           	opt stack 0
   465  000058                     	ds	2
   466  00005A                     _minuto:
   467                           	opt stack 0
   468  00005A                     	ds	2
   469  00005C                     _state_alarm:
   470                           	opt stack 0
   471  00005C                     	ds	1
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	bssBANK0
   482  000060                     __pbssBANK0:
   483                           	opt stack 0
   484  000060                     _RtccAlrmTimeDate:
   485                           	opt stack 0
   486  000060                     	ds	8
   487  000068                     _RtccTimeDate:
   488                           	opt stack 0
   489  000068                     	ds	8
   490  000070                     _Rtcc_read_TimeDate:
   491                           	opt stack 0
   492  000070                     	ds	8
   493  000078                     _buffer2:
   494                           	opt stack 0
   495  000078                     	ds	20
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           postinc0	equ	0xFEE
   501                           wreg	equ	0xFE8
   502                           postdec1	equ	0xFE5
   503                           fsr1l	equ	0xFE1
   504                           
   505                           	psect	cstackCOMRAM
   506  000001                     __pcstackCOMRAM:
   507                           	opt stack 0
   508  000001                     ??_isdigit:
   509  000001                     ??_lcd_send_nibble:
   510  000001                     ??__delay_s:
   511  000001                     ?___wmul:
   512                           	opt stack 0
   513  000001                     ?___awdiv:
   514                           	opt stack 0
   515  000001                     ?___lwdiv:
   516                           	opt stack 0
   517  000001                     Delay100TCYx@unit:
   518                           	opt stack 0
   519  000001                     Delay1KTCYx@unit:
   520                           	opt stack 0
   521  000001                     RtccWriteDate@pDt:
   522                           	opt stack 0
   523  000001                     RtccWriteTime@pTm:
   524                           	opt stack 0
   525  000001                     ___wmul@multiplier:
   526                           	opt stack 0
   527  000001                     ___awdiv@dividend:
   528                           	opt stack 0
   529  000001                     ___lwdiv@dividend:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x0
   533  000001                     	ds	1
   534  000002                     lcd_send_nibble@nibble:
   535                           	opt stack 0
   536  000002                     _isdigit$2329:
   537                           	opt stack 0
   538  000002                     __delay_s@it:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x1
   542  000002                     	ds	1
   543  000003                     lcd_send_byte@n:
   544                           	opt stack 0
   545  000003                     RtccWriteDate@di:
   546                           	opt stack 0
   547  000003                     RtccWriteTime@di:
   548                           	opt stack 0
   549  000003                     isdigit@c:
   550                           	opt stack 0
   551  000003                     ___wmul@multiplicand:
   552                           	opt stack 0
   553  000003                     ___awdiv@divisor:
   554                           	opt stack 0
   555  000003                     ___lwdiv@divisor:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  000003                     	ds	1
   560  000004                     lcd_send_byte@address:
   561                           	opt stack 0
   562  000004                     __delay_s@seg:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x3
   566  000004                     	ds	1
   567  000005                     lcd_init@i:
   568                           	opt stack 0
   569  000005                     lcd_gotoxy@y:
   570                           	opt stack 0
   571  000005                     lcd_comand@d:
   572                           	opt stack 0
   573  000005                     RtccWriteDate@wasOn:
   574                           	opt stack 0
   575  000005                     RtccWriteTime@wasOn:
   576                           	opt stack 0
   577  000005                     ___awdiv@counter:
   578                           	opt stack 0
   579  000005                     __delay_s@index:
   580                           	opt stack 0
   581  000005                     ___wmul@product:
   582                           	opt stack 0
   583  000005                     ___lwdiv@quotient:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x4
   587  000005                     	ds	1
   588  000006                     ??_clear:
   589  000006                     lcd_gotoxy@x:
   590                           	opt stack 0
   591  000006                     RtccWriteDate@wasAlrm:
   592                           	opt stack 0
   593  000006                     RtccWriteTime@wasAlrm:
   594                           	opt stack 0
   595  000006                     ___awdiv@sign:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x5
   599  000006                     	ds	1
   600  000007                     lcd_gotoxy@address:
   601                           	opt stack 0
   602  000007                     RtccWriteTime@wasWrEn:
   603                           	opt stack 0
   604  000007                     ___lwdiv@counter:
   605                           	opt stack 0
   606  000007                     RtccWriteDate@tempYear:
   607                           	opt stack 0
   608  000007                     ___awdiv@quotient:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x6
   612  000007                     	ds	1
   613  000008                     ?___lwmod:
   614                           	opt stack 0
   615  000008                     lcd_putc@c:
   616                           	opt stack 0
   617  000008                     RtccWriteTime@tempMinSec:
   618                           	opt stack 0
   619  000008                     ___lwmod@dividend:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x7
   623  000008                     	ds	1
   624  000009                     RtccWriteDate@wasWrEn:
   625                           	opt stack 0
   626  000009                     lcd_putrs@ptr:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x8
   630  000009                     	ds	1
   631  00000A                     RtccWriteDate@tempDayMonth:
   632                           	opt stack 0
   633  00000A                     RtccWriteTime@tempHourWDay:
   634                           	opt stack 0
   635  00000A                     ___lwmod@divisor:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x9
   639  00000A                     	ds	1
   640  00000B                     
   641                           ; 0 bytes @ 0xA
   642  00000B                     	ds	1
   643  00000C                     ___lwmod@counter:
   644                           	opt stack 0
   645  00000C                     RtccWriteDate@tempHourWDay:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xB
   649  00000C                     	ds	1
   650  00000D                     ?_sprintf:
   651                           	opt stack 0
   652  00000D                     sprintf@sp:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xC
   656  00000D                     	ds	1
   657  00000E                     
   658                           ; 0 bytes @ 0xD
   659  00000E                     	ds	1
   660  00000F                     sprintf@f:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0xE
   664  00000F                     	ds	8
   665  000017                     ??_sprintf:
   666                           
   667                           ; 0 bytes @ 0x16
   668  000017                     	ds	4
   669  00001B                     sprintf@ap:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0x1A
   673  00001B                     	ds	2
   674  00001D                     sprintf@flag:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x1C
   678  00001D                     	ds	1
   679  00001E                     sprintf@val:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x1D
   683  00001E                     	ds	2
   684  000020                     sprintf@prec:
   685                           	opt stack 0
   686                           
   687                           ; 1 bytes @ 0x1F
   688  000020                     	ds	1
   689  000021                     sprintf@width:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x20
   693  000021                     	ds	2
   694  000023                     sprintf@c:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x22
   698  000023                     	ds	1
   699  000024                     ??_read_keyboard:
   700  000024                     
   701                           ; 0 bytes @ 0x23
   702  000024                     	ds	1
   703  000025                     twinkle@input:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x24
   707  000025                     	ds	1
   708  000026                     ??_main:
   709                           
   710                           ; 0 bytes @ 0x25
   711  000026                     	ds	1
   712  000027                     main@input:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x26
   716  000027                     	ds	1
   717                           tblptru	equ	0xFF8
   718                           tblptrh	equ	0xFF7
   719                           tblptrl	equ	0xFF6
   720                           tablat	equ	0xFF5
   721                           postinc0	equ	0xFEE
   722                           wreg	equ	0xFE8
   723                           postdec1	equ	0xFE5
   724                           fsr1l	equ	0xFE1
   725                           
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   728 ;;
   729 ;; *************** function _main *****************
   730 ;; Defined at:
   731 ;;		line 87 in file "main.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  input           1   38[COMRAM] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  2   52[None  ] int 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   749 ;;Total ram usage:        2 bytes
   750 ;; Hardware stack levels required when called:    8
   751 ;; This function calls:
   752 ;;		_Setup
   753 ;;		_caratula
   754 ;;		_lcd_gotoxy
   755 ;;		_lcd_putrs
   756 ;;		_read_keyboard
   757 ;;		_set_vision
   758 ;; This function is called by:
   759 ;;		Startup code after reset
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text0
   764  0019FA                     __ptext0:
   765                           	opt stack 0
   766  0019FA                     _main:
   767                           	opt stack 23
   768                           
   769                           ;main.c: 88: Setup();
   770                           
   771                           ; BSR set to: 15
   772                           ;incstack = 0
   773  0019FA  EC8F  F00E         	call	_Setup	;wreg free
   774                           
   775                           ;main.c: 89: caratula();
   776  0019FE  EC59  F00F         	call	_caratula	;wreg free
   777  001A02  D000               	goto	l2795
   778  001A04                     l2795:
   779                           
   780                           ;main.c: 94: set_vision();
   781  001A04  ECA4  F00D         	call	_set_vision	;wreg free
   782                           
   783                           ;main.c: 96: char input = read_keyboard();
   784  001A08  ECC5  F007         	call	_read_keyboard	;wreg free
   785  001A0C  6E27               	movwf	main@input,c
   786                           
   787                           ;main.c: 98: if (input == 16){
   788  001A0E  0E10               	movlw	16
   789  001A10  1827               	xorwf	main@input,w,c
   790  001A12  A4D8               	btfss	status,2,c
   791  001A14  D7F7               	goto	l2795
   792                           
   793                           ;main.c: 99: lcd_gotoxy(1,1);
   794  001A16  0E01               	movlw	1
   795  001A18  6E05               	movwf	lcd_gotoxy@y,c
   796  001A1A  0E01               	movlw	1
   797  001A1C  EC02  F00F         	call	_lcd_gotoxy
   798                           
   799                           ;main.c: 100: lcd_putrs("                                ");
   800  001A20  0E0F               	movlw	low STR_1
   801  001A22  6E09               	movwf	lcd_putrs@ptr,c
   802  001A24  0E0F               	movlw	high STR_1
   803  001A26  6E0A               	movwf	lcd_putrs@ptr+1,c
   804  001A28  ECCE  F00D         	call	_lcd_putrs	;wreg free
   805                           
   806                           ;main.c: 101: lcd_gotoxy(1,1);
   807  001A2C  0E01               	movlw	1
   808  001A2E  6E05               	movwf	lcd_gotoxy@y,c
   809  001A30  0E01               	movlw	1
   810  001A32  EC02  F00F         	call	_lcd_gotoxy
   811                           
   812                           ;main.c: 102: lcd_putrs("null pointer");
   813  001A36  0E3F               	movlw	low STR_2
   814  001A38  6E09               	movwf	lcd_putrs@ptr,c
   815  001A3A  0E0F               	movlw	high STR_2
   816  001A3C  6E0A               	movwf	lcd_putrs@ptr+1,c
   817  001A3E  ECCE  F00D         	call	_lcd_putrs	;wreg free
   818                           
   819                           ;main.c: 103: lcd_gotoxy(1,2);
   820  001A42  0E02               	movlw	2
   821  001A44  6E05               	movwf	lcd_gotoxy@y,c
   822  001A46  0E01               	movlw	1
   823  001A48  EC02  F00F         	call	_lcd_gotoxy
   824                           
   825                           ;main.c: 104: lcd_putrs("exception");
   826  001A4C  0E61               	movlw	low STR_3
   827  001A4E  6E09               	movwf	lcd_putrs@ptr,c
   828  001A50  0E0F               	movlw	high STR_3
   829  001A52  6E0A               	movwf	lcd_putrs@ptr+1,c
   830  001A54  ECCE  F00D         	call	_lcd_putrs	;wreg free
   831                           
   832                           ;main.c: 105: input = 0;
   833  001A58  0E00               	movlw	0
   834  001A5A  6E27               	movwf	main@input,c
   835                           
   836                           ;main.c: 106: key = 0;
   837  001A5C  0E00               	movlw	0
   838  001A5E  6E3A               	movwf	_key,c
   839                           
   840                           ;main.c: 107: _delay((unsigned long)((98)*(8000000/4000.0)));
   841  001A60  0EFF               	movlw	255
   842  001A62  6E26               	movwf	??_main& (0+255),c
   843  001A64  0E8A               	movlw	138
   844  001A66                     u2347:
   845  001A66  2EE8               	decfsz	wreg,f,c
   846  001A68  D7FE               	goto	u2347
   847  001A6A  2E26               	decfsz	??_main& (0+255),f,c
   848  001A6C  D7FC               	goto	u2347
   849  001A6E  D000               	nop2	
   850  001A70  D7C9               	goto	l2795
   851                           
   852                           ;main.c: 108: }
   853                           ;main.c: 109: }
   854                           ;main.c: 111: return 0;
   855                           ;	Return value of _main is never used
   856  001A72  EF00  F000         	goto	start
   857  001A76                     __end_of_main:
   858                           	opt stack 0
   859                           tblptru	equ	0xFF8
   860                           tblptrh	equ	0xFF7
   861                           tblptrl	equ	0xFF6
   862                           tablat	equ	0xFF5
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           status	equ	0xFD8
   868                           
   869 ;; *************** function _set_vision *****************
   870 ;; Defined at:
   871 ;;		line 41 in file "lcd_vision.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;		None               void
   878 ;; Registers used:
   879 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    7
   892 ;; This function calls:
   893 ;;		_clear
   894 ;;		_lcd_gotoxy
   895 ;;		_lcd_putrs
   896 ;;		_twinkle
   897 ;;		_write_Date
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text1
   904  001B48                     __ptext1:
   905                           	opt stack 0
   906  001B48                     _set_vision:
   907                           	opt stack 23
   908                           
   909                           ;lcd_vision.c: 42: clear();
   910                           
   911                           ;incstack = 0
   912  001B48  EC25  F00F         	call	_clear	;wreg free
   913                           
   914                           ;lcd_vision.c: 43: write_Date();
   915  001B4C  ECBE  F00C         	call	_write_Date	;wreg free
   916                           
   917                           ;lcd_vision.c: 44: lcd_gotoxy(1,1);
   918  001B50  0E01               	movlw	1
   919  001B52  6E05               	movwf	lcd_gotoxy@y,c
   920  001B54  0E01               	movlw	1
   921  001B56  EC02  F00F         	call	_lcd_gotoxy
   922                           
   923                           ;lcd_vision.c: 46: switch (state_alarm){
   924  001B5A  D017               	goto	l2787
   925  001B5C                     l2779:
   926  001B5C  0E7C               	movlw	low STR_24
   927  001B5E  6E09               	movwf	lcd_putrs@ptr,c
   928  001B60  0E0F               	movlw	high STR_24
   929  001B62  6E0A               	movwf	lcd_putrs@ptr+1,c
   930  001B64  ECCE  F00D         	call	_lcd_putrs	;wreg free
   931                           
   932                           ;lcd_vision.c: 48: break;
   933  001B68  0012               	return	
   934  001B6A                     l2781:
   935  001B6A  0E78               	movlw	low STR_25
   936  001B6C  6E09               	movwf	lcd_putrs@ptr,c
   937  001B6E  0E0F               	movlw	high STR_25
   938  001B70  6E0A               	movwf	lcd_putrs@ptr+1,c
   939  001B72  ECCE  F00D         	call	_lcd_putrs	;wreg free
   940                           
   941                           ;lcd_vision.c: 50: break;
   942  001B76  0012               	return	
   943  001B78                     l2783:
   944  001B78  0E6B               	movlw	low STR_26
   945  001B7A  6E09               	movwf	lcd_putrs@ptr,c
   946  001B7C  0E0F               	movlw	high STR_26
   947  001B7E  6E0A               	movwf	lcd_putrs@ptr+1,c
   948  001B80  ECCE  F00D         	call	_lcd_putrs	;wreg free
   949                           
   950                           ;lcd_vision.c: 52: twinkle();
   951  001B84  EC6A  F00E         	call	_twinkle	;wreg free
   952                           
   953                           ;lcd_vision.c: 53: }
   954  001B88  0012               	return	
   955  001B8A                     l2787:
   956  001B8A  505C               	movf	_state_alarm,w,c
   957                           
   958                           ; Switch size 1, requested type "space"
   959                           ; Number of cases is 2, Range of values is 0 to 1
   960                           ; switch strategies available:
   961                           ; Name         Instructions Cycles
   962                           ; simple_byte            7     4 (average)
   963                           ;	Chosen strategy is simple_byte
   964  001B8C  0A00               	xorlw	0	; case 0
   965  001B8E  B4D8               	btfsc	status,2,c
   966  001B90  D7E5               	goto	l2779
   967  001B92  0A01               	xorlw	1	; case 1
   968  001B94  B4D8               	btfsc	status,2,c
   969  001B96  D7E9               	goto	l2781
   970  001B98  D7EF               	goto	l2783
   971  001B9A  0012               	return		;funcret
   972  001B9C                     __end_of_set_vision:
   973                           	opt stack 0
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           wreg	equ	0xFE8
   980                           postdec1	equ	0xFE5
   981                           fsr1l	equ	0xFE1
   982                           status	equ	0xFD8
   983                           
   984 ;; *************** function _write_Date *****************
   985 ;; Defined at:
   986 ;;		line 10 in file "lcd_vision.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;		None               void
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    5
  1007 ;; This function calls:
  1008 ;;		_lcd_gotoxy
  1009 ;;		_lcd_putrs
  1010 ;;		_sprintf
  1011 ;; This function is called by:
  1012 ;;		_set_vision
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text2
  1017  00197C                     __ptext2:
  1018                           	opt stack 0
  1019  00197C                     _write_Date:
  1020                           	opt stack 24
  1021                           
  1022                           ;lcd_vision.c: 11: lcd_gotoxy(9,1);
  1023                           
  1024                           ;incstack = 0
  1025  00197C  0E01               	movlw	1
  1026  00197E  6E05               	movwf	lcd_gotoxy@y,c
  1027  001980  0E09               	movlw	9
  1028  001982  EC02  F00F         	call	_lcd_gotoxy
  1029                           
  1030                           ;lcd_vision.c: 12: sprintf(buffer2,"%02u/%02u/%02u",dia,mes,anio);
  1031  001986  0E78               	movlw	low _buffer2
  1032  001988  6E0D               	movwf	sprintf@sp,c
  1033  00198A  0E00               	movlw	high _buffer2
  1034  00198C  6E0E               	movwf	sprintf@sp+1,c
  1035  00198E  0E30               	movlw	low STR_20
  1036  001990  6E0F               	movwf	sprintf@f,c
  1037  001992  0E0F               	movlw	high STR_20
  1038  001994  6E10               	movwf	sprintf@f+1,c
  1039  001996  C052  F011         	movff	_dia,?_sprintf+4
  1040  00199A  C053  F012         	movff	_dia+1,?_sprintf+5
  1041  00199E  C058  F013         	movff	_mes,?_sprintf+6
  1042  0019A2  C059  F014         	movff	_mes+1,?_sprintf+7
  1043  0019A6  C050  F015         	movff	_anio,?_sprintf+8
  1044  0019AA  C051  F016         	movff	_anio+1,?_sprintf+9
  1045  0019AE  EC34  F009         	call	_sprintf	;wreg free
  1046                           
  1047                           ;lcd_vision.c: 13: lcd_putrs(buffer2);
  1048  0019B2  0E78               	movlw	low _buffer2
  1049  0019B4  6E09               	movwf	lcd_putrs@ptr,c
  1050  0019B6  0E00               	movlw	high _buffer2
  1051  0019B8  6E0A               	movwf	lcd_putrs@ptr+1,c
  1052  0019BA  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1053                           
  1054                           ;lcd_vision.c: 14: sprintf(buffer2,"%02u:%02u",hora,minuto);
  1055  0019BE  0E78               	movlw	low _buffer2
  1056  0019C0  6E0D               	movwf	sprintf@sp,c
  1057  0019C2  0E00               	movlw	high _buffer2
  1058  0019C4  6E0E               	movwf	sprintf@sp+1,c
  1059  0019C6  0E57               	movlw	low STR_21
  1060  0019C8  6E0F               	movwf	sprintf@f,c
  1061  0019CA  0E0F               	movlw	high STR_21
  1062  0019CC  6E10               	movwf	sprintf@f+1,c
  1063  0019CE  C056  F011         	movff	_hora,?_sprintf+4
  1064  0019D2  C057  F012         	movff	_hora+1,?_sprintf+5
  1065  0019D6  C05A  F013         	movff	_minuto,?_sprintf+6
  1066  0019DA  C05B  F014         	movff	_minuto+1,?_sprintf+7
  1067  0019DE  EC34  F009         	call	_sprintf	;wreg free
  1068                           
  1069                           ;lcd_vision.c: 15: lcd_gotoxy(1,2);
  1070  0019E2  0E02               	movlw	2
  1071  0019E4  6E05               	movwf	lcd_gotoxy@y,c
  1072  0019E6  0E01               	movlw	1
  1073  0019E8  EC02  F00F         	call	_lcd_gotoxy
  1074                           
  1075                           ;lcd_vision.c: 16: lcd_putrs(buffer2);
  1076  0019EC  0E78               	movlw	low _buffer2
  1077  0019EE  6E09               	movwf	lcd_putrs@ptr,c
  1078  0019F0  0E00               	movlw	high _buffer2
  1079  0019F2  6E0A               	movwf	lcd_putrs@ptr+1,c
  1080  0019F4  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1081  0019F8  0012               	return		;funcret
  1082  0019FA                     __end_of_write_Date:
  1083                           	opt stack 0
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           postinc0	equ	0xFEE
  1089                           wreg	equ	0xFE8
  1090                           postdec1	equ	0xFE5
  1091                           fsr1l	equ	0xFE1
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function _twinkle *****************
  1095 ;; Defined at:
  1096 ;;		line 28 in file "lcd_vision.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  input           1   36[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;		None               void
  1103 ;; Registers used:
  1104 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;Total ram usage:        1 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    6
  1117 ;; This function calls:
  1118 ;;		__delay_s
  1119 ;;		_lcd_gotoxy
  1120 ;;		_lcd_putrs
  1121 ;;		_read_keyboard
  1122 ;; This function is called by:
  1123 ;;		_set_vision
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text3
  1128  001CD4                     __ptext3:
  1129                           	opt stack 0
  1130  001CD4                     _twinkle:
  1131                           	opt stack 23
  1132                           
  1133                           ;lcd_vision.c: 29: char input = 1;
  1134                           
  1135                           ;incstack = 0
  1136  001CD4  0E01               	movlw	1
  1137  001CD6  6E25               	movwf	twinkle@input,c
  1138                           
  1139                           ;lcd_vision.c: 31: while(input != 16){
  1140  001CD8  D01D               	goto	l2745
  1141  001CDA                     l2733:
  1142                           
  1143                           ;lcd_vision.c: 32: input = read_keyboard();
  1144  001CDA  ECC5  F007         	call	_read_keyboard	;wreg free
  1145  001CDE  6E25               	movwf	twinkle@input,c
  1146                           
  1147                           ;lcd_vision.c: 33: lcd_gotoxy(7,2);
  1148  001CE0  0E02               	movlw	2
  1149  001CE2  6E05               	movwf	lcd_gotoxy@y,c
  1150  001CE4  0E07               	movlw	7
  1151  001CE6  EC02  F00F         	call	_lcd_gotoxy
  1152                           
  1153                           ;lcd_vision.c: 34: lcd_putrs("WARNING!!!");
  1154  001CEA  0E4C               	movlw	low STR_22
  1155  001CEC  6E09               	movwf	lcd_putrs@ptr,c
  1156  001CEE  0E0F               	movlw	high STR_22
  1157  001CF0  6E0A               	movwf	lcd_putrs@ptr+1,c
  1158  001CF2  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1159                           
  1160                           ;lcd_vision.c: 35: _delay_s(1);
  1161  001CF6  0E01               	movlw	1
  1162  001CF8  EC44  F00E         	call	__delay_s
  1163                           
  1164                           ;lcd_vision.c: 36: lcd_gotoxy(7,2);
  1165  001CFC  0E02               	movlw	2
  1166  001CFE  6E05               	movwf	lcd_gotoxy@y,c
  1167  001D00  0E07               	movlw	7
  1168  001D02  EC02  F00F         	call	_lcd_gotoxy
  1169                           
  1170                           ;lcd_vision.c: 37: lcd_putrs("          ");
  1171  001D06  0E25               	movlw	low (STR_1+22)
  1172  001D08  6E09               	movwf	lcd_putrs@ptr,c
  1173  001D0A  0E0F               	movlw	high (STR_1+22)
  1174  001D0C  6E0A               	movwf	lcd_putrs@ptr+1,c
  1175  001D0E  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1176  001D12  D000               	goto	l2745
  1177  001D14                     l2745:
  1178  001D14  0E10               	movlw	16
  1179  001D16  1825               	xorwf	twinkle@input,w,c
  1180  001D18  A4D8               	btfss	status,2,c
  1181  001D1A  D7DF               	goto	l2733
  1182  001D1C  0012               	return		;funcret
  1183  001D1E                     __end_of_twinkle:
  1184                           	opt stack 0
  1185                           tblptru	equ	0xFF8
  1186                           tblptrh	equ	0xFF7
  1187                           tblptrl	equ	0xFF6
  1188                           tablat	equ	0xFF5
  1189                           postinc0	equ	0xFEE
  1190                           wreg	equ	0xFE8
  1191                           postdec1	equ	0xFE5
  1192                           fsr1l	equ	0xFE1
  1193                           status	equ	0xFD8
  1194                           
  1195 ;; *************** function _read_keyboard *****************
  1196 ;; Defined at:
  1197 ;;		line 4 in file "keyboard.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      unsigned char 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    5
  1218 ;; This function calls:
  1219 ;;		_lcd_putrs
  1220 ;;		_sprintf
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;;		_twinkle
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text4
  1228  000F8A                     __ptext4:
  1229                           	opt stack 0
  1230  000F8A                     _read_keyboard:
  1231                           	opt stack 23
  1232                           
  1233                           ;keyboard.c: 5: LATAbits.LATA0=1;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1234                           
  1235                           ;incstack = 0
  1236  000F8A  8089               	bsf	3977,0,c	;volatile
  1237  000F8C  9289               	bcf	3977,1,c	;volatile
  1238  000F8E  9489               	bcf	3977,2,c	;volatile
  1239  000F90  9689               	bcf	3977,3,c	;volatile
  1240                           
  1241                           ;keyboard.c: 6: {
  1242                           ;keyboard.c: 7: if (PORTAbits.RA5==1){key=1;sprintf(buffer2,"%01u",key);lcd_putrs(buffer
      +                          2);while(PORTAbits.RA5==1){};}
  1243  000F92  AA80               	btfss	3968,5,c	;volatile
  1244  000F94  D018               	goto	l201
  1245  000F96  0E01               	movlw	1
  1246  000F98  6E3A               	movwf	_key,c
  1247  000F9A  0E78               	movlw	low _buffer2
  1248  000F9C  6E0D               	movwf	sprintf@sp,c
  1249  000F9E  0E00               	movlw	high _buffer2
  1250  000FA0  6E0E               	movwf	sprintf@sp+1,c
  1251  000FA2  0E73               	movlw	low STR_4
  1252  000FA4  6E0F               	movwf	sprintf@f,c
  1253  000FA6  0E0F               	movlw	high STR_4
  1254  000FA8  6E10               	movwf	sprintf@f+1,c
  1255  000FAA  C03A  F011         	movff	_key,?_sprintf+4
  1256  000FAE  6A12               	clrf	?_sprintf+5,c
  1257  000FB0  EC34  F009         	call	_sprintf	;wreg free
  1258  000FB4  0E78               	movlw	low _buffer2
  1259  000FB6  6E09               	movwf	lcd_putrs@ptr,c
  1260  000FB8  0E00               	movlw	high _buffer2
  1261  000FBA  6E0A               	movwf	lcd_putrs@ptr+1,c
  1262  000FBC  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1263  000FC0  D000               	goto	l202
  1264  000FC2                     l202:
  1265  000FC2  BA80               	btfsc	3968,5,c	;volatile
  1266  000FC4  D7FE               	goto	l202
  1267  000FC6                     l201:
  1268                           
  1269                           ;keyboard.c: 8: if (PORTAbits.RA7==1){key=2;sprintf(buffer2,"%01u",key);lcd_putrs(buffer
      +                          2);while(PORTAbits.RA7==1){};}
  1270  000FC6  AE80               	btfss	3968,7,c	;volatile
  1271  000FC8  D018               	goto	l205
  1272  000FCA  0E02               	movlw	2
  1273  000FCC  6E3A               	movwf	_key,c
  1274  000FCE  0E78               	movlw	low _buffer2
  1275  000FD0  6E0D               	movwf	sprintf@sp,c
  1276  000FD2  0E00               	movlw	high _buffer2
  1277  000FD4  6E0E               	movwf	sprintf@sp+1,c
  1278  000FD6  0E73               	movlw	low STR_4
  1279  000FD8  6E0F               	movwf	sprintf@f,c
  1280  000FDA  0E0F               	movlw	high STR_4
  1281  000FDC  6E10               	movwf	sprintf@f+1,c
  1282  000FDE  C03A  F011         	movff	_key,?_sprintf+4
  1283  000FE2  6A12               	clrf	?_sprintf+5,c
  1284  000FE4  EC34  F009         	call	_sprintf	;wreg free
  1285  000FE8  0E78               	movlw	low _buffer2
  1286  000FEA  6E09               	movwf	lcd_putrs@ptr,c
  1287  000FEC  0E00               	movlw	high _buffer2
  1288  000FEE  6E0A               	movwf	lcd_putrs@ptr+1,c
  1289  000FF0  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1290  000FF4  D000               	goto	l206
  1291  000FF6                     l206:
  1292  000FF6  BE80               	btfsc	3968,7,c	;volatile
  1293  000FF8  D7FE               	goto	l206
  1294  000FFA                     l205:
  1295                           
  1296                           ;keyboard.c: 9: if (PORTAbits.RA6==1){key=3;sprintf(buffer2,"%01u",key);lcd_putrs(buffer
      +                          2);while(PORTAbits.RA6==1){};}
  1297  000FFA  AC80               	btfss	3968,6,c	;volatile
  1298  000FFC  D018               	goto	l209
  1299  000FFE  0E03               	movlw	3
  1300  001000  6E3A               	movwf	_key,c
  1301  001002  0E78               	movlw	low _buffer2
  1302  001004  6E0D               	movwf	sprintf@sp,c
  1303  001006  0E00               	movlw	high _buffer2
  1304  001008  6E0E               	movwf	sprintf@sp+1,c
  1305  00100A  0E73               	movlw	low STR_4
  1306  00100C  6E0F               	movwf	sprintf@f,c
  1307  00100E  0E0F               	movlw	high STR_4
  1308  001010  6E10               	movwf	sprintf@f+1,c
  1309  001012  C03A  F011         	movff	_key,?_sprintf+4
  1310  001016  6A12               	clrf	?_sprintf+5,c
  1311  001018  EC34  F009         	call	_sprintf	;wreg free
  1312  00101C  0E78               	movlw	low _buffer2
  1313  00101E  6E09               	movwf	lcd_putrs@ptr,c
  1314  001020  0E00               	movlw	high _buffer2
  1315  001022  6E0A               	movwf	lcd_putrs@ptr+1,c
  1316  001024  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1317  001028  D000               	goto	l210
  1318  00102A                     l210:
  1319  00102A  BC80               	btfsc	3968,6,c	;volatile
  1320  00102C  D7FE               	goto	l210
  1321  00102E                     l209:
  1322                           
  1323                           ;keyboard.c: 10: if (PORTCbits.RC2==1){key=11;lcd_putrs("A");while(PORTCbits.RC2==1){};}
  1324  00102E  A482               	btfss	3970,2,c	;volatile
  1325  001030  D00B               	goto	l213
  1326  001032  0E0B               	movlw	11
  1327  001034  6E3A               	movwf	_key,c
  1328  001036  0E83               	movlw	low STR_7
  1329  001038  6E09               	movwf	lcd_putrs@ptr,c
  1330  00103A  0E0F               	movlw	high STR_7
  1331  00103C  6E0A               	movwf	lcd_putrs@ptr+1,c
  1332  00103E  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1333  001042  D000               	goto	l214
  1334  001044                     l214:
  1335  001044  B482               	btfsc	3970,2,c	;volatile
  1336  001046  D7FE               	goto	l214
  1337  001048                     l213:
  1338                           
  1339                           ;keyboard.c: 11: }
  1340                           ;keyboard.c: 12: LATAbits.LATA0=0;LATAbits.LATA1=1;LATAbits.LATA2=0;LATAbits.LATA3=0;
  1341  001048  9089               	bcf	3977,0,c	;volatile
  1342  00104A  8289               	bsf	3977,1,c	;volatile
  1343  00104C  9489               	bcf	3977,2,c	;volatile
  1344  00104E  9689               	bcf	3977,3,c	;volatile
  1345                           
  1346                           ;keyboard.c: 13: {
  1347                           ;keyboard.c: 14: if (PORTAbits.RA5==1){key=4;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA5==1){};}
  1348  001050  AA80               	btfss	3968,5,c	;volatile
  1349  001052  D018               	goto	l217
  1350  001054  0E04               	movlw	4
  1351  001056  6E3A               	movwf	_key,c
  1352  001058  0E78               	movlw	low _buffer2
  1353  00105A  6E0D               	movwf	sprintf@sp,c
  1354  00105C  0E00               	movlw	high _buffer2
  1355  00105E  6E0E               	movwf	sprintf@sp+1,c
  1356  001060  0E73               	movlw	low STR_4
  1357  001062  6E0F               	movwf	sprintf@f,c
  1358  001064  0E0F               	movlw	high STR_4
  1359  001066  6E10               	movwf	sprintf@f+1,c
  1360  001068  C03A  F011         	movff	_key,?_sprintf+4
  1361  00106C  6A12               	clrf	?_sprintf+5,c
  1362  00106E  EC34  F009         	call	_sprintf	;wreg free
  1363  001072  0E78               	movlw	low _buffer2
  1364  001074  6E09               	movwf	lcd_putrs@ptr,c
  1365  001076  0E00               	movlw	high _buffer2
  1366  001078  6E0A               	movwf	lcd_putrs@ptr+1,c
  1367  00107A  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1368  00107E  D000               	goto	l218
  1369  001080                     l218:
  1370  001080  BA80               	btfsc	3968,5,c	;volatile
  1371  001082  D7FE               	goto	l218
  1372  001084                     l217:
  1373                           
  1374                           ;keyboard.c: 15: if (PORTAbits.RA7==1){key=5;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA7==1){};}
  1375  001084  AE80               	btfss	3968,7,c	;volatile
  1376  001086  D018               	goto	l221
  1377  001088  0E05               	movlw	5
  1378  00108A  6E3A               	movwf	_key,c
  1379  00108C  0E78               	movlw	low _buffer2
  1380  00108E  6E0D               	movwf	sprintf@sp,c
  1381  001090  0E00               	movlw	high _buffer2
  1382  001092  6E0E               	movwf	sprintf@sp+1,c
  1383  001094  0E73               	movlw	low STR_4
  1384  001096  6E0F               	movwf	sprintf@f,c
  1385  001098  0E0F               	movlw	high STR_4
  1386  00109A  6E10               	movwf	sprintf@f+1,c
  1387  00109C  C03A  F011         	movff	_key,?_sprintf+4
  1388  0010A0  6A12               	clrf	?_sprintf+5,c
  1389  0010A2  EC34  F009         	call	_sprintf	;wreg free
  1390  0010A6  0E78               	movlw	low _buffer2
  1391  0010A8  6E09               	movwf	lcd_putrs@ptr,c
  1392  0010AA  0E00               	movlw	high _buffer2
  1393  0010AC  6E0A               	movwf	lcd_putrs@ptr+1,c
  1394  0010AE  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1395  0010B2  D000               	goto	l222
  1396  0010B4                     l222:
  1397  0010B4  BE80               	btfsc	3968,7,c	;volatile
  1398  0010B6  D7FE               	goto	l222
  1399  0010B8                     l221:
  1400                           
  1401                           ;keyboard.c: 16: if (PORTAbits.RA6==1){key=6;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA6==1){};}
  1402  0010B8  AC80               	btfss	3968,6,c	;volatile
  1403  0010BA  D018               	goto	l225
  1404  0010BC  0E06               	movlw	6
  1405  0010BE  6E3A               	movwf	_key,c
  1406  0010C0  0E78               	movlw	low _buffer2
  1407  0010C2  6E0D               	movwf	sprintf@sp,c
  1408  0010C4  0E00               	movlw	high _buffer2
  1409  0010C6  6E0E               	movwf	sprintf@sp+1,c
  1410  0010C8  0E73               	movlw	low STR_4
  1411  0010CA  6E0F               	movwf	sprintf@f,c
  1412  0010CC  0E0F               	movlw	high STR_4
  1413  0010CE  6E10               	movwf	sprintf@f+1,c
  1414  0010D0  C03A  F011         	movff	_key,?_sprintf+4
  1415  0010D4  6A12               	clrf	?_sprintf+5,c
  1416  0010D6  EC34  F009         	call	_sprintf	;wreg free
  1417  0010DA  0E78               	movlw	low _buffer2
  1418  0010DC  6E09               	movwf	lcd_putrs@ptr,c
  1419  0010DE  0E00               	movlw	high _buffer2
  1420  0010E0  6E0A               	movwf	lcd_putrs@ptr+1,c
  1421  0010E2  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1422  0010E6  D000               	goto	l226
  1423  0010E8                     l226:
  1424  0010E8  BC80               	btfsc	3968,6,c	;volatile
  1425  0010EA  D7FE               	goto	l226
  1426  0010EC                     l225:
  1427                           
  1428                           ;keyboard.c: 17: if (PORTCbits.RC2==1){key=12;lcd_putrs("B");while(PORTCbits.RC2==1){};}
  1429  0010EC  A482               	btfss	3970,2,c	;volatile
  1430  0010EE  D00B               	goto	l229
  1431  0010F0  0E0C               	movlw	12
  1432  0010F2  6E3A               	movwf	_key,c
  1433  0010F4  0E85               	movlw	low STR_11
  1434  0010F6  6E09               	movwf	lcd_putrs@ptr,c
  1435  0010F8  0E0F               	movlw	high STR_11
  1436  0010FA  6E0A               	movwf	lcd_putrs@ptr+1,c
  1437  0010FC  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1438  001100  D000               	goto	l230
  1439  001102                     l230:
  1440  001102  B482               	btfsc	3970,2,c	;volatile
  1441  001104  D7FE               	goto	l230
  1442  001106                     l229:
  1443                           
  1444                           ;keyboard.c: 18: }
  1445                           ;keyboard.c: 19: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=1;LATAbits.LATA3=0;
  1446  001106  9089               	bcf	3977,0,c	;volatile
  1447  001108  9289               	bcf	3977,1,c	;volatile
  1448  00110A  8489               	bsf	3977,2,c	;volatile
  1449  00110C  9689               	bcf	3977,3,c	;volatile
  1450                           
  1451                           ;keyboard.c: 20: {
  1452                           ;keyboard.c: 21: if (PORTAbits.RA5==1){key=7;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA5==1){};}
  1453  00110E  AA80               	btfss	3968,5,c	;volatile
  1454  001110  D018               	goto	l233
  1455  001112  0E07               	movlw	7
  1456  001114  6E3A               	movwf	_key,c
  1457  001116  0E78               	movlw	low _buffer2
  1458  001118  6E0D               	movwf	sprintf@sp,c
  1459  00111A  0E00               	movlw	high _buffer2
  1460  00111C  6E0E               	movwf	sprintf@sp+1,c
  1461  00111E  0E73               	movlw	low STR_4
  1462  001120  6E0F               	movwf	sprintf@f,c
  1463  001122  0E0F               	movlw	high STR_4
  1464  001124  6E10               	movwf	sprintf@f+1,c
  1465  001126  C03A  F011         	movff	_key,?_sprintf+4
  1466  00112A  6A12               	clrf	?_sprintf+5,c
  1467  00112C  EC34  F009         	call	_sprintf	;wreg free
  1468  001130  0E78               	movlw	low _buffer2
  1469  001132  6E09               	movwf	lcd_putrs@ptr,c
  1470  001134  0E00               	movlw	high _buffer2
  1471  001136  6E0A               	movwf	lcd_putrs@ptr+1,c
  1472  001138  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1473  00113C  D000               	goto	l234
  1474  00113E                     l234:
  1475  00113E  BA80               	btfsc	3968,5,c	;volatile
  1476  001140  D7FE               	goto	l234
  1477  001142                     l233:
  1478                           
  1479                           ;keyboard.c: 22: if (PORTAbits.RA7==1){key=8;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA7==1){};}
  1480  001142  AE80               	btfss	3968,7,c	;volatile
  1481  001144  D018               	goto	l237
  1482  001146  0E08               	movlw	8
  1483  001148  6E3A               	movwf	_key,c
  1484  00114A  0E78               	movlw	low _buffer2
  1485  00114C  6E0D               	movwf	sprintf@sp,c
  1486  00114E  0E00               	movlw	high _buffer2
  1487  001150  6E0E               	movwf	sprintf@sp+1,c
  1488  001152  0E73               	movlw	low STR_4
  1489  001154  6E0F               	movwf	sprintf@f,c
  1490  001156  0E0F               	movlw	high STR_4
  1491  001158  6E10               	movwf	sprintf@f+1,c
  1492  00115A  C03A  F011         	movff	_key,?_sprintf+4
  1493  00115E  6A12               	clrf	?_sprintf+5,c
  1494  001160  EC34  F009         	call	_sprintf	;wreg free
  1495  001164  0E78               	movlw	low _buffer2
  1496  001166  6E09               	movwf	lcd_putrs@ptr,c
  1497  001168  0E00               	movlw	high _buffer2
  1498  00116A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1499  00116C  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1500  001170  D000               	goto	l238
  1501  001172                     l238:
  1502  001172  BE80               	btfsc	3968,7,c	;volatile
  1503  001174  D7FE               	goto	l238
  1504  001176                     l237:
  1505                           
  1506                           ;keyboard.c: 23: if (PORTAbits.RA6==1){key=9;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA6==1){};}
  1507  001176  AC80               	btfss	3968,6,c	;volatile
  1508  001178  D018               	goto	l241
  1509  00117A  0E09               	movlw	9
  1510  00117C  6E3A               	movwf	_key,c
  1511  00117E  0E78               	movlw	low _buffer2
  1512  001180  6E0D               	movwf	sprintf@sp,c
  1513  001182  0E00               	movlw	high _buffer2
  1514  001184  6E0E               	movwf	sprintf@sp+1,c
  1515  001186  0E73               	movlw	low STR_4
  1516  001188  6E0F               	movwf	sprintf@f,c
  1517  00118A  0E0F               	movlw	high STR_4
  1518  00118C  6E10               	movwf	sprintf@f+1,c
  1519  00118E  C03A  F011         	movff	_key,?_sprintf+4
  1520  001192  6A12               	clrf	?_sprintf+5,c
  1521  001194  EC34  F009         	call	_sprintf	;wreg free
  1522  001198  0E78               	movlw	low _buffer2
  1523  00119A  6E09               	movwf	lcd_putrs@ptr,c
  1524  00119C  0E00               	movlw	high _buffer2
  1525  00119E  6E0A               	movwf	lcd_putrs@ptr+1,c
  1526  0011A0  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1527  0011A4  D000               	goto	l242
  1528  0011A6                     l242:
  1529  0011A6  BC80               	btfsc	3968,6,c	;volatile
  1530  0011A8  D7FE               	goto	l242
  1531  0011AA                     l241:
  1532                           
  1533                           ;keyboard.c: 24: if (PORTCbits.RC2==1){key=13;lcd_putrs("C");while(PORTCbits.RC2==1){};}
  1534  0011AA  A482               	btfss	3970,2,c	;volatile
  1535  0011AC  D00B               	goto	l245
  1536  0011AE  0E0D               	movlw	13
  1537  0011B0  6E3A               	movwf	_key,c
  1538  0011B2  0E87               	movlw	low STR_15
  1539  0011B4  6E09               	movwf	lcd_putrs@ptr,c
  1540  0011B6  0E0F               	movlw	high STR_15
  1541  0011B8  6E0A               	movwf	lcd_putrs@ptr+1,c
  1542  0011BA  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1543  0011BE  D000               	goto	l246
  1544  0011C0                     l246:
  1545  0011C0  B482               	btfsc	3970,2,c	;volatile
  1546  0011C2  D7FE               	goto	l246
  1547  0011C4                     l245:
  1548                           
  1549                           ;keyboard.c: 25: }
  1550                           ;keyboard.c: 26: LATAbits.LATA0=0;LATAbits.LATA1=0;LATAbits.LATA2=0;LATAbits.LATA3=1;
  1551  0011C4  9089               	bcf	3977,0,c	;volatile
  1552  0011C6  9289               	bcf	3977,1,c	;volatile
  1553  0011C8  9489               	bcf	3977,2,c	;volatile
  1554  0011CA  8689               	bsf	3977,3,c	;volatile
  1555                           
  1556                           ;keyboard.c: 27: {
  1557                           ;keyboard.c: 28: if (PORTAbits.RA5==1){key=14;lcd_putrs("*");while(PORTAbits.RA5==1){};}
  1558  0011CC  AA80               	btfss	3968,5,c	;volatile
  1559  0011CE  D00B               	goto	l249
  1560  0011D0  0E0E               	movlw	14
  1561  0011D2  6E3A               	movwf	_key,c
  1562  0011D4  0E81               	movlw	low STR_16
  1563  0011D6  6E09               	movwf	lcd_putrs@ptr,c
  1564  0011D8  0E0F               	movlw	high STR_16
  1565  0011DA  6E0A               	movwf	lcd_putrs@ptr+1,c
  1566  0011DC  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1567  0011E0  D000               	goto	l250
  1568  0011E2                     l250:
  1569  0011E2  BA80               	btfsc	3968,5,c	;volatile
  1570  0011E4  D7FE               	goto	l250
  1571  0011E6                     l249:
  1572                           
  1573                           ;keyboard.c: 29: if (PORTAbits.RA7==1){key=0;sprintf(buffer2,"%01u",key);lcd_putrs(buffe
      +                          r2);while(PORTAbits.RA7==1){};}
  1574  0011E6  AE80               	btfss	3968,7,c	;volatile
  1575  0011E8  D018               	goto	l253
  1576  0011EA  0E00               	movlw	0
  1577  0011EC  6E3A               	movwf	_key,c
  1578  0011EE  0E78               	movlw	low _buffer2
  1579  0011F0  6E0D               	movwf	sprintf@sp,c
  1580  0011F2  0E00               	movlw	high _buffer2
  1581  0011F4  6E0E               	movwf	sprintf@sp+1,c
  1582  0011F6  0E73               	movlw	low STR_4
  1583  0011F8  6E0F               	movwf	sprintf@f,c
  1584  0011FA  0E0F               	movlw	high STR_4
  1585  0011FC  6E10               	movwf	sprintf@f+1,c
  1586  0011FE  C03A  F011         	movff	_key,?_sprintf+4
  1587  001202  6A12               	clrf	?_sprintf+5,c
  1588  001204  EC34  F009         	call	_sprintf	;wreg free
  1589  001208  0E78               	movlw	low _buffer2
  1590  00120A  6E09               	movwf	lcd_putrs@ptr,c
  1591  00120C  0E00               	movlw	high _buffer2
  1592  00120E  6E0A               	movwf	lcd_putrs@ptr+1,c
  1593  001210  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1594  001214  D000               	goto	l254
  1595  001216                     l254:
  1596  001216  BE80               	btfsc	3968,7,c	;volatile
  1597  001218  D7FE               	goto	l254
  1598  00121A                     l253:
  1599                           
  1600                           ;keyboard.c: 30: if (PORTAbits.RA6==1){key=15;lcd_putrs("#");while(PORTAbits.RA6==1){};}
  1601  00121A  AC80               	btfss	3968,6,c	;volatile
  1602  00121C  D00B               	goto	l257
  1603  00121E  0E0F               	movlw	15
  1604  001220  6E3A               	movwf	_key,c
  1605  001222  0E7F               	movlw	low STR_18
  1606  001224  6E09               	movwf	lcd_putrs@ptr,c
  1607  001226  0E0F               	movlw	high STR_18
  1608  001228  6E0A               	movwf	lcd_putrs@ptr+1,c
  1609  00122A  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1610  00122E  D000               	goto	l258
  1611  001230                     l258:
  1612  001230  BC80               	btfsc	3968,6,c	;volatile
  1613  001232  D7FE               	goto	l258
  1614  001234                     l257:
  1615                           
  1616                           ;keyboard.c: 31: if (PORTCbits.RC2==1){key=16;lcd_putrs("D");while(PORTCbits.RC2==1){};}
  1617  001234  A482               	btfss	3970,2,c	;volatile
  1618  001236  D00D               	goto	l2449
  1619  001238  0E10               	movlw	16
  1620  00123A  6E3A               	movwf	_key,c
  1621  00123C  0E71               	movlw	low (STR_26+6)
  1622  00123E  6E09               	movwf	lcd_putrs@ptr,c
  1623  001240  0E0F               	movlw	high (STR_26+6)
  1624  001242  6E0A               	movwf	lcd_putrs@ptr+1,c
  1625  001244  ECCE  F00D         	call	_lcd_putrs	;wreg free
  1626  001248  D000               	goto	l262
  1627  00124A                     l262:
  1628  00124A  A482               	btfss	3970,2,c	;volatile
  1629  00124C  D002               	goto	l2449
  1630  00124E  D7FD               	goto	l262
  1631  001250  D000               	goto	l2449
  1632  001252                     l2449:
  1633                           
  1634                           ;keyboard.c: 32: }
  1635                           ;keyboard.c: 33: _delay((unsigned long)((98)*(8000000/4000.0)));
  1636  001252  0EFF               	movlw	255
  1637  001254  6E24               	movwf	??_read_keyboard& (0+255),c
  1638  001256  0E8A               	movlw	138
  1639  001258                     u2357:
  1640  001258  2EE8               	decfsz	wreg,f,c
  1641  00125A  D7FE               	goto	u2357
  1642  00125C  2E24               	decfsz	??_read_keyboard& (0+255),f,c
  1643  00125E  D7FC               	goto	u2357
  1644  001260  D000               	nop2	
  1645                           
  1646                           ;keyboard.c: 36: return key;
  1647  001262  503A               	movf	_key,w,c
  1648  001264  0012               	return	
  1649  001266  0012               	return		;funcret
  1650  001268                     __end_of_read_keyboard:
  1651                           	opt stack 0
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           postinc0	equ	0xFEE
  1657                           wreg	equ	0xFE8
  1658                           postdec1	equ	0xFE5
  1659                           fsr1l	equ	0xFE1
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function _sprintf *****************
  1663 ;; Defined at:
  1664 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1667 ;;		 -> buffer2(20), 
  1668 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1669 ;;		 -> STR_21(10), STR_20(15), STR_17(5), STR_14(5), 
  1670 ;;		 -> STR_13(5), STR_12(5), STR_10(5), STR_9(5), 
  1671 ;;		 -> STR_8(5), STR_6(5), STR_5(5), STR_4(5), 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  tmpval          4    0        struct .
  1674 ;;  cp              3    0        PTR const unsigned char 
  1675 ;;  width           2   32[COMRAM] int 
  1676 ;;  val             2   29[COMRAM] unsigned int 
  1677 ;;  ap              2   26[COMRAM] PTR void [1]
  1678 ;;		 -> ?_sprintf(2), 
  1679 ;;  len             2    0        unsigned int 
  1680 ;;  c               1   34[COMRAM] char 
  1681 ;;  prec            1   31[COMRAM] char 
  1682 ;;  flag            1   28[COMRAM] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2   12[COMRAM] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1692 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1693 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1694 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1695 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1696 ;;Total ram usage:       23 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		___lwdiv
  1701 ;;		___lwmod
  1702 ;;		___wmul
  1703 ;;		_isdigit
  1704 ;; This function is called by:
  1705 ;;		_read_keyboard
  1706 ;;		_write_Date
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text5
  1711  001268                     __ptext5:
  1712                           	opt stack 0
  1713  001268                     _sprintf:
  1714                           	opt stack 27
  1715                           
  1716                           ;doprnt.c: 494: va_list ap;
  1717                           ;doprnt.c: 499: signed char c;
  1718                           ;doprnt.c: 501: int width;
  1719                           ;doprnt.c: 506: signed char prec;
  1720                           ;doprnt.c: 508: unsigned char flag;
  1721                           ;doprnt.c: 523: union {
  1722                           ;doprnt.c: 524: unsigned long vd;
  1723                           ;doprnt.c: 525: double integ;
  1724                           ;doprnt.c: 526: } tmpval;
  1725                           ;doprnt.c: 528: unsigned int val;
  1726                           ;doprnt.c: 529: unsigned len;
  1727                           ;doprnt.c: 530: const char * cp;
  1728                           ;doprnt.c: 533: *ap = __va_start();
  1729                           
  1730                           ;incstack = 0
  1731  001268  0E11               	movlw	low (?_sprintf+4)
  1732  00126A  6E1B               	movwf	sprintf@ap,c
  1733  00126C  0E00               	movlw	high (?_sprintf+4)
  1734  00126E  6E1C               	movwf	sprintf@ap+1,c
  1735                           
  1736                           ;doprnt.c: 536: while(c = *f++) {
  1737  001270  D117               	goto	l2355
  1738  001272                     l2273:
  1739                           
  1740                           ;doprnt.c: 538: if(c != '%')
  1741  001272  0E25               	movlw	37
  1742  001274  1823               	xorwf	sprintf@c,w,c
  1743  001276  B4D8               	btfsc	status,2,c
  1744  001278  D009               	goto	l2279
  1745                           
  1746                           ;doprnt.c: 540: {
  1747                           ;doprnt.c: 541: ((*sp++ = (c)));
  1748  00127A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1749  00127E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1750  001282  C023  FFDF         	movff	sprintf@c,indf2
  1751  001286  4A0D               	infsnz	sprintf@sp,f,c
  1752  001288  2A0E               	incf	sprintf@sp+1,f,c
  1753                           
  1754                           ;doprnt.c: 542: continue;
  1755  00128A  D10A               	goto	l2355
  1756  00128C                     l2279:
  1757                           
  1758                           ;doprnt.c: 543: }
  1759                           ;doprnt.c: 546: width = 0;
  1760  00128C  0E00               	movlw	0
  1761  00128E  6E22               	movwf	sprintf@width+1,c
  1762  001290  0E00               	movlw	0
  1763  001292  6E21               	movwf	sprintf@width,c
  1764                           
  1765                           ;doprnt.c: 548: flag = 0;
  1766  001294  0E00               	movlw	0
  1767  001296  6E1D               	movwf	sprintf@flag,c
  1768                           
  1769                           ;doprnt.c: 551: switch(*f) {
  1770                           
  1771                           ;doprnt.c: 550: for(;;) {
  1772  001298  D005               	goto	l2285
  1773  00129A                     l2281:
  1774                           
  1775                           ;doprnt.c: 580: flag |= 0x04;
  1776  00129A  841D               	bsf	sprintf@flag,2,c
  1777                           
  1778                           ;doprnt.c: 581: f++;
  1779  00129C  4A0F               	infsnz	sprintf@f,f,c
  1780  00129E  2A10               	incf	sprintf@f+1,f,c
  1781                           
  1782                           ;doprnt.c: 582: continue;
  1783  0012A0  D001               	goto	l2285
  1784                           
  1785                           ;doprnt.c: 584: }
  1786  0012A2  D00B               	goto	l2287
  1787  0012A4                     l2285:
  1788  0012A4  C00F  FFF6         	movff	sprintf@f,tblptrl
  1789  0012A8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1790  0012AC                     	if	0	;tblptru may be non-zero
  1791  0012AC                     	endif
  1792  0012AC                     	if	0	;tblptru may be non-zero
  1793  0012AC                     	endif
  1794  0012AC  0008               	tblrd		*
  1795  0012AE  50F5               	movf	tablat,w,c
  1796                           
  1797                           ; Switch size 1, requested type "space"
  1798                           ; Number of cases is 1, Range of values is 48 to 48
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte            4     3 (average)
  1802                           ;	Chosen strategy is simple_byte
  1803  0012B0  0A30               	xorlw	48	; case 48
  1804  0012B2  B4D8               	btfsc	status,2,c
  1805  0012B4  D7F2               	goto	l2281
  1806                           
  1807                           ;doprnt.c: 585: break;
  1808  0012B6  D001               	goto	l2287
  1809                           
  1810                           ;doprnt.c: 586: }
  1811  0012B8  D7F5               	goto	l2285
  1812  0012BA                     l2287:
  1813                           
  1814                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1815  0012BA  C00F  FFF6         	movff	sprintf@f,tblptrl
  1816  0012BE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1817  0012C2                     	if	0	;tblptru may be non-zero
  1818  0012C2                     	endif
  1819  0012C2                     	if	0	;tblptru may be non-zero
  1820  0012C2                     	endif
  1821  0012C2  0008               	tblrd		*
  1822  0012C4  50F5               	movf	tablat,w,c
  1823  0012C6  EC14  F00F         	call	_isdigit
  1824  0012CA  A0D8               	btfss	status,0,c
  1825  0012CC  D03A               	goto	l2303
  1826                           
  1827                           ;doprnt.c: 598: width = 0;
  1828  0012CE  0E00               	movlw	0
  1829  0012D0  6E22               	movwf	sprintf@width+1,c
  1830  0012D2  0E00               	movlw	0
  1831  0012D4  6E21               	movwf	sprintf@width,c
  1832  0012D6  D000               	goto	l2291
  1833  0012D8                     l2291:
  1834                           
  1835                           ;doprnt.c: 600: width *= 10;
  1836  0012D8  C021  F001         	movff	sprintf@width,___wmul@multiplier
  1837  0012DC  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1838  0012E0  0E00               	movlw	0
  1839  0012E2  6E04               	movwf	___wmul@multiplicand+1,c
  1840  0012E4  0E0A               	movlw	10
  1841  0012E6  6E03               	movwf	___wmul@multiplicand,c
  1842  0012E8  ECEE  F00E         	call	___wmul	;wreg free
  1843  0012EC  C001  F021         	movff	?___wmul,sprintf@width
  1844  0012F0  C002  F022         	movff	?___wmul+1,sprintf@width+1
  1845                           
  1846                           ;doprnt.c: 601: width += *f++ - '0';
  1847  0012F4  0ED0               	movlw	208
  1848  0012F6  6E17               	movwf	??_sprintf& (0+255),c
  1849  0012F8  0EFF               	movlw	255
  1850  0012FA  6E18               	movwf	(??_sprintf+1)& (0+255),c
  1851  0012FC  C00F  FFF6         	movff	sprintf@f,tblptrl
  1852  001300  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1853  001304                     	if	0	;tblptru may be non-zero
  1854  001304                     	endif
  1855  001304                     	if	0	;tblptru may be non-zero
  1856  001304                     	endif
  1857  001304  0008               	tblrd		*
  1858  001306  50F5               	movf	tablat,w,c
  1859  001308  6E19               	movwf	(??_sprintf+2)& (0+255),c
  1860  00130A  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  1861  00130C  5017               	movf	??_sprintf,w,c
  1862  00130E  2619               	addwf	??_sprintf+2,f,c
  1863  001310  5018               	movf	??_sprintf+1,w,c
  1864  001312  221A               	addwfc	??_sprintf+3,f,c
  1865  001314  5019               	movf	??_sprintf+2,w,c
  1866  001316  2621               	addwf	sprintf@width,f,c
  1867  001318  501A               	movf	??_sprintf+3,w,c
  1868  00131A  2222               	addwfc	sprintf@width+1,f,c
  1869  00131C  4A0F               	infsnz	sprintf@f,f,c
  1870  00131E  2A10               	incf	sprintf@f+1,f,c
  1871                           
  1872                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1873  001320  C00F  FFF6         	movff	sprintf@f,tblptrl
  1874  001324  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1875  001328                     	if	0	;tblptru may be non-zero
  1876  001328                     	endif
  1877  001328                     	if	0	;tblptru may be non-zero
  1878  001328                     	endif
  1879  001328  0008               	tblrd		*
  1880  00132A  50F5               	movf	tablat,w,c
  1881  00132C  EC14  F00F         	call	_isdigit
  1882  001330  A0D8               	btfss	status,0,c
  1883  001332  D007               	goto	l2303
  1884  001334  D7D1               	goto	l2291
  1885                           
  1886                           ;doprnt.c: 608: }
  1887                           ;doprnt.c: 635: switch(c = *f++) {
  1888  001336  D005               	goto	l2303
  1889                           
  1890                           ;doprnt.c: 638: goto alldone;
  1891                           
  1892                           ;doprnt.c: 637: case 0:
  1893  001338  D0C1               	goto	l2357
  1894                           
  1895                           ;doprnt.c: 813: continue;
  1896                           
  1897                           ;doprnt.c: 802: default:
  1898  00133A  D0B2               	goto	l2355
  1899  00133C                     l2299:
  1900                           
  1901                           ;doprnt.c: 818: flag |= 0xC0;
  1902  00133C  0EC0               	movlw	192
  1903  00133E  121D               	iorwf	sprintf@flag,f,c
  1904                           
  1905                           ;doprnt.c: 822: }
  1906                           
  1907                           ;doprnt.c: 819: break;
  1908  001340  D011               	goto	l2305
  1909  001342                     l2303:
  1910  001342  C00F  FFF6         	movff	sprintf@f,tblptrl
  1911  001346  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1912  00134A  4A0F               	infsnz	sprintf@f,f,c
  1913  00134C  2A10               	incf	sprintf@f+1,f,c
  1914  00134E                     	if	0	;tblptru may be non-zero
  1915  00134E                     	endif
  1916  00134E                     	if	0	;tblptru may be non-zero
  1917  00134E                     	endif
  1918  00134E  0008               	tblrd		*
  1919  001350  CFF5 F023          	movff	tablat,sprintf@c
  1920  001354  5023               	movf	sprintf@c,w,c
  1921                           
  1922                           ; Switch size 1, requested type "space"
  1923                           ; Number of cases is 2, Range of values is 0 to 117
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte            7     4 (average)
  1927                           ;	Chosen strategy is simple_byte
  1928  001356  0A00               	xorlw	0	; case 0
  1929  001358  B4D8               	btfsc	status,2,c
  1930  00135A  D0B0               	goto	l2357
  1931  00135C  0A75               	xorlw	117	; case 117
  1932  00135E  B4D8               	btfsc	status,2,c
  1933  001360  D7ED               	goto	l2299
  1934  001362  D09E               	goto	l2355
  1935  001364                     l2305:
  1936                           
  1937                           ;doprnt.c: 1273: {
  1938                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1939  001364  C01B  FFD9         	movff	sprintf@ap,fsr2l
  1940  001368  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  1941  00136C  CFDE F01E          	movff	postinc2,sprintf@val
  1942  001370  CFDD F01F          	movff	postdec2,sprintf@val+1
  1943  001374  0E02               	movlw	2
  1944  001376  261B               	addwf	sprintf@ap,f,c
  1945  001378  0E00               	movlw	0
  1946  00137A  221C               	addwfc	sprintf@ap+1,f,c
  1947                           
  1948                           ;doprnt.c: 1287: }
  1949                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1950  00137C  0E01               	movlw	1
  1951  00137E  6E23               	movwf	sprintf@c,c
  1952  001380                     l2311:
  1953  001380  0E05               	movlw	5
  1954  001382  1823               	xorwf	sprintf@c,w,c
  1955  001384  B4D8               	btfsc	status,2,c
  1956  001386  D016               	goto	l2323
  1957  001388  D001               	goto	l2315
  1958  00138A  D014               	goto	l2323
  1959  00138C                     l2315:
  1960                           
  1961                           ;doprnt.c: 1306: if(val < dpowers[c])
  1962  00138C  5023               	movf	sprintf@c,w,c
  1963  00138E  0D02               	mullw	2
  1964  001390  0E01               	movlw	low _dpowers
  1965  001392  24F3               	addwf	prodl,w,c
  1966  001394  6EF6               	movwf	tblptrl,c
  1967  001396  0E0F               	movlw	high _dpowers
  1968  001398  20F4               	addwfc	prodh,w,c
  1969  00139A  6EF7               	movwf	tblptrh,c
  1970  00139C                     	if	0	;There are less than 3 active tblptr bytes
  1971  00139C                     	endif
  1972  00139C  0009               	tblrd		*+
  1973  00139E  50F5               	movf	tablat,w,c
  1974  0013A0  5C1E               	subwf	sprintf@val,w,c
  1975  0013A2  0009               	tblrd		*+
  1976  0013A4  50F5               	movf	tablat,w,c
  1977  0013A6  581F               	subwfb	sprintf@val+1,w,c
  1978  0013A8  A0D8               	btfss	status,0,c
  1979  0013AA  D004               	goto	l2323
  1980  0013AC  D001               	goto	l2319
  1981                           
  1982                           ;doprnt.c: 1307: break;
  1983  0013AE  D002               	goto	l2323
  1984  0013B0                     l2319:
  1985  0013B0  2A23               	incf	sprintf@c,f,c
  1986  0013B2  D7E6               	goto	l2311
  1987  0013B4                     l2323:
  1988                           
  1989                           ;doprnt.c: 1381: if(width > c)
  1990  0013B4  0E80               	movlw	128
  1991  0013B6  BE23               	btfsc	sprintf@c,7,c
  1992  0013B8  0E7F               	movlw	127
  1993  0013BA  6E17               	movwf	??_sprintf& (0+255),c
  1994  0013BC  5021               	movf	sprintf@width,w,c
  1995  0013BE  5C23               	subwf	sprintf@c,w,c
  1996  0013C0  5022               	movf	sprintf@width+1,w,c
  1997  0013C2  0A80               	xorlw	128
  1998  0013C4  5817               	subwfb	??_sprintf& (0+255),w,c
  1999  0013C6  B0D8               	btfsc	status,0,c
  2000  0013C8  D007               	goto	l2327
  2001                           
  2002                           ;doprnt.c: 1382: width -= c;
  2003  0013CA  5023               	movf	sprintf@c,w,c
  2004  0013CC  5E21               	subwf	sprintf@width,f,c
  2005  0013CE  0E00               	movlw	0
  2006  0013D0  BE23               	btfsc	sprintf@c,7,c
  2007  0013D2  0EFF               	movlw	255
  2008  0013D4  5A22               	subwfb	sprintf@width+1,f,c
  2009  0013D6  D005               	goto	l2329
  2010  0013D8                     l2327:
  2011                           
  2012                           ;doprnt.c: 1383: else
  2013                           ;doprnt.c: 1384: width = 0;
  2014  0013D8  0E00               	movlw	0
  2015  0013DA  6E22               	movwf	sprintf@width+1,c
  2016  0013DC  0E00               	movlw	0
  2017  0013DE  6E21               	movwf	sprintf@width,c
  2018  0013E0  D000               	goto	l2329
  2019  0013E2                     l2329:
  2020                           
  2021                           ;doprnt.c: 1387: if(flag & 0x04) {
  2022  0013E2  A41D               	btfss	sprintf@flag,2,c
  2023  0013E4  D015               	goto	l2339
  2024                           
  2025                           ;doprnt.c: 1415: if(width)
  2026  0013E6  5021               	movf	sprintf@width,w,c
  2027  0013E8  1022               	iorwf	sprintf@width+1,w,c
  2028  0013EA  B4D8               	btfsc	status,2,c
  2029  0013EC  D026               	goto	l622
  2030  0013EE                     l2333:
  2031                           
  2032                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  2033  0013EE  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2034  0013F2  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2035  0013F6  0E30               	movlw	48
  2036  0013F8  6EDF               	movwf	indf2,c
  2037  0013FA  4A0D               	infsnz	sprintf@sp,f,c
  2038  0013FC  2A0E               	incf	sprintf@sp+1,f,c
  2039                           
  2040                           ;doprnt.c: 1418: while(--width);
  2041  0013FE  0621               	decf	sprintf@width,f,c
  2042  001400  A0D8               	btfss	status,0,c
  2043  001402  0622               	decf	sprintf@width+1,f,c
  2044  001404  5021               	movf	sprintf@width,w,c
  2045  001406  1022               	iorwf	sprintf@width+1,w,c
  2046  001408  B4D8               	btfsc	status,2,c
  2047  00140A  D017               	goto	l622
  2048  00140C  D7F0               	goto	l2333
  2049                           
  2050                           ;doprnt.c: 1420: } else
  2051  00140E  D015               	goto	l622
  2052  001410                     l2339:
  2053                           
  2054                           ;doprnt.c: 1422: {
  2055                           ;doprnt.c: 1424: if(width
  2056                           ;doprnt.c: 1428: )
  2057  001410  5021               	movf	sprintf@width,w,c
  2058  001412  1022               	iorwf	sprintf@width+1,w,c
  2059  001414  B4D8               	btfsc	status,2,c
  2060  001416  D011               	goto	l622
  2061  001418                     l2341:
  2062                           
  2063                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2064  001418  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2065  00141C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2066  001420  0E20               	movlw	32
  2067  001422  6EDF               	movwf	indf2,c
  2068  001424  4A0D               	infsnz	sprintf@sp,f,c
  2069  001426  2A0E               	incf	sprintf@sp+1,f,c
  2070                           
  2071                           ;doprnt.c: 1431: while(--width);
  2072  001428  0621               	decf	sprintf@width,f,c
  2073  00142A  A0D8               	btfss	status,0,c
  2074  00142C  0622               	decf	sprintf@width+1,f,c
  2075  00142E  5021               	movf	sprintf@width,w,c
  2076  001430  1022               	iorwf	sprintf@width+1,w,c
  2077  001432  B4D8               	btfsc	status,2,c
  2078  001434  D002               	goto	l622
  2079  001436  D7F0               	goto	l2341
  2080  001438  D000               	goto	l622
  2081  00143A                     l622:
  2082                           
  2083                           ;doprnt.c: 1469: }
  2084                           ;doprnt.c: 1472: prec = c;
  2085  00143A  C023  F020         	movff	sprintf@c,sprintf@prec
  2086                           
  2087                           ;doprnt.c: 1474: while(prec--) {
  2088  00143E  D02A               	goto	l2353
  2089  001440                     l2347:
  2090                           
  2091                           ;doprnt.c: 1478: {
  2092                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2093  001440  5020               	movf	sprintf@prec,w,c
  2094  001442  0D02               	mullw	2
  2095  001444  0E01               	movlw	low _dpowers
  2096  001446  24F3               	addwf	prodl,w,c
  2097  001448  6EF6               	movwf	tblptrl,c
  2098  00144A  0E0F               	movlw	high _dpowers
  2099  00144C  20F4               	addwfc	prodh,w,c
  2100  00144E  6EF7               	movwf	tblptrh,c
  2101  001450                     	if	0	;There are less than 3 active tblptr bytes
  2102  001450                     	endif
  2103  001450  0009               	tblrd		*+
  2104  001452  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2105  001456  000A               	tblrd		*-
  2106  001458  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2107  00145C  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  2108  001460  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  2109  001464  EC76  F00D         	call	___lwdiv	;wreg free
  2110  001468  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2111  00146C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2112  001470  0E00               	movlw	0
  2113  001472  6E0B               	movwf	___lwmod@divisor+1,c
  2114  001474  0E0A               	movlw	10
  2115  001476  6E0A               	movwf	___lwmod@divisor,c
  2116  001478  ECF8  F00D         	call	___lwmod	;wreg free
  2117  00147C  5008               	movf	?___lwmod,w,c
  2118  00147E  0F30               	addlw	48
  2119  001480  6E23               	movwf	sprintf@c,c
  2120                           
  2121                           ;doprnt.c: 1523: }
  2122                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2123  001482  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2124  001486  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2125  00148A  C023  FFDF         	movff	sprintf@c,indf2
  2126  00148E  4A0D               	infsnz	sprintf@sp,f,c
  2127  001490  2A0E               	incf	sprintf@sp+1,f,c
  2128  001492  D000               	goto	l2353
  2129  001494                     l2353:
  2130  001494  0620               	decf	sprintf@prec,f,c
  2131  001496  2820               	incf	sprintf@prec,w,c
  2132  001498  B4D8               	btfsc	status,2,c
  2133  00149A  D002               	goto	l2355
  2134  00149C  D7D1               	goto	l2347
  2135  00149E  D000               	goto	l2355
  2136  0014A0                     l2355:
  2137  0014A0  C00F  FFF6         	movff	sprintf@f,tblptrl
  2138  0014A4  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2139  0014A8  4A0F               	infsnz	sprintf@f,f,c
  2140  0014AA  2A10               	incf	sprintf@f+1,f,c
  2141  0014AC                     	if	0	;tblptru may be non-zero
  2142  0014AC                     	endif
  2143  0014AC                     	if	0	;tblptru may be non-zero
  2144  0014AC                     	endif
  2145  0014AC  0008               	tblrd		*
  2146  0014AE  CFF5 F023          	movff	tablat,sprintf@c
  2147  0014B2  5023               	movf	sprintf@c,w,c
  2148  0014B4  B4D8               	btfsc	status,2,c
  2149  0014B6  D002               	goto	l2357
  2150  0014B8  D6DC               	goto	l2273
  2151  0014BA  D000               	goto	l2357
  2152  0014BC                     l2357:
  2153                           
  2154                           ;doprnt.c: 1538: *sp = 0;
  2155  0014BC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2156  0014C0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2157  0014C4  0E00               	movlw	0
  2158  0014C6  6EDF               	movwf	indf2,c
  2159  0014C8  0012               	return	
  2160                           
  2161                           ;doprnt.c: 1540: return 0;
  2162                           ;	Return value of _sprintf is never used
  2163  0014CA  0012               	return		;funcret
  2164  0014CC                     __end_of_sprintf:
  2165                           	opt stack 0
  2166                           tblptru	equ	0xFF8
  2167                           tblptrh	equ	0xFF7
  2168                           tblptrl	equ	0xFF6
  2169                           tablat	equ	0xFF5
  2170                           prodh	equ	0xFF4
  2171                           prodl	equ	0xFF3
  2172                           postinc0	equ	0xFEE
  2173                           wreg	equ	0xFE8
  2174                           postdec1	equ	0xFE5
  2175                           fsr1l	equ	0xFE1
  2176                           indf2	equ	0xFDF
  2177                           postinc2	equ	0xFDE
  2178                           postdec2	equ	0xFDD
  2179                           fsr2h	equ	0xFDA
  2180                           fsr2l	equ	0xFD9
  2181                           status	equ	0xFD8
  2182                           
  2183 ;; *************** function _isdigit *****************
  2184 ;; Defined at:
  2185 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\isdigit.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  c               1    wreg     unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  c               1    2[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;		None               void
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;Total ram usage:        3 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_sprintf
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text6
  2213  001E28                     __ptext6:
  2214                           	opt stack 0
  2215  001E28                     _isdigit:
  2216                           	opt stack 27
  2217                           
  2218                           ;incstack = 0
  2219                           ;isdigit@c stored from wreg
  2220  001E28  6E03               	movwf	isdigit@c,c
  2221  001E2A  0E00               	movlw	0
  2222  001E2C  6E02               	movwf	_isdigit$2329,c
  2223  001E2E  0E3A               	movlw	58
  2224  001E30  6003               	cpfslt	isdigit@c,c
  2225  001E32  D006               	goto	l2215
  2226  001E34  0E2F               	movlw	47
  2227  001E36  6403               	cpfsgt	isdigit@c,c
  2228  001E38  D003               	goto	l2215
  2229  001E3A  0E01               	movlw	1
  2230  001E3C  6E02               	movwf	_isdigit$2329,c
  2231  001E3E  D000               	goto	l2215
  2232  001E40                     l2215:
  2233  001E40  C002  F001         	movff	_isdigit$2329,??_isdigit
  2234  001E44  3001               	rrcf	??_isdigit,w,c
  2235  001E46  0012               	return	
  2236  001E48  0012               	return		;funcret
  2237  001E4A                     __end_of_isdigit:
  2238                           	opt stack 0
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           prodh	equ	0xFF4
  2244                           prodl	equ	0xFF3
  2245                           postinc0	equ	0xFEE
  2246                           wreg	equ	0xFE8
  2247                           postdec1	equ	0xFE5
  2248                           fsr1l	equ	0xFE1
  2249                           indf2	equ	0xFDF
  2250                           postinc2	equ	0xFDE
  2251                           postdec2	equ	0xFDD
  2252                           fsr2h	equ	0xFDA
  2253                           fsr2l	equ	0xFD9
  2254                           status	equ	0xFD8
  2255                           
  2256 ;; *************** function ___wmul *****************
  2257 ;; Defined at:
  2258 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  multiplier      2    0[COMRAM] unsigned int 
  2261 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  product         2    4[COMRAM] unsigned int 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  2    0[COMRAM] unsigned int 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, prodl, prodh
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;Total ram usage:        6 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_sprintf
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text7
  2287  001DDC                     __ptext7:
  2288                           	opt stack 0
  2289  001DDC                     ___wmul:
  2290                           	opt stack 27
  2291                           
  2292                           ;incstack = 0
  2293  001DDC  5001               	movf	___wmul@multiplier,w,c
  2294  001DDE  0203               	mulwf	___wmul@multiplicand,c
  2295  001DE0  CFF3 F005          	movff	prodl,___wmul@product
  2296  001DE4  CFF4 F006          	movff	prodh,___wmul@product+1
  2297  001DE8  5001               	movf	___wmul@multiplier,w,c
  2298  001DEA  0204               	mulwf	___wmul@multiplicand+1,c
  2299  001DEC  50F3               	movf	prodl,w,c
  2300  001DEE  2606               	addwf	___wmul@product+1,f,c
  2301  001DF0  5002               	movf	___wmul@multiplier+1,w,c
  2302  001DF2  0203               	mulwf	___wmul@multiplicand,c
  2303  001DF4  50F3               	movf	prodl,w,c
  2304  001DF6  2606               	addwf	___wmul@product+1,f,c
  2305  001DF8  C005  F001         	movff	___wmul@product,?___wmul
  2306  001DFC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2307  001E00  0012               	return	
  2308  001E02  0012               	return		;funcret
  2309  001E04                     __end_of___wmul:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           prodh	equ	0xFF4
  2316                           prodl	equ	0xFF3
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           postdec1	equ	0xFE5
  2320                           fsr1l	equ	0xFE1
  2321                           indf2	equ	0xFDF
  2322                           postinc2	equ	0xFDE
  2323                           postdec2	equ	0xFDD
  2324                           fsr2h	equ	0xFDA
  2325                           fsr2l	equ	0xFD9
  2326                           status	equ	0xFD8
  2327                           
  2328 ;; *************** function ___lwmod *****************
  2329 ;; Defined at:
  2330 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  dividend        2    7[COMRAM] unsigned int 
  2333 ;;  divisor         2    9[COMRAM] unsigned int 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  counter         1   11[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2    7[COMRAM] unsigned int 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;Total ram usage:        5 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_sprintf
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text8
  2359  001BF0                     __ptext8:
  2360                           	opt stack 0
  2361  001BF0                     ___lwmod:
  2362                           	opt stack 27
  2363                           
  2364                           ;incstack = 0
  2365  001BF0  500A               	movf	___lwmod@divisor,w,c
  2366  001BF2  100B               	iorwf	___lwmod@divisor+1,w,c
  2367  001BF4  B4D8               	btfsc	status,2,c
  2368  001BF6  D01D               	goto	l1276
  2369  001BF8  0E01               	movlw	1
  2370  001BFA  6E0C               	movwf	___lwmod@counter,c
  2371  001BFC  D005               	goto	l2253
  2372  001BFE                     l2251:
  2373  001BFE  90D8               	bcf	status,0,c
  2374  001C00  360A               	rlcf	___lwmod@divisor,f,c
  2375  001C02  360B               	rlcf	___lwmod@divisor+1,f,c
  2376  001C04  2A0C               	incf	___lwmod@counter,f,c
  2377  001C06  D000               	goto	l2253
  2378  001C08                     l2253:
  2379  001C08  BE0B               	btfsc	___lwmod@divisor+1,7,c
  2380  001C0A  D002               	goto	l2255
  2381  001C0C  D7F8               	goto	l2251
  2382  001C0E  D000               	goto	l2255
  2383  001C10                     l2255:
  2384  001C10  500A               	movf	___lwmod@divisor,w,c
  2385  001C12  5C08               	subwf	___lwmod@dividend,w,c
  2386  001C14  500B               	movf	___lwmod@divisor+1,w,c
  2387  001C16  5809               	subwfb	___lwmod@dividend+1,w,c
  2388  001C18  A0D8               	btfss	status,0,c
  2389  001C1A  D005               	goto	l2259
  2390  001C1C  500A               	movf	___lwmod@divisor,w,c
  2391  001C1E  5E08               	subwf	___lwmod@dividend,f,c
  2392  001C20  500B               	movf	___lwmod@divisor+1,w,c
  2393  001C22  5A09               	subwfb	___lwmod@dividend+1,f,c
  2394  001C24  D000               	goto	l2259
  2395  001C26                     l2259:
  2396  001C26  90D8               	bcf	status,0,c
  2397  001C28  320B               	rrcf	___lwmod@divisor+1,f,c
  2398  001C2A  320A               	rrcf	___lwmod@divisor,f,c
  2399  001C2C  2E0C               	decfsz	___lwmod@counter,f,c
  2400  001C2E  D7F0               	goto	l2255
  2401  001C30  D000               	goto	l1276
  2402  001C32                     l1276:
  2403  001C32  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2404  001C36  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2405  001C3A  0012               	return		;funcret
  2406  001C3C                     __end_of___lwmod:
  2407                           	opt stack 0
  2408                           tblptru	equ	0xFF8
  2409                           tblptrh	equ	0xFF7
  2410                           tblptrl	equ	0xFF6
  2411                           tablat	equ	0xFF5
  2412                           prodh	equ	0xFF4
  2413                           prodl	equ	0xFF3
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           postdec1	equ	0xFE5
  2417                           fsr1l	equ	0xFE1
  2418                           indf2	equ	0xFDF
  2419                           postinc2	equ	0xFDE
  2420                           postdec2	equ	0xFDD
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function ___lwdiv *****************
  2426 ;; Defined at:
  2427 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  dividend        2    0[COMRAM] unsigned int 
  2430 ;;  divisor         2    2[COMRAM] unsigned int 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  quotient        2    4[COMRAM] unsigned int 
  2433 ;;  counter         1    6[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2    0[COMRAM] unsigned int 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2444 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2446 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2447 ;;Total ram usage:        7 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_sprintf
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text9
  2457  001AEC                     __ptext9:
  2458                           	opt stack 0
  2459  001AEC                     ___lwdiv:
  2460                           	opt stack 27
  2461                           
  2462                           ;incstack = 0
  2463  001AEC  0E00               	movlw	0
  2464  001AEE  6E06               	movwf	___lwdiv@quotient+1,c
  2465  001AF0  0E00               	movlw	0
  2466  001AF2  6E05               	movwf	___lwdiv@quotient,c
  2467  001AF4  5003               	movf	___lwdiv@divisor,w,c
  2468  001AF6  1004               	iorwf	___lwdiv@divisor+1,w,c
  2469  001AF8  B4D8               	btfsc	status,2,c
  2470  001AFA  D021               	goto	l1266
  2471  001AFC  0E01               	movlw	1
  2472  001AFE  6E07               	movwf	___lwdiv@counter,c
  2473  001B00  D005               	goto	l2233
  2474  001B02                     l2231:
  2475  001B02  90D8               	bcf	status,0,c
  2476  001B04  3603               	rlcf	___lwdiv@divisor,f,c
  2477  001B06  3604               	rlcf	___lwdiv@divisor+1,f,c
  2478  001B08  2A07               	incf	___lwdiv@counter,f,c
  2479  001B0A  D000               	goto	l2233
  2480  001B0C                     l2233:
  2481  001B0C  BE04               	btfsc	___lwdiv@divisor+1,7,c
  2482  001B0E  D002               	goto	l2235
  2483  001B10  D7F8               	goto	l2231
  2484  001B12  D000               	goto	l2235
  2485  001B14                     l2235:
  2486  001B14  90D8               	bcf	status,0,c
  2487  001B16  3605               	rlcf	___lwdiv@quotient,f,c
  2488  001B18  3606               	rlcf	___lwdiv@quotient+1,f,c
  2489  001B1A  5003               	movf	___lwdiv@divisor,w,c
  2490  001B1C  5C01               	subwf	___lwdiv@dividend,w,c
  2491  001B1E  5004               	movf	___lwdiv@divisor+1,w,c
  2492  001B20  5802               	subwfb	___lwdiv@dividend+1,w,c
  2493  001B22  A0D8               	btfss	status,0,c
  2494  001B24  D006               	goto	l2243
  2495  001B26  5003               	movf	___lwdiv@divisor,w,c
  2496  001B28  5E01               	subwf	___lwdiv@dividend,f,c
  2497  001B2A  5004               	movf	___lwdiv@divisor+1,w,c
  2498  001B2C  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2499  001B2E  8005               	bsf	___lwdiv@quotient,0,c
  2500  001B30  D000               	goto	l2243
  2501  001B32                     l2243:
  2502  001B32  90D8               	bcf	status,0,c
  2503  001B34  3204               	rrcf	___lwdiv@divisor+1,f,c
  2504  001B36  3203               	rrcf	___lwdiv@divisor,f,c
  2505  001B38  2E07               	decfsz	___lwdiv@counter,f,c
  2506  001B3A  D7EC               	goto	l2235
  2507  001B3C  D000               	goto	l1266
  2508  001B3E                     l1266:
  2509  001B3E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2510  001B42  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2511  001B46  0012               	return		;funcret
  2512  001B48                     __end_of___lwdiv:
  2513                           	opt stack 0
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodh	equ	0xFF4
  2519                           prodl	equ	0xFF3
  2520                           postinc0	equ	0xFEE
  2521                           wreg	equ	0xFE8
  2522                           postdec1	equ	0xFE5
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           postdec2	equ	0xFDD
  2527                           fsr2h	equ	0xFDA
  2528                           fsr2l	equ	0xFD9
  2529                           status	equ	0xFD8
  2530                           
  2531 ;; *************** function _lcd_putrs *****************
  2532 ;; Defined at:
  2533 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  2536 ;;		 -> STR_26(8), STR_25(4), STR_24(3), STR_23(11), 
  2537 ;;		 -> STR_22(11), STR_19(2), STR_18(2), STR_16(2), 
  2538 ;;		 -> STR_15(2), STR_11(2), STR_7(2), buffer2(20), 
  2539 ;;		 -> STR_3(10), STR_2(13), STR_1(33), 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;		None               void
  2544 ;; Registers used:
  2545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;Total ram usage:        2 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    4
  2558 ;; This function calls:
  2559 ;;		_lcd_putc
  2560 ;; This function is called by:
  2561 ;;		_main
  2562 ;;		_read_keyboard
  2563 ;;		_write_Date
  2564 ;;		_twinkle
  2565 ;;		_set_vision
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text10
  2570  001B9C                     __ptext10:
  2571                           	opt stack 0
  2572  001B9C                     _lcd_putrs:
  2573                           	opt stack 24
  2574                           
  2575                           ;unmc_lcd_216.c: 223: while(*ptr){
  2576                           
  2577                           ;incstack = 0
  2578  001B9C  D015               	goto	l2269
  2579  001B9E                     l2265:
  2580                           
  2581                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2582  001B9E  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2583  001BA2  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2584  001BA6  6AF8               	clrf	tblptru,c
  2585  001BA8  0E0E               	movlw	(high __ramtop+-1)
  2586  001BAA  64F7               	cpfsgt	tblptrh,c
  2587  001BAC  D003               	bra	u1367
  2588  001BAE  0008               	tblrd		*
  2589  001BB0  50F5               	movf	tablat,w,c
  2590  001BB2  D005               	bra	u1360
  2591  001BB4                     u1367:
  2592  001BB4  CFF6 FFE9          	movff	tblptrl,fsr0l
  2593  001BB8  CFF7 FFEA          	movff	tblptrh,fsr0h
  2594  001BBC  50EF               	movf	indf0,w,c
  2595  001BBE                     u1360:
  2596  001BBE  EC1E  F00E         	call	_lcd_putc
  2597  001BC2  4A09               	infsnz	lcd_putrs@ptr,f,c
  2598  001BC4  2A0A               	incf	lcd_putrs@ptr+1,f,c
  2599  001BC6  D000               	goto	l2269
  2600  001BC8                     l2269:
  2601  001BC8  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2602  001BCC  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2603  001BD0  6AF8               	clrf	tblptru,c
  2604  001BD2  0E0E               	movlw	(high __ramtop+-1)
  2605  001BD4  64F7               	cpfsgt	tblptrh,c
  2606  001BD6  D003               	bra	u1377
  2607  001BD8  0008               	tblrd		*
  2608  001BDA  50F5               	movf	tablat,w,c
  2609  001BDC  D005               	bra	u1370
  2610  001BDE                     u1377:
  2611  001BDE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2612  001BE2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2613  001BE6  50EF               	movf	indf0,w,c
  2614  001BE8                     u1370:
  2615  001BE8  0900               	iorlw	0
  2616  001BEA  A4D8               	btfss	status,2,c
  2617  001BEC  D7D8               	goto	l2265
  2618  001BEE  0012               	return		;funcret
  2619  001BF0                     __end_of_lcd_putrs:
  2620                           	opt stack 0
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           prodh	equ	0xFF4
  2626                           prodl	equ	0xFF3
  2627                           indf0	equ	0xFEF
  2628                           postinc0	equ	0xFEE
  2629                           fsr0h	equ	0xFEA
  2630                           fsr0l	equ	0xFE9
  2631                           wreg	equ	0xFE8
  2632                           postdec1	equ	0xFE5
  2633                           fsr1l	equ	0xFE1
  2634                           indf2	equ	0xFDF
  2635                           postinc2	equ	0xFDE
  2636                           postdec2	equ	0xFDD
  2637                           fsr2h	equ	0xFDA
  2638                           fsr2l	equ	0xFD9
  2639                           status	equ	0xFD8
  2640                           
  2641 ;; *************** function _lcd_putc *****************
  2642 ;; Defined at:
  2643 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  c               1    wreg     unsigned char 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  c               1    7[COMRAM] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;Total ram usage:        1 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    3
  2664 ;; This function calls:
  2665 ;;		_lcd_gotoxy
  2666 ;;		_lcd_send_byte
  2667 ;; This function is called by:
  2668 ;;		_lcd_putrs
  2669 ;;		_lcd_puts
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text11
  2674  001C3C                     __ptext11:
  2675                           	opt stack 0
  2676  001C3C                     _lcd_putc:
  2677                           	opt stack 24
  2678                           
  2679                           ;incstack = 0
  2680                           ;lcd_putc@c stored from wreg
  2681  001C3C  6E08               	movwf	lcd_putc@c,c
  2682                           
  2683                           ;unmc_lcd_216.c: 173: switch(c){
  2684  001C3E  D018               	goto	l2205
  2685  001C40                     l2195:
  2686                           
  2687                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2688  001C40  0E01               	movlw	1
  2689  001C42  6E03               	movwf	lcd_send_byte@n,c
  2690  001C44  0E00               	movlw	0
  2691  001C46  ECD5  F00E         	call	_lcd_send_byte
  2692                           
  2693                           ;unmc_lcd_216.c: 176: break;
  2694  001C4A  0012               	return	
  2695  001C4C                     l2197:
  2696                           
  2697                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2698  001C4C  0E02               	movlw	2
  2699  001C4E  6E05               	movwf	lcd_gotoxy@y,c
  2700  001C50  0E01               	movlw	1
  2701  001C52  EC02  F00F         	call	_lcd_gotoxy
  2702                           
  2703                           ;unmc_lcd_216.c: 179: break;
  2704  001C56  0012               	return	
  2705  001C58                     l2199:
  2706                           
  2707                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2708  001C58  0E10               	movlw	16
  2709  001C5A  6E03               	movwf	lcd_send_byte@n,c
  2710  001C5C  0E00               	movlw	0
  2711  001C5E  ECD5  F00E         	call	_lcd_send_byte
  2712                           
  2713                           ;unmc_lcd_216.c: 182: break;
  2714  001C62  0012               	return	
  2715  001C64                     l2201:
  2716                           
  2717                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2718  001C64  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  2719  001C68  0E01               	movlw	1
  2720  001C6A  ECD5  F00E         	call	_lcd_send_byte
  2721                           
  2722                           ;unmc_lcd_216.c: 186: }
  2723                           
  2724                           ;unmc_lcd_216.c: 185: break;
  2725  001C6E  0012               	return	
  2726  001C70                     l2205:
  2727  001C70  5008               	movf	lcd_putc@c,w,c
  2728                           
  2729                           ; Switch size 1, requested type "space"
  2730                           ; Number of cases is 3, Range of values is 8 to 12
  2731                           ; switch strategies available:
  2732                           ; Name         Instructions Cycles
  2733                           ; simple_byte           10     6 (average)
  2734                           ;	Chosen strategy is simple_byte
  2735  001C72  0A08               	xorlw	8	; case 8
  2736  001C74  B4D8               	btfsc	status,2,c
  2737  001C76  D7F0               	goto	l2199
  2738  001C78  0A02               	xorlw	2	; case 10
  2739  001C7A  B4D8               	btfsc	status,2,c
  2740  001C7C  D7E7               	goto	l2197
  2741  001C7E  0A06               	xorlw	6	; case 12
  2742  001C80  B4D8               	btfsc	status,2,c
  2743  001C82  D7DE               	goto	l2195
  2744  001C84  D7EF               	goto	l2201
  2745  001C86  0012               	return		;funcret
  2746  001C88                     __end_of_lcd_putc:
  2747                           	opt stack 0
  2748                           tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           prodh	equ	0xFF4
  2753                           prodl	equ	0xFF3
  2754                           indf0	equ	0xFEF
  2755                           postinc0	equ	0xFEE
  2756                           fsr0h	equ	0xFEA
  2757                           fsr0l	equ	0xFE9
  2758                           wreg	equ	0xFE8
  2759                           postdec1	equ	0xFE5
  2760                           fsr1l	equ	0xFE1
  2761                           indf2	equ	0xFDF
  2762                           postinc2	equ	0xFDE
  2763                           postdec2	equ	0xFDD
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _lcd_gotoxy *****************
  2769 ;; Defined at:
  2770 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  x               1    wreg     unsigned char 
  2773 ;;  y               1    4[COMRAM] unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  x               1    5[COMRAM] unsigned char 
  2776 ;;  address         1    6[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;		None               void
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, status,0, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2786 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;Total ram usage:        3 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    2
  2793 ;; This function calls:
  2794 ;;		_lcd_send_byte
  2795 ;; This function is called by:
  2796 ;;		_main
  2797 ;;		_lcd_putc
  2798 ;;		_write_Date
  2799 ;;		_twinkle
  2800 ;;		_set_vision
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text12
  2805  001E04                     __ptext12:
  2806                           	opt stack 0
  2807  001E04                     _lcd_gotoxy:
  2808                           	opt stack 24
  2809                           
  2810                           ;incstack = 0
  2811                           ;lcd_gotoxy@x stored from wreg
  2812  001E04  6E06               	movwf	lcd_gotoxy@x,c
  2813                           
  2814                           ;unmc_lcd_216.c: 159: int8 address;
  2815                           ;unmc_lcd_216.c: 161: if(y != 1)
  2816  001E06  0405               	decf	lcd_gotoxy@y,w,c
  2817  001E08  B4D8               	btfsc	status,2,c
  2818  001E0A  D002               	goto	l2187
  2819                           
  2820                           ;unmc_lcd_216.c: 162: address = 0x40;
  2821  001E0C  0E40               	movlw	64
  2822  001E0E  D001               	goto	L1
  2823  001E10                     l2187:
  2824                           
  2825                           ;unmc_lcd_216.c: 163: else
  2826                           ;unmc_lcd_216.c: 164: address=0;
  2827  001E10  0E00               	movlw	0
  2828  001E12                     L1:
  2829  001E12  6E07               	movwf	lcd_gotoxy@address,c
  2830  001E14  D000               	goto	l2189
  2831  001E16                     l2189:
  2832                           
  2833                           ;unmc_lcd_216.c: 166: address += x-1;
  2834  001E16  0406               	decf	lcd_gotoxy@x,w,c
  2835  001E18  2607               	addwf	lcd_gotoxy@address,f,c
  2836                           
  2837                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2838  001E1A  5007               	movf	lcd_gotoxy@address,w,c
  2839  001E1C  0980               	iorlw	128
  2840  001E1E  6E03               	movwf	lcd_send_byte@n,c
  2841  001E20  0E00               	movlw	0
  2842  001E22  ECD5  F00E         	call	_lcd_send_byte
  2843  001E26  0012               	return		;funcret
  2844  001E28                     __end_of_lcd_gotoxy:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           prodh	equ	0xFF4
  2851                           prodl	equ	0xFF3
  2852                           indf0	equ	0xFEF
  2853                           postinc0	equ	0xFEE
  2854                           fsr0h	equ	0xFEA
  2855                           fsr0l	equ	0xFE9
  2856                           wreg	equ	0xFE8
  2857                           postdec1	equ	0xFE5
  2858                           fsr1l	equ	0xFE1
  2859                           indf2	equ	0xFDF
  2860                           postinc2	equ	0xFDE
  2861                           postdec2	equ	0xFDD
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function __delay_s *****************
  2867 ;; Defined at:
  2868 ;;		line 19 in file "lcd_vision.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  seg             1    wreg     unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  seg             1    3[COMRAM] unsigned char 
  2873 ;;  index           2    4[COMRAM] short 
  2874 ;;  it              2    1[COMRAM] short 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;		None               void
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2885 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;Total ram usage:        6 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_twinkle
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text13
  2898  001C88                     __ptext13:
  2899                           	opt stack 0
  2900  001C88                     __delay_s:
  2901                           	opt stack 28
  2902                           
  2903                           ;incstack = 0
  2904                           ;__delay_s@seg stored from wreg
  2905  001C88  6E04               	movwf	__delay_s@seg,c
  2906                           
  2907                           ;lcd_vision.c: 20: short it = 10 * seg;
  2908  001C8A  5004               	movf	__delay_s@seg,w,c
  2909  001C8C  0D0A               	mullw	10
  2910  001C8E  CFF3 F002          	movff	prodl,__delay_s@it
  2911  001C92  CFF4 F003          	movff	prodh,__delay_s@it+1
  2912                           
  2913                           ;lcd_vision.c: 21: short index = 1;
  2914  001C96  0E00               	movlw	0
  2915  001C98  6E06               	movwf	__delay_s@index+1,c
  2916  001C9A  0E01               	movlw	1
  2917  001C9C  6E05               	movwf	__delay_s@index,c
  2918                           
  2919                           ;lcd_vision.c: 23: for(index = 1; index <= it; index++){
  2920  001C9E  0E00               	movlw	0
  2921  001CA0  6E06               	movwf	__delay_s@index+1,c
  2922  001CA2  0E01               	movlw	1
  2923  001CA4  6E05               	movwf	__delay_s@index,c
  2924  001CA6  D00B               	goto	l1807
  2925  001CA8                     l1803:
  2926                           
  2927                           ;lcd_vision.c: 24: _delay((unsigned long)((98)*(8000000/4000.0)));
  2928  001CA8  0EFF               	movlw	255
  2929  001CAA  6E01               	movwf	??__delay_s& (0+255),c
  2930  001CAC  0E8A               	movlw	138
  2931  001CAE                     u2367:
  2932  001CAE  2EE8               	decfsz	wreg,f,c
  2933  001CB0  D7FE               	goto	u2367
  2934  001CB2  2E01               	decfsz	??__delay_s& (0+255),f,c
  2935  001CB4  D7FC               	goto	u2367
  2936  001CB6  D000               	nop2	
  2937  001CB8  4A05               	infsnz	__delay_s@index,f,c
  2938  001CBA  2A06               	incf	__delay_s@index+1,f,c
  2939  001CBC  D000               	goto	l1807
  2940  001CBE                     l1807:
  2941  001CBE  5005               	movf	__delay_s@index,w,c
  2942  001CC0  5C02               	subwf	__delay_s@it,w,c
  2943  001CC2  5003               	movf	__delay_s@it+1,w,c
  2944  001CC4  0A80               	xorlw	128
  2945  001CC6  6E01               	movwf	??__delay_s& (0+255),c
  2946  001CC8  5006               	movf	__delay_s@index+1,w,c
  2947  001CCA  0A80               	xorlw	128
  2948  001CCC  5801               	subwfb	??__delay_s& (0+255),w,c
  2949  001CCE  B0D8               	btfsc	status,0,c
  2950  001CD0  D7EB               	goto	l1803
  2951  001CD2  0012               	return		;funcret
  2952  001CD4                     __end_of__delay_s:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           prodh	equ	0xFF4
  2959                           prodl	equ	0xFF3
  2960                           indf0	equ	0xFEF
  2961                           postinc0	equ	0xFEE
  2962                           fsr0h	equ	0xFEA
  2963                           fsr0l	equ	0xFE9
  2964                           wreg	equ	0xFE8
  2965                           postdec1	equ	0xFE5
  2966                           fsr1l	equ	0xFE1
  2967                           indf2	equ	0xFDF
  2968                           postinc2	equ	0xFDE
  2969                           postdec2	equ	0xFDD
  2970                           fsr2h	equ	0xFDA
  2971                           fsr2l	equ	0xFD9
  2972                           status	equ	0xFD8
  2973                           
  2974 ;; *************** function _clear *****************
  2975 ;; Defined at:
  2976 ;;		line 5 in file "lcd_vision.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;		None               void
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;Total ram usage:        1 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    3
  2997 ;; This function calls:
  2998 ;;		_lcd_comand
  2999 ;; This function is called by:
  3000 ;;		_set_vision
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text14
  3005  001E4A                     __ptext14:
  3006                           	opt stack 0
  3007  001E4A                     _clear:
  3008                           	opt stack 26
  3009                           
  3010                           ;lcd_vision.c: 6: lcd_comand(0b00000001);
  3011                           
  3012                           ;incstack = 0
  3013  001E4A  0E01               	movlw	1
  3014  001E4C  EC4B  F00F         	call	_lcd_comand
  3015                           
  3016                           ;lcd_vision.c: 7: _delay((unsigned long)((5)*(8000000/4000.0)));
  3017  001E50  0E0D               	movlw	13
  3018  001E52  6E06               	movwf	??_clear& (0+255),c
  3019  001E54  0EFC               	movlw	252
  3020  001E56                     u2377:
  3021  001E56  2EE8               	decfsz	wreg,f,c
  3022  001E58  D7FE               	goto	u2377
  3023  001E5A  2E06               	decfsz	??_clear& (0+255),f,c
  3024  001E5C  D7FC               	goto	u2377
  3025  001E5E  0012               	return		;funcret
  3026  001E60                     __end_of_clear:
  3027                           	opt stack 0
  3028                           tblptru	equ	0xFF8
  3029                           tblptrh	equ	0xFF7
  3030                           tblptrl	equ	0xFF6
  3031                           tablat	equ	0xFF5
  3032                           prodh	equ	0xFF4
  3033                           prodl	equ	0xFF3
  3034                           indf0	equ	0xFEF
  3035                           postinc0	equ	0xFEE
  3036                           fsr0h	equ	0xFEA
  3037                           fsr0l	equ	0xFE9
  3038                           wreg	equ	0xFE8
  3039                           postdec1	equ	0xFE5
  3040                           fsr1l	equ	0xFE1
  3041                           indf2	equ	0xFDF
  3042                           postinc2	equ	0xFDE
  3043                           postdec2	equ	0xFDD
  3044                           fsr2h	equ	0xFDA
  3045                           fsr2l	equ	0xFD9
  3046                           status	equ	0xFD8
  3047                           
  3048 ;; *************** function _caratula *****************
  3049 ;; Defined at:
  3050 ;;		line 31 in file "main.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;		None               void
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    3
  3071 ;; This function calls:
  3072 ;;		_lcd_comand
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text15
  3079  001EB2                     __ptext15:
  3080                           	opt stack 0
  3081  001EB2                     _caratula:
  3082                           	opt stack 27
  3083                           
  3084                           ;main.c: 33: lcd_comand(0b00001100);
  3085                           
  3086                           ;incstack = 0
  3087  001EB2  0E0C               	movlw	12
  3088  001EB4  EC4B  F00F         	call	_lcd_comand
  3089  001EB8  0012               	return		;funcret
  3090  001EBA                     __end_of_caratula:
  3091                           	opt stack 0
  3092                           tblptru	equ	0xFF8
  3093                           tblptrh	equ	0xFF7
  3094                           tblptrl	equ	0xFF6
  3095                           tablat	equ	0xFF5
  3096                           prodh	equ	0xFF4
  3097                           prodl	equ	0xFF3
  3098                           indf0	equ	0xFEF
  3099                           postinc0	equ	0xFEE
  3100                           fsr0h	equ	0xFEA
  3101                           fsr0l	equ	0xFE9
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1l	equ	0xFE1
  3105                           indf2	equ	0xFDF
  3106                           postinc2	equ	0xFDE
  3107                           postdec2	equ	0xFDD
  3108                           fsr2h	equ	0xFDA
  3109                           fsr2l	equ	0xFD9
  3110                           status	equ	0xFD8
  3111                           
  3112 ;; *************** function _Setup *****************
  3113 ;; Defined at:
  3114 ;;		line 51 in file "main.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;		None
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;		None
  3119 ;; Return value:  Size  Location     Type
  3120 ;;		None               void
  3121 ;; Registers used:
  3122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3132 ;;Total ram usage:        0 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    3
  3135 ;; This function calls:
  3136 ;;		_Write_RTC
  3137 ;;		_lcd_comand
  3138 ;;		_lcd_init
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text16
  3145  001D1E                     __ptext16:
  3146                           	opt stack 0
  3147  001D1E                     _Setup:
  3148                           	opt stack 27
  3149                           
  3150                           ;main.c: 53: OSCTUNEbits.INTSRC=1;
  3151                           
  3152                           ;incstack = 0
  3153  001D1E  8E9B               	bsf	3995,7,c	;volatile
  3154                           
  3155                           ;main.c: 54: OSCTUNEbits.PLLEN=0;
  3156  001D20  9C9B               	bcf	3995,6,c	;volatile
  3157                           
  3158                           ;main.c: 55: OSCCONbits.IRCF0=1;
  3159  001D22  88D3               	bsf	4051,4,c	;volatile
  3160                           
  3161                           ;main.c: 56: OSCCONbits.IRCF1=1;
  3162  001D24  8AD3               	bsf	4051,5,c	;volatile
  3163                           
  3164                           ;main.c: 57: OSCCONbits.IRCF2=1;
  3165  001D26  8CD3               	bsf	4051,6,c	;volatile
  3166                           
  3167                           ;main.c: 58: OSCCONbits.SCS0=0;
  3168  001D28  90D3               	bcf	4051,0,c	;volatile
  3169                           
  3170                           ;main.c: 59: OSCCONbits.SCS1=0;
  3171  001D2A  92D3               	bcf	4051,1,c	;volatile
  3172                           
  3173                           ;main.c: 60: TRISA = 0b11110000;
  3174  001D2C  0EF0               	movlw	240
  3175  001D2E  6E92               	movwf	3986,c	;volatile
  3176                           
  3177                           ;main.c: 61: TRISB = 0;
  3178  001D30  0E00               	movlw	0
  3179  001D32  6E93               	movwf	3987,c	;volatile
  3180                           
  3181                           ;main.c: 62: TRISC = 0b00000111;
  3182  001D34  0E07               	movlw	7
  3183  001D36  6E94               	movwf	3988,c	;volatile
  3184                           
  3185                           ;main.c: 66: ANCON0=0b11111111;
  3186  001D38  010F               	movlb	15	; () banked
  3187  001D3A  6948               	setf	72,b	;volatile
  3188                           
  3189                           ; BSR set to: 15
  3190                           ;main.c: 68: ANCON1=0b11111111;
  3191  001D3C  010F               	movlb	15	; () banked
  3192  001D3E  6949               	setf	73,b	;volatile
  3193                           
  3194                           ;main.c: 69: ADCON0=0b00101101;
  3195  001D40  0E2D               	movlw	45
  3196  001D42  6EC2               	movwf	4034,c	;volatile
  3197                           
  3198                           ;main.c: 70: ADCON1=0b00010000;
  3199  001D44  0E10               	movlw	16
  3200  001D46  6EC1               	movwf	4033,c	;volatile
  3201                           
  3202                           ; BSR set to: 15
  3203                           ;main.c: 71: RTCCFGbits.RTCEN=1;
  3204  001D48  010F               	movlb	15	; () banked
  3205  001D4A  8F3F               	bsf	63,7,b	;volatile
  3206                           
  3207                           ; BSR set to: 15
  3208                           ;main.c: 72: RTCCFGbits.RTCWREN=1;
  3209  001D4C  010F               	movlb	15	; () banked
  3210  001D4E  8B3F               	bsf	63,5,b	;volatile
  3211                           
  3212                           ; BSR set to: 15
  3213                           ;main.c: 73: T1CONbits.T1OSCEN=1;
  3214  001D50  86CD               	bsf	4045,3,c	;volatile
  3215                           
  3216                           ; BSR set to: 15
  3217                           ;main.c: 74: Write_RTC();
  3218  001D52  EC66  F00A         	call	_Write_RTC	;wreg free
  3219                           
  3220                           ;main.c: 75: lcd_init();
  3221  001D56  EC7E  F00C         	call	_lcd_init	;wreg free
  3222                           
  3223                           ;main.c: 76: lcd_comand(0b00001100);
  3224  001D5A  0E0C               	movlw	12
  3225  001D5C  EC4B  F00F         	call	_lcd_comand
  3226                           
  3227                           ;main.c: 77: LATBbits.LATB1 = 1;;
  3228  001D60  828A               	bsf	3978,1,c	;volatile
  3229                           
  3230                           ;main.c: 78: LATBbits.LATB0 = 1;;
  3231  001D62  808A               	bsf	3978,0,c	;volatile
  3232  001D64  0012               	return		;funcret
  3233  001D66                     __end_of_Setup:
  3234                           	opt stack 0
  3235                           tblptru	equ	0xFF8
  3236                           tblptrh	equ	0xFF7
  3237                           tblptrl	equ	0xFF6
  3238                           tablat	equ	0xFF5
  3239                           prodh	equ	0xFF4
  3240                           prodl	equ	0xFF3
  3241                           indf0	equ	0xFEF
  3242                           postinc0	equ	0xFEE
  3243                           fsr0h	equ	0xFEA
  3244                           fsr0l	equ	0xFE9
  3245                           wreg	equ	0xFE8
  3246                           postdec1	equ	0xFE5
  3247                           fsr1l	equ	0xFE1
  3248                           indf2	equ	0xFDF
  3249                           postinc2	equ	0xFDE
  3250                           postdec2	equ	0xFDD
  3251                           fsr2h	equ	0xFDA
  3252                           fsr2l	equ	0xFD9
  3253                           status	equ	0xFD8
  3254                           
  3255 ;; *************** function _lcd_init *****************
  3256 ;; Defined at:
  3257 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  i               1    4[COMRAM] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;		None               void
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;Total ram usage:        1 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    2
  3278 ;; This function calls:
  3279 ;;		_Delay1KTCYx
  3280 ;;		_lcd_send_byte
  3281 ;;		_lcd_send_nibble
  3282 ;; This function is called by:
  3283 ;;		_Setup
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text17
  3288  0018FC                     __ptext17:
  3289                           	opt stack 0
  3290  0018FC                     _lcd_init:
  3291                           	opt stack 27
  3292                           
  3293                           ;unmc_lcd_216.c: 120: int8 i;
  3294                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  3295                           
  3296                           ;incstack = 0
  3297  0018FC  9693               	bcf	3987,3,c	;volatile
  3298                           
  3299                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  3300  0018FE  9493               	bcf	3987,2,c	;volatile
  3301                           
  3302                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  3303  001900  968A               	bcf	3978,3,c	;volatile
  3304                           
  3305                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  3306  001902  948A               	bcf	3978,2,c	;volatile
  3307                           
  3308                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  3309  001904  9893               	bcf	3987,4,c	;volatile
  3310                           
  3311                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  3312  001906  9A93               	bcf	3987,5,c	;volatile
  3313                           
  3314                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  3315  001908  9C93               	bcf	3987,6,c	;volatile
  3316                           
  3317                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  3318  00190A  9E93               	bcf	3987,7,c	;volatile
  3319                           
  3320                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  3321  00190C  0E0A               	movlw	10
  3322  00190E  EC30  F00F         	call	_Delay1KTCYx
  3323                           
  3324                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  3325  001912  0E0A               	movlw	10
  3326  001914  EC30  F00F         	call	_Delay1KTCYx
  3327                           
  3328                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  3329  001918  0E0A               	movlw	10
  3330  00191A  EC30  F00F         	call	_Delay1KTCYx
  3331                           
  3332                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  3333  00191E  0E00               	movlw	0
  3334  001920  6E05               	movwf	lcd_init@i,c
  3335  001922                     l2691:
  3336  001922  0E02               	movlw	2
  3337  001924  6405               	cpfsgt	lcd_init@i,c
  3338  001926  D001               	goto	l2695
  3339  001928  D008               	goto	l2701
  3340  00192A                     l2695:
  3341                           
  3342                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  3343  00192A  0E03               	movlw	3
  3344  00192C  EC3B  F00D         	call	_lcd_send_nibble
  3345                           
  3346                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  3347  001930  0E0A               	movlw	10
  3348  001932  EC30  F00F         	call	_Delay1KTCYx
  3349  001936  2A05               	incf	lcd_init@i,f,c
  3350  001938  D7F4               	goto	l2691
  3351  00193A                     l2701:
  3352                           
  3353                           ;unmc_lcd_216.c: 146: }
  3354                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  3355  00193A  0E02               	movlw	2
  3356  00193C  EC3B  F00D         	call	_lcd_send_nibble
  3357                           
  3358                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  3359  001940  0E00               	movlw	0
  3360  001942  6E05               	movwf	lcd_init@i,c
  3361  001944  0E03               	movlw	3
  3362  001946  6405               	cpfsgt	lcd_init@i,c
  3363  001948  D002               	goto	l2709
  3364  00194A  0012               	return	
  3365  00194C  0012               	return	
  3366  00194E                     l2709:
  3367                           
  3368                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  3369  00194E  5005               	movf	lcd_init@i,w,c
  3370  001950  0D01               	mullw	1
  3371  001952  0E0B               	movlw	low _LCD_INIT_STRING
  3372  001954  24F3               	addwf	prodl,w,c
  3373  001956  6EF6               	movwf	tblptrl,c
  3374  001958  0E0F               	movlw	high _LCD_INIT_STRING
  3375  00195A  20F4               	addwfc	prodh,w,c
  3376  00195C  6EF7               	movwf	tblptrh,c
  3377  00195E                     	if	0	;There are less than 3 active tblptr bytes
  3378  00195E                     	endif
  3379  00195E  0008               	tblrd		*
  3380  001960  CFF5 F003          	movff	tablat,lcd_send_byte@n
  3381  001964  0E00               	movlw	0
  3382  001966  ECD5  F00E         	call	_lcd_send_byte
  3383                           
  3384                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  3385  00196A  0E0A               	movlw	10
  3386  00196C  EC30  F00F         	call	_Delay1KTCYx
  3387  001970  2A05               	incf	lcd_init@i,f,c
  3388  001972  0E03               	movlw	3
  3389  001974  6405               	cpfsgt	lcd_init@i,c
  3390  001976  D7EB               	goto	l2709
  3391  001978  0012               	return	
  3392  00197A  0012               	return		;funcret
  3393  00197C                     __end_of_lcd_init:
  3394                           	opt stack 0
  3395                           tblptru	equ	0xFF8
  3396                           tblptrh	equ	0xFF7
  3397                           tblptrl	equ	0xFF6
  3398                           tablat	equ	0xFF5
  3399                           prodh	equ	0xFF4
  3400                           prodl	equ	0xFF3
  3401                           indf0	equ	0xFEF
  3402                           postinc0	equ	0xFEE
  3403                           fsr0h	equ	0xFEA
  3404                           fsr0l	equ	0xFE9
  3405                           wreg	equ	0xFE8
  3406                           postdec1	equ	0xFE5
  3407                           fsr1l	equ	0xFE1
  3408                           indf2	equ	0xFDF
  3409                           postinc2	equ	0xFDE
  3410                           postdec2	equ	0xFDD
  3411                           fsr2h	equ	0xFDA
  3412                           fsr2l	equ	0xFD9
  3413                           status	equ	0xFD8
  3414                           
  3415 ;; *************** function _Delay1KTCYx *****************
  3416 ;; Defined at:
  3417 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d1ktcyx.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  unit            1    wreg     unsigned char 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  unit            1    0[COMRAM] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;		None               void
  3424 ;; Registers used:
  3425 ;;		wreg
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3435 ;;Total ram usage:        1 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_lcd_init
  3441 ;;		_DelayPORXLCD
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text18
  3446  001E60                     __ptext18:
  3447                           	opt stack 0
  3448  001E60                     _Delay1KTCYx:
  3449                           	opt stack 28
  3450                           
  3451                           ;incstack = 0
  3452                           ;Delay1KTCYx@unit stored from wreg
  3453  001E60  6E01               	movwf	Delay1KTCYx@unit,c
  3454  001E62  0EFA               	movlw	250
  3455  001E64                     u2387:
  3456  001E64  F000               	nop	
  3457  001E66  2EE8               	decfsz	wreg,f,c
  3458  001E68  D7FD               	goto	u2387
  3459  001E6A  2E01               	decfsz	Delay1KTCYx@unit,f,c
  3460  001E6C  D7FA               	goto	l1657
  3461  001E6E  0012               	return	
  3462  001E70  0012               	return		;funcret
  3463  001E72                     __end_of_Delay1KTCYx:
  3464                           	opt stack 0
  3465                           tblptru	equ	0xFF8
  3466                           tblptrh	equ	0xFF7
  3467                           tblptrl	equ	0xFF6
  3468                           tablat	equ	0xFF5
  3469                           prodh	equ	0xFF4
  3470                           prodl	equ	0xFF3
  3471                           indf0	equ	0xFEF
  3472                           postinc0	equ	0xFEE
  3473                           fsr0h	equ	0xFEA
  3474                           fsr0l	equ	0xFE9
  3475                           wreg	equ	0xFE8
  3476                           postdec1	equ	0xFE5
  3477                           fsr1l	equ	0xFE1
  3478                           indf2	equ	0xFDF
  3479                           postinc2	equ	0xFDE
  3480                           postdec2	equ	0xFDD
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _lcd_comand *****************
  3486 ;; Defined at:
  3487 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  d               1    wreg     unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  d               1    4[COMRAM] unsigned char 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;		None               void
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3505 ;;Total ram usage:        1 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    2
  3508 ;; This function calls:
  3509 ;;		_lcd_send_byte
  3510 ;; This function is called by:
  3511 ;;		_caratula
  3512 ;;		_Setup
  3513 ;;		_clear
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           	psect	text19
  3518  001E96                     __ptext19:
  3519                           	opt stack 0
  3520  001E96                     _lcd_comand:
  3521                           	opt stack 26
  3522                           
  3523                           ;incstack = 0
  3524                           ;lcd_comand@d stored from wreg
  3525  001E96  6E05               	movwf	lcd_comand@d,c
  3526                           
  3527                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  3528  001E98  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  3529  001E9C  0E00               	movlw	0
  3530  001E9E  ECD5  F00E         	call	_lcd_send_byte
  3531  001EA2  0012               	return		;funcret
  3532  001EA4                     __end_of_lcd_comand:
  3533                           	opt stack 0
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           prodh	equ	0xFF4
  3539                           prodl	equ	0xFF3
  3540                           indf0	equ	0xFEF
  3541                           postinc0	equ	0xFEE
  3542                           fsr0h	equ	0xFEA
  3543                           fsr0l	equ	0xFE9
  3544                           wreg	equ	0xFE8
  3545                           postdec1	equ	0xFE5
  3546                           fsr1l	equ	0xFE1
  3547                           indf2	equ	0xFDF
  3548                           postinc2	equ	0xFDE
  3549                           postdec2	equ	0xFDD
  3550                           fsr2h	equ	0xFDA
  3551                           fsr2l	equ	0xFD9
  3552                           status	equ	0xFD8
  3553                           
  3554 ;; *************** function _lcd_send_byte *****************
  3555 ;; Defined at:
  3556 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3557 ;; Parameters:    Size  Location     Type
  3558 ;;  address         1    wreg     unsigned char 
  3559 ;;  n               1    2[COMRAM] unsigned char 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  address         1    3[COMRAM] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;		None               void
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0, cstack
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3571 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3575 ;;Total ram usage:        2 bytes
  3576 ;; Hardware stack levels used:    1
  3577 ;; Hardware stack levels required when called:    1
  3578 ;; This function calls:
  3579 ;;		_Delay100TCYx
  3580 ;;		_lcd_send_nibble
  3581 ;; This function is called by:
  3582 ;;		_lcd_init
  3583 ;;		_lcd_gotoxy
  3584 ;;		_lcd_putc
  3585 ;;		_lcd_comand
  3586 ;;		_lcd_setcursor_vb
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text20
  3591  001DAA                     __ptext20:
  3592                           	opt stack 0
  3593  001DAA                     _lcd_send_byte:
  3594                           	opt stack 25
  3595                           
  3596                           ;incstack = 0
  3597                           ;lcd_send_byte@address stored from wreg
  3598  001DAA  6E04               	movwf	lcd_send_byte@address,c
  3599                           
  3600                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  3601  001DAC  968A               	bcf	3978,3,c	;volatile
  3602                           
  3603                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  3604  001DAE  0E02               	movlw	2
  3605  001DB0  EC39  F00F         	call	_Delay100TCYx
  3606                           
  3607                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  3608  001DB4  9893               	bcf	3987,4,c	;volatile
  3609                           
  3610                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  3611  001DB6  9A93               	bcf	3987,5,c	;volatile
  3612                           
  3613                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  3614  001DB8  9C93               	bcf	3987,6,c	;volatile
  3615                           
  3616                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  3617  001DBA  9E93               	bcf	3987,7,c	;volatile
  3618                           
  3619                           ;unmc_lcd_216.c: 101: if(address)
  3620  001DBC  5004               	movf	lcd_send_byte@address,w,c
  3621  001DBE  B4D8               	btfsc	status,2,c
  3622  001DC0  D002               	goto	l75
  3623                           
  3624                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  3625  001DC2  868A               	bsf	3978,3,c	;volatile
  3626  001DC4  D001               	goto	l76
  3627  001DC6                     l75:
  3628                           
  3629                           ;unmc_lcd_216.c: 103: else
  3630                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  3631  001DC6  968A               	bcf	3978,3,c	;volatile
  3632  001DC8                     l76:
  3633                           
  3634                           ;unmc_lcd_216.c: 106: __nop();
  3635  001DC8  F000               	nop	
  3636                           
  3637                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  3638  001DCA  3803               	swapf	lcd_send_byte@n,w,c
  3639  001DCC  0B0F               	andlw	15
  3640  001DCE  EC3B  F00D         	call	_lcd_send_nibble
  3641                           
  3642                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  3643  001DD2  5003               	movf	lcd_send_byte@n,w,c
  3644  001DD4  0B0F               	andlw	15
  3645  001DD6  EC3B  F00D         	call	_lcd_send_nibble
  3646  001DDA  0012               	return		;funcret
  3647  001DDC                     __end_of_lcd_send_byte:
  3648                           	opt stack 0
  3649                           tblptru	equ	0xFF8
  3650                           tblptrh	equ	0xFF7
  3651                           tblptrl	equ	0xFF6
  3652                           tablat	equ	0xFF5
  3653                           prodh	equ	0xFF4
  3654                           prodl	equ	0xFF3
  3655                           indf0	equ	0xFEF
  3656                           postinc0	equ	0xFEE
  3657                           fsr0h	equ	0xFEA
  3658                           fsr0l	equ	0xFE9
  3659                           wreg	equ	0xFE8
  3660                           postdec1	equ	0xFE5
  3661                           fsr1l	equ	0xFE1
  3662                           indf2	equ	0xFDF
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function _lcd_send_nibble *****************
  3670 ;; Defined at:
  3671 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  nibble          1    wreg     unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  nibble          1    1[COMRAM] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3689 ;;Total ram usage:        2 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_lcd_send_byte
  3695 ;;		_lcd_init
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text21
  3700  001A76                     __ptext21:
  3701                           	opt stack 0
  3702  001A76                     _lcd_send_nibble:
  3703                           	opt stack 25
  3704                           
  3705                           ;incstack = 0
  3706                           ;lcd_send_nibble@nibble stored from wreg
  3707  001A76  6E02               	movwf	lcd_send_nibble@nibble,c
  3708                           
  3709                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  3710  001A78  A002               	btfss	lcd_send_nibble@nibble,0,c
  3711  001A7A  D003               	goto	u1180
  3712  001A7C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3713  001A7E  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3714  001A80  D001               	goto	u1198
  3715  001A82                     u1180:
  3716  001A82  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3717  001A84                     u1198:
  3718  001A84  3A01               	swapf	??_lcd_send_nibble,f,c
  3719  001A86  508A               	movf	3978,w,c	;volatile
  3720  001A88  1801               	xorwf	??_lcd_send_nibble,w,c
  3721  001A8A  0BEF               	andlw	-17
  3722  001A8C  1801               	xorwf	??_lcd_send_nibble,w,c
  3723  001A8E  6E8A               	movwf	3978,c	;volatile
  3724                           
  3725                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  3726  001A90  A202               	btfss	lcd_send_nibble@nibble,1,c
  3727  001A92  D003               	goto	u1200
  3728  001A94  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3729  001A96  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3730  001A98  D001               	goto	u1218
  3731  001A9A                     u1200:
  3732  001A9A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3733  001A9C                     u1218:
  3734  001A9C  3A01               	swapf	??_lcd_send_nibble,f,c
  3735  001A9E  4601               	rlncf	??_lcd_send_nibble,f,c
  3736  001AA0  508A               	movf	3978,w,c	;volatile
  3737  001AA2  1801               	xorwf	??_lcd_send_nibble,w,c
  3738  001AA4  0BDF               	andlw	-33
  3739  001AA6  1801               	xorwf	??_lcd_send_nibble,w,c
  3740  001AA8  6E8A               	movwf	3978,c	;volatile
  3741                           
  3742                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  3743  001AAA  A402               	btfss	lcd_send_nibble@nibble,2,c
  3744  001AAC  D003               	goto	u1220
  3745  001AAE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3746  001AB0  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3747  001AB2  D001               	goto	u1238
  3748  001AB4                     u1220:
  3749  001AB4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3750  001AB6                     u1238:
  3751  001AB6  3A01               	swapf	??_lcd_send_nibble,f,c
  3752  001AB8  4601               	rlncf	??_lcd_send_nibble,f,c
  3753  001ABA  4601               	rlncf	??_lcd_send_nibble,f,c
  3754  001ABC  508A               	movf	3978,w,c	;volatile
  3755  001ABE  1801               	xorwf	??_lcd_send_nibble,w,c
  3756  001AC0  0BBF               	andlw	-65
  3757  001AC2  1801               	xorwf	??_lcd_send_nibble,w,c
  3758  001AC4  6E8A               	movwf	3978,c	;volatile
  3759                           
  3760                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  3761  001AC6  A602               	btfss	lcd_send_nibble@nibble,3,c
  3762  001AC8  D003               	goto	u1240
  3763  001ACA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3764  001ACC  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3765  001ACE  D001               	goto	u1258
  3766  001AD0                     u1240:
  3767  001AD0  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3768  001AD2                     u1258:
  3769  001AD2  3201               	rrcf	??_lcd_send_nibble,f,c
  3770  001AD4  3201               	rrcf	??_lcd_send_nibble,f,c
  3771  001AD6  508A               	movf	3978,w,c	;volatile
  3772  001AD8  1801               	xorwf	??_lcd_send_nibble,w,c
  3773  001ADA  0B7F               	andlw	-129
  3774  001ADC  1801               	xorwf	??_lcd_send_nibble,w,c
  3775  001ADE  6E8A               	movwf	3978,c	;volatile
  3776                           
  3777                           ;unmc_lcd_216.c: 32: __nop();
  3778  001AE0  F000               	nop	
  3779                           
  3780                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3781  001AE2  848A               	bsf	3978,2,c	;volatile
  3782                           
  3783                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3784  001AE4  F000               	nop	
  3785  001AE6  F000               	nop	
  3786                           
  3787                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3788  001AE8  948A               	bcf	3978,2,c	;volatile
  3789  001AEA  0012               	return		;funcret
  3790  001AEC                     __end_of_lcd_send_nibble:
  3791                           	opt stack 0
  3792                           tblptru	equ	0xFF8
  3793                           tblptrh	equ	0xFF7
  3794                           tblptrl	equ	0xFF6
  3795                           tablat	equ	0xFF5
  3796                           prodh	equ	0xFF4
  3797                           prodl	equ	0xFF3
  3798                           indf0	equ	0xFEF
  3799                           postinc0	equ	0xFEE
  3800                           fsr0h	equ	0xFEA
  3801                           fsr0l	equ	0xFE9
  3802                           wreg	equ	0xFE8
  3803                           postdec1	equ	0xFE5
  3804                           fsr1l	equ	0xFE1
  3805                           indf2	equ	0xFDF
  3806                           postinc2	equ	0xFDE
  3807                           postdec2	equ	0xFDD
  3808                           fsr2h	equ	0xFDA
  3809                           fsr2l	equ	0xFD9
  3810                           status	equ	0xFD8
  3811                           
  3812 ;; *************** function _Delay100TCYx *****************
  3813 ;; Defined at:
  3814 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\d100tcyx.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  unit            1    wreg     unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;  unit            1    0[COMRAM] unsigned char 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;		None               void
  3821 ;; Registers used:
  3822 ;;		wreg
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3832 ;;Total ram usage:        1 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_lcd_send_byte
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text22
  3842  001E72                     __ptext22:
  3843                           	opt stack 0
  3844  001E72                     _Delay100TCYx:
  3845                           	opt stack 25
  3846                           
  3847                           ;incstack = 0
  3848                           ;Delay100TCYx@unit stored from wreg
  3849  001E72  6E01               	movwf	Delay100TCYx@unit,c
  3850  001E74  0E21               	movlw	33
  3851  001E76                     u2397:
  3852  001E76  2EE8               	decfsz	wreg,f,c
  3853  001E78  D7FE               	goto	u2397
  3854  001E7A  F000               	nop	
  3855  001E7C  2E01               	decfsz	Delay100TCYx@unit,f,c
  3856  001E7E  D7FA               	goto	l2161
  3857  001E80  0012               	return	
  3858  001E82  0012               	return		;funcret
  3859  001E84                     __end_of_Delay100TCYx:
  3860                           	opt stack 0
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           prodh	equ	0xFF4
  3866                           prodl	equ	0xFF3
  3867                           indf0	equ	0xFEF
  3868                           postinc0	equ	0xFEE
  3869                           fsr0h	equ	0xFEA
  3870                           fsr0l	equ	0xFE9
  3871                           wreg	equ	0xFE8
  3872                           postdec1	equ	0xFE5
  3873                           fsr1l	equ	0xFE1
  3874                           indf2	equ	0xFDF
  3875                           postinc2	equ	0xFDE
  3876                           postdec2	equ	0xFDD
  3877                           fsr2h	equ	0xFDA
  3878                           fsr2l	equ	0xFD9
  3879                           status	equ	0xFD8
  3880                           
  3881 ;; *************** function _Write_RTC *****************
  3882 ;; Defined at:
  3883 ;;		line 22 in file "../../Program Files/Unimic/unmc_01/sources/unmc_rtcc_01.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2   26[None  ] int 
  3890 ;; Registers used:
  3891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3901 ;;Total ram usage:        0 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    2
  3904 ;; This function calls:
  3905 ;;		_RtccWrOn
  3906 ;;		_RtccWriteDate
  3907 ;;		_RtccWriteTime
  3908 ;;		___awdiv
  3909 ;; This function is called by:
  3910 ;;		_Setup
  3911 ;;		_setClock
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text23
  3916  0014CC                     __ptext23:
  3917                           	opt stack 0
  3918  0014CC                     _Write_RTC:
  3919                           	opt stack 27
  3920                           
  3921                           ;unmc_rtcc_01.c: 24: RtccWrOn();
  3922                           
  3923                           ;incstack = 0
  3924  0014CC  EC42  F00F         	call	_RtccWrOn	;wreg free
  3925                           
  3926                           ;unmc_rtcc_01.c: 26: PIE3bits.RTCCIE=1;
  3927  0014D0  80A3               	bsf	4003,0,c	;volatile
  3928                           
  3929                           ;unmc_rtcc_01.c: 27: segundo_d=segundo/10;
  3930  0014D2  C038  F001         	movff	_segundo,___awdiv@dividend
  3931  0014D6  C039  F002         	movff	_segundo+1,___awdiv@dividend+1
  3932  0014DA  0E00               	movlw	0
  3933  0014DC  6E04               	movwf	___awdiv@divisor+1,c
  3934  0014DE  0E0A               	movlw	10
  3935  0014E0  6E03               	movwf	___awdiv@divisor,c
  3936  0014E2  EC33  F00C         	call	___awdiv	;wreg free
  3937  0014E6  5001               	movf	?___awdiv,w,c
  3938  0014E8  6E4E               	movwf	_segundo_d,c
  3939                           
  3940                           ;unmc_rtcc_01.c: 28: segundo_u=segundo-segundo_d*10;
  3941  0014EA  504E               	movf	_segundo_d,w,c
  3942  0014EC  0D0A               	mullw	10
  3943  0014EE  50F3               	movf	prodl,w,c
  3944  0014F0  0800               	sublw	0
  3945  0014F2  2438               	addwf	_segundo,w,c
  3946  0014F4  6E4F               	movwf	_segundo_u,c
  3947                           
  3948                           ;unmc_rtcc_01.c: 29: RtccTime.f.sec =segundo_d*16+segundo_u;
  3949  0014F6  504E               	movf	_segundo_d,w,c
  3950  0014F8  0D10               	mullw	16
  3951  0014FA  50F3               	movf	prodl,w,c
  3952  0014FC  244F               	addwf	_segundo_u,w,c
  3953  0014FE  6E40               	movwf	_RtccTime+1,c
  3954                           
  3955                           ;unmc_rtcc_01.c: 30: minuto_d=minuto/10;
  3956  001500  C05A  F001         	movff	_minuto,___awdiv@dividend
  3957  001504  C05B  F002         	movff	_minuto+1,___awdiv@dividend+1
  3958  001508  0E00               	movlw	0
  3959  00150A  6E04               	movwf	___awdiv@divisor+1,c
  3960  00150C  0E0A               	movlw	10
  3961  00150E  6E03               	movwf	___awdiv@divisor,c
  3962  001510  EC33  F00C         	call	___awdiv	;wreg free
  3963  001514  5001               	movf	?___awdiv,w,c
  3964  001516  6E4C               	movwf	_minuto_d,c
  3965                           
  3966                           ;unmc_rtcc_01.c: 31: minuto_u=minuto-minuto_d*10;
  3967  001518  504C               	movf	_minuto_d,w,c
  3968  00151A  0D0A               	mullw	10
  3969  00151C  50F3               	movf	prodl,w,c
  3970  00151E  0800               	sublw	0
  3971  001520  245A               	addwf	_minuto,w,c
  3972  001522  6E4D               	movwf	_minuto_u,c
  3973                           
  3974                           ;unmc_rtcc_01.c: 32: RtccTime.f.min =minuto_d*16+minuto_u;
  3975  001524  504C               	movf	_minuto_d,w,c
  3976  001526  0D10               	mullw	16
  3977  001528  50F3               	movf	prodl,w,c
  3978  00152A  244D               	addwf	_minuto_u,w,c
  3979  00152C  6E41               	movwf	_RtccTime+2,c
  3980                           
  3981                           ;unmc_rtcc_01.c: 33: hora_d=hora/10;
  3982  00152E  C056  F001         	movff	_hora,___awdiv@dividend
  3983  001532  C057  F002         	movff	_hora+1,___awdiv@dividend+1
  3984  001536  0E00               	movlw	0
  3985  001538  6E04               	movwf	___awdiv@divisor+1,c
  3986  00153A  0E0A               	movlw	10
  3987  00153C  6E03               	movwf	___awdiv@divisor,c
  3988  00153E  EC33  F00C         	call	___awdiv	;wreg free
  3989  001542  5001               	movf	?___awdiv,w,c
  3990  001544  6E48               	movwf	_hora_d,c
  3991                           
  3992                           ;unmc_rtcc_01.c: 34: hora_u=hora-hora_d*10;
  3993  001546  5048               	movf	_hora_d,w,c
  3994  001548  0D0A               	mullw	10
  3995  00154A  50F3               	movf	prodl,w,c
  3996  00154C  0800               	sublw	0
  3997  00154E  2456               	addwf	_hora,w,c
  3998  001550  6E49               	movwf	_hora_u,c
  3999                           
  4000                           ;unmc_rtcc_01.c: 35: RtccTime.f.hour=hora_d*16+hora_u;
  4001  001552  5048               	movf	_hora_d,w,c
  4002  001554  0D10               	mullw	16
  4003  001556  50F3               	movf	prodl,w,c
  4004  001558  2449               	addwf	_hora_u,w,c
  4005  00155A  6E42               	movwf	_RtccTime+3,c
  4006                           
  4007                           ;unmc_rtcc_01.c: 36: anio_d=anio/10;
  4008  00155C  C050  F001         	movff	_anio,___awdiv@dividend
  4009  001560  C051  F002         	movff	_anio+1,___awdiv@dividend+1
  4010  001564  0E00               	movlw	0
  4011  001566  6E04               	movwf	___awdiv@divisor+1,c
  4012  001568  0E0A               	movlw	10
  4013  00156A  6E03               	movwf	___awdiv@divisor,c
  4014  00156C  EC33  F00C         	call	___awdiv	;wreg free
  4015  001570  5001               	movf	?___awdiv,w,c
  4016  001572  6E43               	movwf	_anio_d,c
  4017                           
  4018                           ;unmc_rtcc_01.c: 37: anio_u=anio-anio_d*10;
  4019  001574  5043               	movf	_anio_d,w,c
  4020  001576  0D0A               	mullw	10
  4021  001578  50F3               	movf	prodl,w,c
  4022  00157A  0800               	sublw	0
  4023  00157C  2450               	addwf	_anio,w,c
  4024  00157E  6E44               	movwf	_anio_u,c
  4025                           
  4026                           ;unmc_rtcc_01.c: 38: RtccDate.f.year=anio_d*16+anio_u;
  4027  001580  5043               	movf	_anio_d,w,c
  4028  001582  0D10               	mullw	16
  4029  001584  50F3               	movf	prodl,w,c
  4030  001586  2444               	addwf	_anio_u,w,c
  4031  001588  6E3E               	movwf	_RtccDate+3,c
  4032                           
  4033                           ;unmc_rtcc_01.c: 39: mes_d=mes/10;
  4034  00158A  C058  F001         	movff	_mes,___awdiv@dividend
  4035  00158E  C059  F002         	movff	_mes+1,___awdiv@dividend+1
  4036  001592  0E00               	movlw	0
  4037  001594  6E04               	movwf	___awdiv@divisor+1,c
  4038  001596  0E0A               	movlw	10
  4039  001598  6E03               	movwf	___awdiv@divisor,c
  4040  00159A  EC33  F00C         	call	___awdiv	;wreg free
  4041  00159E  5001               	movf	?___awdiv,w,c
  4042  0015A0  6E4A               	movwf	_mes_d,c
  4043                           
  4044                           ;unmc_rtcc_01.c: 40: mes_u=mes-mes_d*10;
  4045  0015A2  504A               	movf	_mes_d,w,c
  4046  0015A4  0D0A               	mullw	10
  4047  0015A6  50F3               	movf	prodl,w,c
  4048  0015A8  0800               	sublw	0
  4049  0015AA  2458               	addwf	_mes,w,c
  4050  0015AC  6E4B               	movwf	_mes_u,c
  4051                           
  4052                           ;unmc_rtcc_01.c: 41: RtccDate.f.mon=mes_d*16+mes_u;
  4053  0015AE  504A               	movf	_mes_d,w,c
  4054  0015B0  0D10               	mullw	16
  4055  0015B2  50F3               	movf	prodl,w,c
  4056  0015B4  244B               	addwf	_mes_u,w,c
  4057  0015B6  6E3D               	movwf	_RtccDate+2,c
  4058                           
  4059                           ;unmc_rtcc_01.c: 42: fecha_d=dia/10;
  4060  0015B8  C052  F001         	movff	_dia,___awdiv@dividend
  4061  0015BC  C053  F002         	movff	_dia+1,___awdiv@dividend+1
  4062  0015C0  0E00               	movlw	0
  4063  0015C2  6E04               	movwf	___awdiv@divisor+1,c
  4064  0015C4  0E0A               	movlw	10
  4065  0015C6  6E03               	movwf	___awdiv@divisor,c
  4066  0015C8  EC33  F00C         	call	___awdiv	;wreg free
  4067  0015CC  5001               	movf	?___awdiv,w,c
  4068  0015CE  6E46               	movwf	_fecha_d,c
  4069                           
  4070                           ;unmc_rtcc_01.c: 43: fecha_u=dia-fecha_d*10;
  4071  0015D0  5046               	movf	_fecha_d,w,c
  4072  0015D2  0D0A               	mullw	10
  4073  0015D4  50F3               	movf	prodl,w,c
  4074  0015D6  0800               	sublw	0
  4075  0015D8  2452               	addwf	_dia,w,c
  4076  0015DA  6E47               	movwf	_fecha_u,c
  4077                           
  4078                           ;unmc_rtcc_01.c: 44: RtccDate.f.mday=fecha_d*16+fecha_u;
  4079  0015DC  5046               	movf	_fecha_d,w,c
  4080  0015DE  0D10               	mullw	16
  4081  0015E0  50F3               	movf	prodl,w,c
  4082  0015E2  2447               	addwf	_fecha_u,w,c
  4083  0015E4  6E3C               	movwf	_RtccDate+1,c
  4084                           
  4085                           ;unmc_rtcc_01.c: 45: dia_semana=diasem;
  4086  0015E6  C054  F045         	movff	_diasem,_dia_semana
  4087                           
  4088                           ;unmc_rtcc_01.c: 46: RtccDate.f.wday =diasem;
  4089  0015EA  C054  F03B         	movff	_diasem,_RtccDate
  4090                           
  4091                           ;unmc_rtcc_01.c: 47: RtccWriteTime(&RtccTime,1);
  4092  0015EE  0E3F               	movlw	low _RtccTime
  4093  0015F0  6E01               	movwf	RtccWriteTime@pTm,c
  4094  0015F2  0E00               	movlw	high _RtccTime
  4095  0015F4  6E02               	movwf	RtccWriteTime@pTm+1,c
  4096  0015F6  0E01               	movlw	1
  4097  0015F8  6E03               	movwf	RtccWriteTime@di,c
  4098  0015FA  ECAD  F00B         	call	_RtccWriteTime	;wreg free
  4099                           
  4100                           ;unmc_rtcc_01.c: 48: RtccWriteDate(&RtccDate,1);
  4101  0015FE  0E3B               	movlw	low _RtccDate
  4102  001600  6E01               	movwf	RtccWriteDate@pDt,c
  4103  001602  0E00               	movlw	high _RtccDate
  4104  001604  6E02               	movwf	RtccWriteDate@pDt+1,c
  4105  001606  0E01               	movlw	1
  4106  001608  6E03               	movwf	RtccWriteDate@di,c
  4107  00160A  EC0A  F00B         	call	_RtccWriteDate	;wreg free
  4108                           
  4109                           ;unmc_rtcc_01.c: 49: (RTCCFGbits.RTCEN=1);
  4110  00160E  010F               	movlb	15	; () banked
  4111  001610  8F3F               	bsf	63,7,b	;volatile
  4112                           
  4113                           ; BSR set to: 15
  4114  001612  0012               	return		;funcret
  4115  001614                     __end_of_Write_RTC:
  4116                           	opt stack 0
  4117                           tblptru	equ	0xFF8
  4118                           tblptrh	equ	0xFF7
  4119                           tblptrl	equ	0xFF6
  4120                           tablat	equ	0xFF5
  4121                           prodh	equ	0xFF4
  4122                           prodl	equ	0xFF3
  4123                           indf0	equ	0xFEF
  4124                           postinc0	equ	0xFEE
  4125                           fsr0h	equ	0xFEA
  4126                           fsr0l	equ	0xFE9
  4127                           wreg	equ	0xFE8
  4128                           postdec1	equ	0xFE5
  4129                           fsr1l	equ	0xFE1
  4130                           indf2	equ	0xFDF
  4131                           postinc2	equ	0xFDE
  4132                           postdec2	equ	0xFDD
  4133                           fsr2h	equ	0xFDA
  4134                           fsr2l	equ	0xFD9
  4135                           status	equ	0xFD8
  4136                           
  4137 ;; *************** function ___awdiv *****************
  4138 ;; Defined at:
  4139 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  dividend        2    0[COMRAM] int 
  4142 ;;  divisor         2    2[COMRAM] int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  quotient        2    6[COMRAM] int 
  4145 ;;  sign            1    5[COMRAM] unsigned char 
  4146 ;;  counter         1    4[COMRAM] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2    0[COMRAM] int 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4157 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4159 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4160 ;;Total ram usage:        8 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_Write_RTC
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text24
  4170  001866                     __ptext24:
  4171                           	opt stack 0
  4172  001866                     ___awdiv:
  4173                           	opt stack 28
  4174                           
  4175                           ; BSR set to: 15
  4176                           ;incstack = 0
  4177  001866  0E00               	movlw	0
  4178  001868  6E06               	movwf	___awdiv@sign,c
  4179  00186A  AE04               	btfss	___awdiv@divisor+1,7,c
  4180  00186C  D007               	goto	l2599
  4181  00186E  6C03               	negf	___awdiv@divisor,c
  4182  001870  1E04               	comf	___awdiv@divisor+1,f,c
  4183  001872  B0D8               	btfsc	status,0,c
  4184  001874  2A04               	incf	___awdiv@divisor+1,f,c
  4185  001876  0E01               	movlw	1
  4186  001878  6E06               	movwf	___awdiv@sign,c
  4187  00187A  D000               	goto	l2599
  4188  00187C                     l2599:
  4189  00187C  AE02               	btfss	___awdiv@dividend+1,7,c
  4190  00187E  D007               	goto	l2605
  4191  001880  6C01               	negf	___awdiv@dividend,c
  4192  001882  1E02               	comf	___awdiv@dividend+1,f,c
  4193  001884  B0D8               	btfsc	status,0,c
  4194  001886  2A02               	incf	___awdiv@dividend+1,f,c
  4195  001888  0E01               	movlw	1
  4196  00188A  1A06               	xorwf	___awdiv@sign,f,c
  4197  00188C  D000               	goto	l2605
  4198  00188E                     l2605:
  4199  00188E  0E00               	movlw	0
  4200  001890  6E08               	movwf	___awdiv@quotient+1,c
  4201  001892  0E00               	movlw	0
  4202  001894  6E07               	movwf	___awdiv@quotient,c
  4203  001896  5003               	movf	___awdiv@divisor,w,c
  4204  001898  1004               	iorwf	___awdiv@divisor+1,w,c
  4205  00189A  B4D8               	btfsc	status,2,c
  4206  00189C  D021               	goto	l2627
  4207  00189E  0E01               	movlw	1
  4208  0018A0  6E05               	movwf	___awdiv@counter,c
  4209  0018A2  D005               	goto	l2613
  4210  0018A4                     l2611:
  4211  0018A4  90D8               	bcf	status,0,c
  4212  0018A6  3603               	rlcf	___awdiv@divisor,f,c
  4213  0018A8  3604               	rlcf	___awdiv@divisor+1,f,c
  4214  0018AA  2A05               	incf	___awdiv@counter,f,c
  4215  0018AC  D000               	goto	l2613
  4216  0018AE                     l2613:
  4217  0018AE  BE04               	btfsc	___awdiv@divisor+1,7,c
  4218  0018B0  D002               	goto	l2615
  4219  0018B2  D7F8               	goto	l2611
  4220  0018B4  D000               	goto	l2615
  4221  0018B6                     l2615:
  4222  0018B6  90D8               	bcf	status,0,c
  4223  0018B8  3607               	rlcf	___awdiv@quotient,f,c
  4224  0018BA  3608               	rlcf	___awdiv@quotient+1,f,c
  4225  0018BC  5003               	movf	___awdiv@divisor,w,c
  4226  0018BE  5C01               	subwf	___awdiv@dividend,w,c
  4227  0018C0  5004               	movf	___awdiv@divisor+1,w,c
  4228  0018C2  5802               	subwfb	___awdiv@dividend+1,w,c
  4229  0018C4  A0D8               	btfss	status,0,c
  4230  0018C6  D006               	goto	l2623
  4231  0018C8  5003               	movf	___awdiv@divisor,w,c
  4232  0018CA  5E01               	subwf	___awdiv@dividend,f,c
  4233  0018CC  5004               	movf	___awdiv@divisor+1,w,c
  4234  0018CE  5A02               	subwfb	___awdiv@dividend+1,f,c
  4235  0018D0  8007               	bsf	___awdiv@quotient,0,c
  4236  0018D2  D000               	goto	l2623
  4237  0018D4                     l2623:
  4238  0018D4  90D8               	bcf	status,0,c
  4239  0018D6  3204               	rrcf	___awdiv@divisor+1,f,c
  4240  0018D8  3203               	rrcf	___awdiv@divisor,f,c
  4241  0018DA  2E05               	decfsz	___awdiv@counter,f,c
  4242  0018DC  D7EC               	goto	l2615
  4243  0018DE  D000               	goto	l2627
  4244  0018E0                     l2627:
  4245  0018E0  5006               	movf	___awdiv@sign,w,c
  4246  0018E2  B4D8               	btfsc	status,2,c
  4247  0018E4  D005               	goto	l2631
  4248  0018E6  6C07               	negf	___awdiv@quotient,c
  4249  0018E8  1E08               	comf	___awdiv@quotient+1,f,c
  4250  0018EA  B0D8               	btfsc	status,0,c
  4251  0018EC  2A08               	incf	___awdiv@quotient+1,f,c
  4252  0018EE  D000               	goto	l2631
  4253  0018F0                     l2631:
  4254  0018F0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4255  0018F4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4256  0018F8  0012               	return	
  4257  0018FA  0012               	return		;funcret
  4258  0018FC                     __end_of___awdiv:
  4259                           	opt stack 0
  4260                           tblptru	equ	0xFF8
  4261                           tblptrh	equ	0xFF7
  4262                           tblptrl	equ	0xFF6
  4263                           tablat	equ	0xFF5
  4264                           prodh	equ	0xFF4
  4265                           prodl	equ	0xFF3
  4266                           indf0	equ	0xFEF
  4267                           postinc0	equ	0xFEE
  4268                           fsr0h	equ	0xFEA
  4269                           fsr0l	equ	0xFE9
  4270                           wreg	equ	0xFE8
  4271                           postdec1	equ	0xFE5
  4272                           fsr1l	equ	0xFE1
  4273                           indf2	equ	0xFDF
  4274                           postinc2	equ	0xFDE
  4275                           postdec2	equ	0xFDD
  4276                           fsr2h	equ	0xFDA
  4277                           fsr2l	equ	0xFD9
  4278                           status	equ	0xFD8
  4279                           
  4280 ;; *************** function _RtccWriteTime *****************
  4281 ;; Defined at:
  4282 ;;		line 34 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteTime.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  pTm             2    0[COMRAM] PTR const struct .
  4285 ;;		 -> RtccTime(4), 
  4286 ;;  di              1    2[COMRAM] enum E7121
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  tempHourWDay    2    9[COMRAM] struct .
  4289 ;;  tempMinSec      2    7[COMRAM] struct .
  4290 ;;  wasWrEn         1    6[COMRAM] enum E7121
  4291 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4292 ;;  wasOn           1    4[COMRAM] enum E7121
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      enum E7121
  4295 ;; Registers used:
  4296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4302 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4303 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4305 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4306 ;;Total ram usage:       11 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    1
  4309 ;; This function calls:
  4310 ;;		_RtccWrOn
  4311 ;; This function is called by:
  4312 ;;		_Write_RTC
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text25
  4317  00175A                     __ptext25:
  4318                           	opt stack 0
  4319  00175A                     _RtccWriteTime:
  4320                           	opt stack 27
  4321                           
  4322                           ;incstack = 0
  4323  00175A  0E00               	movlw	0
  4324  00175C  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4325  00175E  EE20 F002          	lfsr	2,2
  4326  001762  5001               	movf	RtccWriteTime@pTm,w,c
  4327  001764  26D9               	addwf	fsr2l,f,c
  4328  001766  5002               	movf	RtccWriteTime@pTm+1,w,c
  4329  001768  22DA               	addwfc	fsr2h,f,c
  4330  00176A  0E5A               	movlw	90
  4331  00176C  60DF               	cpfslt	indf2,c
  4332  00176E  0012               	return	
  4333  001770  EE20 F001          	lfsr	2,1
  4334  001774  5001               	movf	RtccWriteTime@pTm,w,c
  4335  001776  26D9               	addwf	fsr2l,f,c
  4336  001778  5002               	movf	RtccWriteTime@pTm+1,w,c
  4337  00177A  22DA               	addwfc	fsr2h,f,c
  4338  00177C  0E5A               	movlw	90
  4339  00177E  60DF               	cpfslt	indf2,c
  4340  001780  0012               	return	
  4341  001782  EE20 F003          	lfsr	2,3
  4342  001786  5001               	movf	RtccWriteTime@pTm,w,c
  4343  001788  26D9               	addwf	fsr2l,f,c
  4344  00178A  5002               	movf	RtccWriteTime@pTm+1,w,c
  4345  00178C  22DA               	addwfc	fsr2h,f,c
  4346  00178E  0E24               	movlw	36
  4347  001790  64DF               	cpfsgt	indf2,c
  4348  001792  D002               	goto	l2463
  4349  001794  0012               	return	
  4350                           
  4351                           ;	Return value of _RtccWriteTime is never used
  4352  001796  0012               	return	
  4353  001798                     l2463:
  4354  001798  EE20 F002          	lfsr	2,2
  4355  00179C  5001               	movf	RtccWriteTime@pTm,w,c
  4356  00179E  26D9               	addwf	fsr2l,f,c
  4357  0017A0  5002               	movf	RtccWriteTime@pTm+1,w,c
  4358  0017A2  22DA               	addwfc	fsr2h,f,c
  4359  0017A4  50DF               	movf	indf2,w,c
  4360  0017A6  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  4361  0017A8  EE20 F001          	lfsr	2,1
  4362  0017AC  5001               	movf	RtccWriteTime@pTm,w,c
  4363  0017AE  26D9               	addwf	fsr2l,f,c
  4364  0017B0  5002               	movf	RtccWriteTime@pTm+1,w,c
  4365  0017B2  22DA               	addwfc	fsr2h,f,c
  4366  0017B4  50DF               	movf	indf2,w,c
  4367  0017B6  6E08               	movwf	RtccWriteTime@tempMinSec,c
  4368  0017B8  5003               	movf	RtccWriteTime@di,w,c
  4369  0017BA  B4D8               	btfsc	status,2,c
  4370  0017BC  D002               	goto	l2469
  4371  0017BE  9CF2               	bcf	intcon,6,c	;volatile
  4372  0017C0  D000               	goto	l2469
  4373  0017C2                     l2469:
  4374  0017C2  0E00               	movlw	0
  4375  0017C4  BB3F               	btfsc	63,5,b	;volatile
  4376  0017C6  0E01               	movlw	1
  4377  0017C8  6E07               	movwf	RtccWriteTime@wasWrEn,c
  4378  0017CA  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4379  0017CC  A4D8               	btfss	status,2,c
  4380  0017CE  D003               	goto	l2473
  4381  0017D0  EC42  F00F         	call	_RtccWrOn	;wreg free
  4382  0017D4  D000               	goto	l2473
  4383  0017D6                     l2473:
  4384  0017D6  0E00               	movlw	0
  4385  0017D8  BF3F               	btfsc	63,7,b	;volatile
  4386  0017DA  0E01               	movlw	1
  4387  0017DC  6E05               	movwf	RtccWriteTime@wasOn,c
  4388  0017DE  5005               	movf	RtccWriteTime@wasOn,w,c
  4389  0017E0  B4D8               	btfsc	status,2,c
  4390  0017E2  D007               	goto	l2479
  4391  0017E4  0E00               	movlw	0
  4392  0017E6  BE91               	btfsc	3985,7,c	;volatile
  4393  0017E8  0E01               	movlw	1
  4394  0017EA  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4395  0017EC  010F               	movlb	15	; () banked
  4396  0017EE  9F3F               	bcf	63,7,b	;volatile
  4397  0017F0  D000               	goto	l2479
  4398  0017F2                     l2479:
  4399  0017F2  0EFC               	movlw	252
  4400  0017F4  010F               	movlb	15	; () banked
  4401  0017F6  173F               	andwf	63,f,b	;volatile
  4402  0017F8  010F               	movlb	15	; () banked
  4403  0017FA  813F               	bsf	63,0,b	;volatile
  4404                           
  4405                           ; BSR set to: 15
  4406  0017FC  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  4407                           
  4408                           ; BSR set to: 15
  4409  001800  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  4410                           
  4411                           ; BSR set to: 15
  4412  001804  EE20 F003          	lfsr	2,3
  4413  001808  5001               	movf	RtccWriteTime@pTm,w,c
  4414  00180A  26D9               	addwf	fsr2l,f,c
  4415  00180C  5002               	movf	RtccWriteTime@pTm+1,w,c
  4416  00180E  22DA               	addwfc	fsr2h,f,c
  4417  001810  50DF               	movf	indf2,w,c
  4418  001812  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  4419                           
  4420                           ; BSR set to: 15
  4421  001814  0EFC               	movlw	252
  4422  001816  010F               	movlb	15	; () banked
  4423  001818  173F               	andwf	63,f,b	;volatile
  4424                           
  4425                           ; BSR set to: 15
  4426  00181A  010F               	movlb	15	; () banked
  4427  00181C  813F               	bsf	63,0,b	;volatile
  4428                           
  4429                           ; BSR set to: 15
  4430  00181E  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  4431                           
  4432                           ; BSR set to: 15
  4433  001822  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  4434                           
  4435                           ; BSR set to: 15
  4436  001826  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  4437                           
  4438                           ; BSR set to: 15
  4439  00182A  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  4440                           
  4441                           ; BSR set to: 15
  4442  00182E  5005               	movf	RtccWriteTime@wasOn,w,c
  4443  001830  B4D8               	btfsc	status,2,c
  4444  001832  D00D               	goto	l2511
  4445                           
  4446                           ; BSR set to: 15
  4447  001834  010F               	movlb	15	; () banked
  4448  001836  8F3F               	bsf	63,7,b	;volatile
  4449                           
  4450                           ; BSR set to: 15
  4451  001838  5006               	movf	RtccWriteTime@wasAlrm,w,c
  4452  00183A  B4D8               	btfsc	status,2,c
  4453  00183C  D002               	goto	l2507
  4454                           
  4455                           ; BSR set to: 15
  4456  00183E  8E91               	bsf	3985,7,c	;volatile
  4457  001840  D000               	goto	l2507
  4458  001842                     l2507:
  4459                           
  4460                           ; BSR set to: 15
  4461  001842  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4462  001844  B4D8               	btfsc	status,2,c
  4463  001846  D009               	goto	l2515
  4464                           
  4465                           ; BSR set to: 15
  4466  001848  EC42  F00F         	call	_RtccWrOn	;wreg free
  4467  00184C  D006               	goto	l2515
  4468  00184E                     l2511:
  4469  00184E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4470  001850  A4D8               	btfss	status,2,c
  4471  001852  D003               	goto	l2515
  4472  001854  010F               	movlb	15	; () banked
  4473  001856  9B3F               	bcf	63,5,b	;volatile
  4474                           
  4475                           ; BSR set to: 15
  4476  001858  D000               	goto	l2515
  4477  00185A                     l2515:
  4478  00185A  5003               	movf	RtccWriteTime@di,w,c
  4479  00185C  B4D8               	btfsc	status,2,c
  4480  00185E  0012               	return	
  4481  001860  8CF2               	bsf	intcon,6,c	;volatile
  4482  001862  0012               	return	
  4483                           
  4484                           ;	Return value of _RtccWriteTime is never used
  4485  001864  0012               	return		;funcret
  4486  001866                     __end_of_RtccWriteTime:
  4487                           	opt stack 0
  4488                           tblptru	equ	0xFF8
  4489                           tblptrh	equ	0xFF7
  4490                           tblptrl	equ	0xFF6
  4491                           tablat	equ	0xFF5
  4492                           prodh	equ	0xFF4
  4493                           prodl	equ	0xFF3
  4494                           intcon	equ	0xFF2
  4495                           indf0	equ	0xFEF
  4496                           postinc0	equ	0xFEE
  4497                           fsr0h	equ	0xFEA
  4498                           fsr0l	equ	0xFE9
  4499                           wreg	equ	0xFE8
  4500                           postdec1	equ	0xFE5
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           postinc2	equ	0xFDE
  4504                           postdec2	equ	0xFDD
  4505                           fsr2h	equ	0xFDA
  4506                           fsr2l	equ	0xFD9
  4507                           status	equ	0xFD8
  4508                           
  4509 ;; *************** function _RtccWriteDate *****************
  4510 ;; Defined at:
  4511 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWriteDate.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  pDt             2    0[COMRAM] PTR const struct .
  4514 ;;		 -> RtccDate(4), 
  4515 ;;  di              1    2[COMRAM] enum E7121
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  tempHourWDay    2   11[COMRAM] struct .
  4518 ;;  tempDayMonth    2    9[COMRAM] struct .
  4519 ;;  tempYear        2    6[COMRAM] struct .
  4520 ;;  wasWrEn         1    8[COMRAM] enum E7121
  4521 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4522 ;;  wasOn           1    4[COMRAM] enum E7121
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      enum E7121
  4525 ;; Registers used:
  4526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4532 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4533 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4535 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4536 ;;Total ram usage:       13 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    1
  4539 ;; This function calls:
  4540 ;;		_RtccWrOn
  4541 ;; This function is called by:
  4542 ;;		_Write_RTC
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text26
  4547  001614                     __ptext26:
  4548                           	opt stack 0
  4549  001614                     _RtccWriteDate:
  4550                           	opt stack 27
  4551                           
  4552                           ;incstack = 0
  4553  001614  0E00               	movlw	0
  4554  001616  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4555  001618  EE20 F002          	lfsr	2,2
  4556  00161C  5001               	movf	RtccWriteDate@pDt,w,c
  4557  00161E  26D9               	addwf	fsr2l,f,c
  4558  001620  5002               	movf	RtccWriteDate@pDt+1,w,c
  4559  001622  22DA               	addwfc	fsr2h,f,c
  4560  001624  0E13               	movlw	19
  4561  001626  60DF               	cpfslt	indf2,c
  4562  001628  0012               	return	
  4563  00162A  EE20 F002          	lfsr	2,2
  4564  00162E  5001               	movf	RtccWriteDate@pDt,w,c
  4565  001630  26D9               	addwf	fsr2l,f,c
  4566  001632  5002               	movf	RtccWriteDate@pDt+1,w,c
  4567  001634  22DA               	addwfc	fsr2h,f,c
  4568  001636  50DF               	movf	indf2,w,c
  4569  001638  B4D8               	btfsc	status,2,c
  4570  00163A  0012               	return	
  4571  00163C  EE20 F001          	lfsr	2,1
  4572  001640  5001               	movf	RtccWriteDate@pDt,w,c
  4573  001642  26D9               	addwf	fsr2l,f,c
  4574  001644  5002               	movf	RtccWriteDate@pDt+1,w,c
  4575  001646  22DA               	addwfc	fsr2h,f,c
  4576  001648  0E32               	movlw	50
  4577  00164A  60DF               	cpfslt	indf2,c
  4578  00164C  0012               	return	
  4579  00164E  EE20 F001          	lfsr	2,1
  4580  001652  5001               	movf	RtccWriteDate@pDt,w,c
  4581  001654  26D9               	addwf	fsr2l,f,c
  4582  001656  5002               	movf	RtccWriteDate@pDt+1,w,c
  4583  001658  22DA               	addwfc	fsr2h,f,c
  4584  00165A  50DF               	movf	indf2,w,c
  4585  00165C  B4D8               	btfsc	status,2,c
  4586  00165E  0012               	return	
  4587  001660  EE20 F003          	lfsr	2,3
  4588  001664  5001               	movf	RtccWriteDate@pDt,w,c
  4589  001666  26D9               	addwf	fsr2l,f,c
  4590  001668  5002               	movf	RtccWriteDate@pDt+1,w,c
  4591  00166A  22DA               	addwfc	fsr2h,f,c
  4592  00166C  0E99               	movlw	153
  4593  00166E  64DF               	cpfsgt	indf2,c
  4594  001670  D002               	goto	l2531
  4595  001672  0012               	return	
  4596                           
  4597                           ;	Return value of _RtccWriteDate is never used
  4598  001674  0012               	return	
  4599  001676                     l2531:
  4600  001676  EE20 F003          	lfsr	2,3
  4601  00167A  5001               	movf	RtccWriteDate@pDt,w,c
  4602  00167C  26D9               	addwf	fsr2l,f,c
  4603  00167E  5002               	movf	RtccWriteDate@pDt+1,w,c
  4604  001680  22DA               	addwfc	fsr2h,f,c
  4605  001682  50DF               	movf	indf2,w,c
  4606  001684  6E07               	movwf	RtccWriteDate@tempYear,c
  4607  001686  EE20 F001          	lfsr	2,1
  4608  00168A  5001               	movf	RtccWriteDate@pDt,w,c
  4609  00168C  26D9               	addwf	fsr2l,f,c
  4610  00168E  5002               	movf	RtccWriteDate@pDt+1,w,c
  4611  001690  22DA               	addwfc	fsr2h,f,c
  4612  001692  50DF               	movf	indf2,w,c
  4613  001694  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  4614  001696  EE20 F002          	lfsr	2,2
  4615  00169A  5001               	movf	RtccWriteDate@pDt,w,c
  4616  00169C  26D9               	addwf	fsr2l,f,c
  4617  00169E  5002               	movf	RtccWriteDate@pDt+1,w,c
  4618  0016A0  22DA               	addwfc	fsr2h,f,c
  4619  0016A2  50DF               	movf	indf2,w,c
  4620  0016A4  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  4621  0016A6  5003               	movf	RtccWriteDate@di,w,c
  4622  0016A8  B4D8               	btfsc	status,2,c
  4623  0016AA  D002               	goto	l2537
  4624  0016AC  9CF2               	bcf	intcon,6,c	;volatile
  4625  0016AE  D000               	goto	l2537
  4626  0016B0                     l2537:
  4627  0016B0  0E00               	movlw	0
  4628  0016B2  BB3F               	btfsc	63,5,b	;volatile
  4629  0016B4  0E01               	movlw	1
  4630  0016B6  6E09               	movwf	RtccWriteDate@wasWrEn,c
  4631  0016B8  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4632  0016BA  A4D8               	btfss	status,2,c
  4633  0016BC  D003               	goto	l2541
  4634  0016BE  EC42  F00F         	call	_RtccWrOn	;wreg free
  4635  0016C2  D000               	goto	l2541
  4636  0016C4                     l2541:
  4637  0016C4  0E00               	movlw	0
  4638  0016C6  BF3F               	btfsc	63,7,b	;volatile
  4639  0016C8  0E01               	movlw	1
  4640  0016CA  6E05               	movwf	RtccWriteDate@wasOn,c
  4641  0016CC  5005               	movf	RtccWriteDate@wasOn,w,c
  4642  0016CE  B4D8               	btfsc	status,2,c
  4643  0016D0  D007               	goto	l2547
  4644  0016D2  0E00               	movlw	0
  4645  0016D4  BE91               	btfsc	3985,7,c	;volatile
  4646  0016D6  0E01               	movlw	1
  4647  0016D8  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4648  0016DA  010F               	movlb	15	; () banked
  4649  0016DC  9F3F               	bcf	63,7,b	;volatile
  4650  0016DE  D000               	goto	l2547
  4651  0016E0                     l2547:
  4652  0016E0  0EFC               	movlw	252
  4653  0016E2  010F               	movlb	15	; () banked
  4654  0016E4  173F               	andwf	63,f,b	;volatile
  4655  0016E6  010F               	movlb	15	; () banked
  4656  0016E8  813F               	bsf	63,0,b	;volatile
  4657                           
  4658                           ; BSR set to: 15
  4659  0016EA  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  4660                           
  4661                           ; BSR set to: 15
  4662  0016EE  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  4663                           
  4664                           ; BSR set to: 15
  4665  0016F2  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  4666  0016F6  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  4667  0016FA  50DF               	movf	indf2,w,c
  4668  0016FC  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  4669                           
  4670                           ; BSR set to: 15
  4671  0016FE  0EFC               	movlw	252
  4672  001700  010F               	movlb	15	; () banked
  4673  001702  173F               	andwf	63,f,b	;volatile
  4674                           
  4675                           ; BSR set to: 15
  4676  001704  0E03               	movlw	3
  4677  001706  010F               	movlb	15	; () banked
  4678  001708  133F               	iorwf	63,f,b	;volatile
  4679                           
  4680                           ; BSR set to: 15
  4681  00170A  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  4682                           
  4683                           ; BSR set to: 15
  4684  00170E  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  4685                           
  4686                           ; BSR set to: 15
  4687  001712  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  4688                           
  4689                           ; BSR set to: 15
  4690  001716  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  4691                           
  4692                           ; BSR set to: 15
  4693  00171A  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  4694                           
  4695                           ; BSR set to: 15
  4696  00171E  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  4697                           
  4698                           ; BSR set to: 15
  4699  001722  5005               	movf	RtccWriteDate@wasOn,w,c
  4700  001724  B4D8               	btfsc	status,2,c
  4701  001726  D00D               	goto	l2583
  4702                           
  4703                           ; BSR set to: 15
  4704  001728  010F               	movlb	15	; () banked
  4705  00172A  8F3F               	bsf	63,7,b	;volatile
  4706                           
  4707                           ; BSR set to: 15
  4708  00172C  5006               	movf	RtccWriteDate@wasAlrm,w,c
  4709  00172E  B4D8               	btfsc	status,2,c
  4710  001730  D002               	goto	l2579
  4711                           
  4712                           ; BSR set to: 15
  4713  001732  8E91               	bsf	3985,7,c	;volatile
  4714  001734  D000               	goto	l2579
  4715  001736                     l2579:
  4716                           
  4717                           ; BSR set to: 15
  4718  001736  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4719  001738  B4D8               	btfsc	status,2,c
  4720  00173A  D009               	goto	l2587
  4721                           
  4722                           ; BSR set to: 15
  4723  00173C  EC42  F00F         	call	_RtccWrOn	;wreg free
  4724  001740  D006               	goto	l2587
  4725  001742                     l2583:
  4726  001742  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4727  001744  A4D8               	btfss	status,2,c
  4728  001746  D003               	goto	l2587
  4729  001748  010F               	movlb	15	; () banked
  4730  00174A  9B3F               	bcf	63,5,b	;volatile
  4731                           
  4732                           ; BSR set to: 15
  4733  00174C  D000               	goto	l2587
  4734  00174E                     l2587:
  4735  00174E  5003               	movf	RtccWriteDate@di,w,c
  4736  001750  B4D8               	btfsc	status,2,c
  4737  001752  0012               	return	
  4738  001754  9CF2               	bcf	intcon,6,c	;volatile
  4739  001756  0012               	return	
  4740                           
  4741                           ;	Return value of _RtccWriteDate is never used
  4742  001758  0012               	return		;funcret
  4743  00175A                     __end_of_RtccWriteDate:
  4744                           	opt stack 0
  4745                           tblptru	equ	0xFF8
  4746                           tblptrh	equ	0xFF7
  4747                           tblptrl	equ	0xFF6
  4748                           tablat	equ	0xFF5
  4749                           prodh	equ	0xFF4
  4750                           prodl	equ	0xFF3
  4751                           intcon	equ	0xFF2
  4752                           indf0	equ	0xFEF
  4753                           postinc0	equ	0xFEE
  4754                           fsr0h	equ	0xFEA
  4755                           fsr0l	equ	0xFE9
  4756                           wreg	equ	0xFE8
  4757                           postdec1	equ	0xFE5
  4758                           fsr1l	equ	0xFE1
  4759                           indf2	equ	0xFDF
  4760                           postinc2	equ	0xFDE
  4761                           postdec2	equ	0xFDD
  4762                           fsr2h	equ	0xFDA
  4763                           fsr2l	equ	0xFD9
  4764                           status	equ	0xFD8
  4765                           
  4766 ;; *************** function _RtccWrOn *****************
  4767 ;; Defined at:
  4768 ;;		line 21 in file "C:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\rtcc\RtccWrOn.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;		None
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  data            2    0        unsigned int 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;		None               void
  4775 ;; Registers used:
  4776 ;;		wreg, status,2
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4786 ;;Total ram usage:        0 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_Write_RTC
  4792 ;;		_RtccWriteDate
  4793 ;;		_RtccWriteTime
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text27
  4798  001E84                     __ptext27:
  4799                           	opt stack 0
  4800  001E84                     _RtccWrOn:
  4801                           	opt stack 27
  4802                           
  4803                           ;incstack = 0
  4804  001E84  9CF2               	bcf	intcon,6,c	;volatile
  4805  001E86  0E55               	movlw	85
  4806  001E88  6EA7               	movwf	4007,c	;volatile
  4807  001E8A  0EAA               	movlw	170
  4808  001E8C  6EA7               	movwf	4007,c	;volatile
  4809  001E8E  010F               	movlb	15	; () banked
  4810  001E90  8B3F               	bsf	63,5,b	;volatile
  4811                           
  4812                           ; BSR set to: 15
  4813  001E92  8CF2               	bsf	intcon,6,c	;volatile
  4814                           
  4815                           ; BSR set to: 15
  4816  001E94  0012               	return		;funcret
  4817  001E96                     __end_of_RtccWrOn:
  4818                           	opt stack 0
  4819                           tblptru	equ	0xFF8
  4820                           tblptrh	equ	0xFF7
  4821                           tblptrl	equ	0xFF6
  4822                           tablat	equ	0xFF5
  4823                           prodh	equ	0xFF4
  4824                           prodl	equ	0xFF3
  4825                           intcon	equ	0xFF2
  4826                           indf0	equ	0xFEF
  4827                           postinc0	equ	0xFEE
  4828                           fsr0h	equ	0xFEA
  4829                           fsr0l	equ	0xFE9
  4830                           wreg	equ	0xFE8
  4831                           postdec1	equ	0xFE5
  4832                           fsr1l	equ	0xFE1
  4833                           indf2	equ	0xFDF
  4834                           postinc2	equ	0xFDE
  4835                           postdec2	equ	0xFDD
  4836                           fsr2h	equ	0xFDA
  4837                           fsr2l	equ	0xFD9
  4838                           status	equ	0xFD8
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           prodh	equ	0xFF4
  4844                           prodl	equ	0xFF3
  4845                           intcon	equ	0xFF2
  4846                           indf0	equ	0xFEF
  4847                           postinc0	equ	0xFEE
  4848                           fsr0h	equ	0xFEA
  4849                           fsr0l	equ	0xFE9
  4850                           wreg	equ	0xFE8
  4851                           postdec1	equ	0xFE5
  4852                           fsr1l	equ	0xFE1
  4853                           indf2	equ	0xFDF
  4854                           postinc2	equ	0xFDE
  4855                           postdec2	equ	0xFDD
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860                           	psect	rparam
  4861  0000                     tblptru	equ	0xFF8
  4862                           tblptrh	equ	0xFF7
  4863                           tblptrl	equ	0xFF6
  4864                           tablat	equ	0xFF5
  4865                           prodh	equ	0xFF4
  4866                           prodl	equ	0xFF3
  4867                           intcon	equ	0xFF2
  4868                           indf0	equ	0xFEF
  4869                           postinc0	equ	0xFEE
  4870                           fsr0h	equ	0xFEA
  4871                           fsr0l	equ	0xFE9
  4872                           wreg	equ	0xFE8
  4873                           postdec1	equ	0xFE5
  4874                           fsr1l	equ	0xFE1
  4875                           indf2	equ	0xFDF
  4876                           postinc2	equ	0xFDE
  4877                           postdec2	equ	0xFDD
  4878                           fsr2h	equ	0xFDA
  4879                           fsr2l	equ	0xFD9
  4880                           status	equ	0xFD8


Data Sizes:
    Strings     122
    Constant    14
    Data        13
    BSS         71
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      93
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_21(CODE[10]), STR_20(CODE[15]), STR_17(CODE[5]), STR_14(CODE[5]), 
		 -> STR_13(CODE[5]), STR_12(CODE[5]), STR_10(CODE[5]), STR_9(CODE[5]), 
		 -> STR_8(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_26(CODE[8]), STR_25(CODE[4]), STR_24(CODE[3]), STR_23(CODE[11]), 
		 -> STR_22(CODE[11]), STR_19(CODE[2]), STR_18(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_11(CODE[2]), STR_7(CODE[2]), buffer2(BANK0[20]), 
		 -> STR_3(CODE[10]), STR_2(CODE[13]), STR_1(CODE[33]), 


Critical Paths under _main in COMRAM

    _set_vision->_twinkle
    _write_Date->_sprintf
    _twinkle->_read_keyboard
    _read_keyboard->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _clear->_lcd_comand
    _caratula->_lcd_comand
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   41689
                                             37 COMRAM     2     2      0
                              _Setup
                           _caratula
                         _lcd_gotoxy
                          _lcd_putrs
                      _read_keyboard
                         _set_vision
 ---------------------------------------------------------------------------------
 (1) _set_vision                                           0     0      0   25498
                              _clear
                         _lcd_gotoxy
                          _lcd_putrs
                            _twinkle
                         _write_Date
 ---------------------------------------------------------------------------------
 (2) _write_Date                                           0     0      0    8111
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _twinkle                                              1     1      0   11826
                                             36 COMRAM     1     1      0
                           __delay_s
                         _lcd_gotoxy
                          _lcd_putrs
                      _read_keyboard
 ---------------------------------------------------------------------------------
 (3) _read_keyboard                                        1     1      0    6842
                                             35 COMRAM     1     1      0
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             32    22     10    3196
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    3646
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    1937
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    1269
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) __delay_s                                             6     6      0      45
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _clear                                                1     1      0     646
                                              5 COMRAM     1     1      0
                         _lcd_comand
 ---------------------------------------------------------------------------------
 (1) _caratula                                             0     0      0     646
                         _lcd_comand
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3764
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     841
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (6) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _caratula
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_putrs
     _lcd_putc
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _read_keyboard
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _set_vision
     _clear
       _lcd_comand
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _twinkle
       __delay_s
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _read_keyboard
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _write_Date
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     27      5D       1       97.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      89       6        0.0%
DATA                 0      0      89       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Sep 04 16:24:42 2016

                        _a 002C                          _b 002E                          _c 0030  
                        _i 0032                          _j 0034                          _k 0036  
              _state_alarm 005C                         l75 1DC6                         l76 1DC8  
           ?_lcd_send_byte 0003               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
              lcd_comand@d 0005               __CFG_CP0$OFF 000000                        l201 0FC6  
                      l210 102A                        l202 0FC2                        l221 10B8  
                      l213 1048                        l205 0FFA                        l230 1102  
                      l222 10B4                        l214 1044                        l206 0FF6  
                      l241 11AA                        l233 1142                        l225 10EC  
                      l217 1084                        l209 102E                        l250 11E2  
                      l242 11A6                        l234 113E                        l226 10E8  
                      l218 1080                        l253 121A                        l245 11C4  
                      l237 1176                        l229 1106                        l262 124A  
                      l254 1216                        l246 11C0                        l238 1172  
                      l257 1234                        l249 11E6                        l258 1230  
                      l622 143A                        _dia 0052                        _key 003A  
                      _mes 0058                        wreg 000FE8                lcd_gotoxy@x 0006  
              lcd_gotoxy@y 0005                       l2201 1C64                       l2205 1C70  
                     l2231 1B02                       l2215 1E40                       l2311 1380  
                     l2303 1342                       l2161 1E74                       l2233 1B0C  
                     l2305 1364                       l1266 1B3E                       l2243 1B32  
                     l2235 1B14                       l2251 1BFE                       l2323 13B4  
                     l2315 138C                       l1276 1C32                       l2253 1C08  
                     l2341 1418                       l2333 13EE                       l2511 184E  
                     l2255 1C10                       l2327 13D8                       l2319 13B0  
                     l2265 1B9E                       l2353 1494                       l2329 13E2  
                     l2281 129A                       l2273 1272                       l2531 1676  
                     l2515 185A                       l2507 1842                       l2611 18A4  
                     l1803 1CA8                       l2187 1E10                       l2195 1C40  
                     l2259 1C26                       l2347 1440                       l2339 1410  
                     l2291 12D8                       l2355 14A0                       l2541 16C4  
                     l2613 18AE                       l2605 188E                       l2701 193A  
                     l2189 1E16                       l2197 1C4C                       l2269 1BC8  
                     l2357 14BC                       l2285 12A4                       l2463 1798  
                     l2631 18F0                       l2623 18D4                       l2615 18B6  
                     l1807 1CBE                       l2199 1C58                       l2287 12BA  
                     l2279 128C                       l2537 16B0                       l2473 17D6  
                     l1657 1E62                       l2449 1252                       l2547 16E0  
                     l2627 18E0                       l2299 133C                       l2469 17C2  
                     l2709 194E                       l2733 1CDA                       l2583 1742  
                     l2479 17F2                       l2745 1D14                       l2587 174E  
                     l2579 1736                       l2691 1922                       l2781 1B6A  
                     l2599 187C                       l2695 192A                       l2783 1B78  
                     l2779 1B5C                       l2787 1B8A                       l2795 1A04  
                     STR_1 0F0F                       STR_2 0F3F                       STR_3 0F61  
                     STR_4 0F73                       STR_5 0F73                       STR_6 0F73  
                     STR_7 0F83                       STR_8 0F73                       STR_9 0F73  
                     u1200 1A9A                       u1220 1AB4                       u1240 1AD0  
                     u1218 1A9C                       u1180 1A82                       u1238 1AB6  
                     u1360 1BBE                       u1258 1AD2                       u1370 1BE8  
                     u1198 1A84                       u1367 1BB4                       u1377 1BDE  
                     u2347 1A66                       u2357 1258                       u2367 1CAE  
                     u2377 1E56                       u2387 1E64                       u2397 1E76  
         ?_lcd_send_nibble 0001                       _anio 0050                       _flag 02E8  
                     _main 19FA                       _hora 0056                       fsr0h 000FEA  
                     indf0 000FEF                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
            __CFG_T1DIG$ON 000000                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000               ___param_bank 000010  
              _Delay1KTCYx 1E60              __CFG_PLLDIV$1 000000                      ?_main 0001  
          __end_of___awdiv 18FC                      STR_10 0F73                      STR_11 0F85  
                    STR_12 0F73                      STR_20 0F30                      STR_13 0F73  
                    STR_21 0F57                      STR_14 0F73                      STR_22 0F4C  
                    STR_23 0F25                      STR_15 0F87                      STR_16 0F81  
                    STR_24 0F7C                      STR_17 0F73                      STR_25 0F78  
                    STR_18 0F7F                      STR_26 0F6B                      STR_19 0F71  
    __size_of_Delay100TCYx 0012            ___awdiv@divisor 0003            __end_of___lwdiv 1B48  
             __delay_s@seg 0004            __end_of___lwmod 1C3C            ___awdiv@counter 0005  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
           __CFG_FCMEN$OFF 000000                      _Setup 1D1E                      _clear 1E4A  
          __end_of_dpowers 0F0B                      _mes_d 004A                      _mes_u 004B  
          __end_of_isdigit 1E4A             __pbitbssCOMRAM 02E8                      tablat 000FF5  
             lcd_putrs@ptr 0009                      status 000FD8            __end_of_sprintf 14CC  
          __end_of_twinkle 1D1E    __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1D66  
             _Delay100TCYx 1E72               __end_of_main 1A76            ??_lcd_send_byte 0004  
                   ??_main 0026              __activetblptr 000002           __end_of_RtccWrOn 1E96  
                   ?_Setup 0001                     ?_clear 0001                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _EECON2 000FA7                     _ANCON0 000F48  
                   _ANCON1 000F49           ___awdiv@dividend 0001           __end_of__delay_s 1CD4  
           __CFG_WDTEN$OFF 000000           RtccWriteDate@pDt 0001                     _RTCCFG 000F3F  
           __CFG_WPCFG$OFF 000000           __end_of_caratula 1EBA             __CFG_WPDIS$OFF 000000  
           __CFG_XINST$OFF 000000           __end_of_lcd_init 197C           __end_of_lcd_putc 1C88  
                   ___wmul 1DDC                  ??___awdiv 0005             __CFG_STVREN$ON 000000  
                   _diasem 0054                     _anio_d 0043                     _anio_u 0044  
                ??___lwdiv 0005                  ??___lwmod 000C                     _hora_d 0048  
                   _hora_u 0049                     clear_0 1D6C                     clear_1 1D7A  
         ___awdiv@quotient 0007                     _minuto 005A      __end_of_RtccWriteDate 175A  
    __end_of_RtccWriteTime 1866           RtccWriteTime@pTm 0001               __pdataCOMRAM 0050  
                ??_isdigit 0001               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_sprintf 0017  
                ??_twinkle 0025     __size_of_read_keyboard 02DE                 __accesstop 0060  
  __end_of__initialization 1DA0         __size_of_Write_RTC 0148              ___rparam_used 000001  
           __pcstackCOMRAM 0001              __end_of_Setup 1D66              __end_of_clear 1E60  
          __CFG_DSWDTPS$G2 000000            __CFG_OSC$INTOSC 000000                    ??_Setup 000E  
        lcd_gotoxy@address 0007                    ??_clear 0006         __size_of_lcd_putrs 0054  
             sprintf@width 0021                 __pbssBANK0 0060                 _dia_semana 0045  
RtccWriteTime@tempHourWDay 000A                 __pnvCOMRAM 0043                  ?_RtccWrOn 0001  
           lcd_send_byte@n 0003                    ?___wmul 0001              _read_keyboard 0F8A  
             ?_Delay1KTCYx 0001                  ?__delay_s 0001          __end_of_Write_RTC 1614  
           __delay_s@index 0005                 _lcd_comand 1E96                  ?_caratula 0001  
               _lcd_gotoxy 1E04                    _RTCVALH 000F99                    _RTCVALL 000F98  
                ?_lcd_init 0001                  ?_lcd_putc 0001                    __Hparam 0000  
                  __Lparam 0000   __size_of_lcd_send_nibble 0076                 ??_RtccWrOn 0001  
                  ___awdiv 1866          __end_of_lcd_putrs 1BF0             ?_read_keyboard 0001  
          __size_of___wmul 0028                    ___lwdiv 1AEC                    ___lwmod 1BF0  
             __psmallconst 0F00                _RtccTimeVal 0028                    __pcinit 1D66  
                  _fecha_d 0046                    _fecha_u 0047                    __ramtop 0F00  
               ??__delay_s 0001                    __ptext0 19FA                    __ptext1 1B48  
                  __ptext2 197C                    __ptext3 1CD4                    __ptext4 0F8A  
                  __ptext5 1268                    __ptext6 1E28                    __ptext7 1DDC  
                  __ptext8 1BF0                    __ptext9 1AEC                    _buffer2 0078  
                _T1CONbits 000FCD                    _dpowers 0F01                    _isdigit 1E28  
               ??_caratula 0006                    _segundo 0038                    _sprintf 1268  
               ??_lcd_init 0005                 ??_lcd_putc 0008                    _twinkle 1CD4  
     end_of_initialization 1DA0       lcd_send_byte@address 0004              __Lmediumconst 0000  
             twinkle@input 0025                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE                 _set_vision 1B48  
    __end_of_lcd_send_byte 1DDC                  _PORTAbits 000F80                  _PORTCbits 000F82  
         __CFG_DSBOREN$OFF 000000                ?_lcd_comand 0001           __CFG_CPUDIV$OSC1 000000  
                _TRISBbits 000F93                ?_lcd_gotoxy 0005            _LCD_INIT_STRING 0F0B  
         __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 000A        __CFG_MSSP7B_EN$MSK7 000000  
          ??_read_keyboard 0024           Delay100TCYx@unit 0001                 _write_Date 197C  
              __delay_s@it 0002             __end_of___wmul 1E04              __pidataCOMRAM 1EA4  
RtccWriteDate@tempHourWDay 000C          ??_lcd_send_nibble 0001       __size_of_Delay1KTCYx 0012  
         __CFG_DSWDTEN$OFF 000000        start_initialization 1D66       RtccWriteTime@wasAlrm 0006  
     RtccWriteTime@wasWrEn 0007     __size_of_RtccWriteDate 0146            RtccWriteDate@di 0003  
   __size_of_RtccWriteTime 010C        __size_of_lcd_comand 000E        __size_of_lcd_gotoxy 0024  
                 ??___wmul 0005                ?_set_vision 0001          __size_of_RtccWrOn 0012  
          RtccWriteTime@di 0003           __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91  
  __end_of_LCD_INIT_STRING 0F0F          __size_of__delay_s 004C                __pbssCOMRAM 0028  
                _Write_RTC 14CC               _isdigit$2329 0002          __size_of_caratula 0008  
          Delay1KTCYx@unit 0001          __size_of_lcd_init 0080                sprintf@flag 001D  
        __size_of_lcd_putc 004C                sprintf@prec 0020           ___lwdiv@dividend 0001  
            ?_Delay100TCYx 0001                   ?___awdiv 0001                   ?___lwdiv 0001  
              ?_write_Date 0001                   ?___lwmod 0008    RtccWriteTime@tempMinSec 0008  
                _lcd_putrs 1B9C              _RtccWriteDate 1614                __smallconst 0F00  
            _RtccWriteTime 175A                   ?_isdigit 0001       __CFG_RTCOSC$T1OSCREF 000000  
           __size_of_Setup 0048                 ?_Write_RTC 0001           ___lwdiv@quotient 0005  
           __size_of_clear 0016                   ?_sprintf 000D                   ?_twinkle 0001  
      __size_of_set_vision 0054           _RtccAlrmTimeDate 0060             ___wmul@product 0005  
                 _LATAbits 000F89                   _LATBbits 000F8A                   _PIE3bits 000FA3  
                _segundo_d 004E             ??_Delay100TCYx 0001                  _segundo_u 004F  
         __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 0005         _Rtcc_read_TimeDate 0070  
           ?_RtccWriteDate 0001                 ?_lcd_putrs 0009          ___wmul@multiplier 0001  
           ?_RtccWriteTime 0001                  lcd_init@i 0005               ??_lcd_comand 0005  
                main@input 0027                  lcd_putc@c 0008               ??_lcd_gotoxy 0006  
                copy_data0 1D94        __size_of_write_Date 007E            _lcd_send_nibble 1A76  
                 __Hrparam 0000                   _RtccDate 003B                   __Lrparam 0000  
                 _RtccTime 003F                   _RtccWrOn 1E84         __end_of_lcd_comand 1EA4  
       __end_of_lcd_gotoxy 1E28           __size_of___awdiv 0096           __size_of___lwdiv 005C  
         __size_of___lwmod 004C                   __delay_s 1C88               _RtccTimeDate 0068  
               sprintf@val 001E                   _caratula 1EB2           __size_of_isdigit 0022  
          ___lwdiv@divisor 0003                ??_Write_RTC 000E            ___lwdiv@counter 0007  
                 __ptext10 1B9C                   __ptext11 1C3C                   __ptext20 1DAA  
                 __ptext12 1E04                   __ptext21 1A76                   __ptext13 1C88  
                 __ptext22 1E72                   __ptext14 1E4A                   __ptext23 14CC  
                 __ptext15 1EB2                   __ptext24 1866                   __ptext16 1D1E  
                 __ptext25 175A                   __ptext17 18FC                   __ptext26 1614  
                 __ptext18 1E60                   __ptext27 1E84                   __ptext19 1E96  
                 _lcd_init 18FC                   _lcd_putc 1C3C           __size_of_sprintf 0264  
         __size_of_twinkle 004A     __size_of_lcd_send_byte 0032              __size_of_main 007C  
                 _minuto_d 004C                   _minuto_u 004D               ??_set_vision 0026  
    __end_of_read_keyboard 1268              ??_Delay1KTCYx 0001            ??_RtccWriteDate 0004  
          ??_RtccWriteTime 0004                ??_lcd_putrs 000B                _OSCTUNEbits 000F9B  
               _INTCONbits 000FF2         RtccWriteTime@wasOn 0005       __end_of_Delay100TCYx 1E84  
                 isdigit@c 0003                  sprintf@ap 001B    __end_of_lcd_send_nibble 1AEC  
                sprintf@sp 000D         __end_of_set_vision 1B9C           ___lwmod@dividend 0008  
               _OSCCONbits 000FD3      RtccWriteDate@tempYear 0007               ??_write_Date 0024  
            _lcd_send_byte 1DAA                 _RTCCFGbits 000F3F                   sprintf@c 0023  
                 sprintf@f 000F            ___lwmod@divisor 000A        __end_of_Delay1KTCYx 1E72  
          ___lwmod@counter 000C       RtccWriteDate@wasAlrm 0006       RtccWriteDate@wasWrEn 0009  
       __end_of_write_Date 19FA      lcd_send_nibble@nibble 0002  
